
PF_C4.elf:     file format elf32-littlenios2
PF_C4.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000201b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010040 memsz 0x00010040 flags r-x
    LOAD off    0x00011060 vaddr 0x00030060 paddr 0x00031afc align 2**12
         filesz 0x00001a9c memsz 0x00001a9c flags rw-
    LOAD off    0x00013598 vaddr 0x00033598 paddr 0x00033598 align 2**12
         filesz 0x00000000 memsz 0x000010a8 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fac8  000201b4  000201b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003e4  0002fc7c  0002fc7c  00010c7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a9c  00030060  00031afc  00011060  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000010a8  00033598  00033598  00013598  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  00012afc  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000f38  00000000  00000000  00012b28  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000016de  00000000  00000000  00013a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000266ac  00000000  00000000  0001513e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000935f  00000000  00000000  0003b7ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00017447  00000000  00000000  00044b49  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001bb4  00000000  00000000  0005bf90  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000279d  00000000  00000000  0005db44  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000e19f  00000000  00000000  000602e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  0006e480  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000d30  00000000  00000000  0006e4a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007267b  2**0
                  CONTENTS, READONLY
 18 .cpu          00000004  00000000  00000000  0007267e  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00072682  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00072683  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00072684  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00072688  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007268c  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  00072690  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0007269b  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  000726a6  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000003  00000000  00000000  000726b1  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001f  00000000  00000000  000726b4  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0003263e  00000000  00000000  000726d3  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
000201b4 l    d  .text	00000000 .text
0002fc7c l    d  .rodata	00000000 .rodata
00030060 l    d  .rwdata	00000000 .rwdata
00033598 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000201ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 w_log.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 e_pow.c
0002fccc l     O .rodata	00000010 bp
0002fcdc l     O .rodata	00000010 dp_l
0002fcec l     O .rodata	00000010 dp_h
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 s_rint.c
0002fcfc l     O .rodata	00000010 TWO52
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00023880 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
00030060 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002537c l     F .text	00000058 __sprint_r
0002fea6 l     O .rodata	00000010 blanks.3452
0002fe96 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000273e0 l     F .text	00000218 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00028ddc l     F .text	00000058 std
00028ee8 l     F .text	00000008 __fp_lock
00028ef0 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
00031ac8 l     O .rwdata	00000004 charset
0002fed8 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00030020 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0002d1e0 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 alt_close.c
0002d428 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d488 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d588 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002d6a8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002d788 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d8e4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002db10 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00031aec l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002ddac l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00030a1c l     O .rwdata	00001060 jtag_uart_0
0002de84 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e0c4 l     F .text	00000228 altera_avalon_jtag_uart_irq
0002e2ec l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002eb8c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002efb0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002f0ec l     F .text	000000dc alt_file_locked
0002f350 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0002fa64 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
0002fc18 l     F .text	00000040 alt_sim_halt
0002ab98 g     F .text	00000094 _mprec_log10
0002ac84 g     F .text	00000088 __any_on
0002c360 g     F .text	00000070 _isatty_r
0002fff8 g     O .rodata	00000028 __mprec_tinytens
0002d944 g     F .text	0000006c alt_main
00025254 g     F .text	000000a0 _puts_r
000343b0 g     O .bss	00000100 alt_irq
00022fb0 g     F .text	00000018 fabs
0002c3d0 g     F .text	00000078 _lseek_r
00020be0 g     F .text	00000188 log
00031afc g       *ABS*	00000000 __flash_rwdata_start
000201f0 g     F .text	00000154 ftod
000243a0 g     F .text	00000088 __eqdf2
00034640 g       *ABS*	00000000 __alt_heap_start
000251dc g     F .text	00000044 printf
0002be2c g     F .text	00000068 __sseek
00028e44 g     F .text	000000a4 __sinit
00031a88 g     O .rwdata	00000004 b
00029b1c g     F .text	00000084 _setlocale_r
00028f44 g     F .text	00000068 __sfmoreglue
0002d9d0 g     F .text	00000020 __malloc_unlock
00023620 g     F .text	00000174 __divsf3
0002a614 g     F .text	000000e0 memmove
00028f34 g     F .text	00000010 _cleanup
0002ad0c g     F .text	000000bc _Balloc
00031aac g     O .rwdata	00000004 N_dat
00031a9c g     O .rwdata	00000004 y_pj
000244b0 g     F .text	00000088 __gtdf2
000251cc g     F .text	00000010 __errno
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
0002c2ec g     F .text	00000074 _fstat_r
000335b4 g     O .bss	00000004 errno
000248a0 g     F .text	00000038 __make_dp
00024c8c g     F .text	0000002c __make_fp
000335bc g     O .bss	00000004 alt_argv
00039a7c g       *ABS*	00000000 _gp
0003089c g     O .rwdata	00000180 alt_fd_list
0002f574 g     F .text	00000094 alt_find_dev
0002a574 g     F .text	000000a0 memcpy
000335f8 g     O .bss	00000028 delta_pj
00028f28 g     F .text	0000000c _cleanup_r
000246d0 g     F .text	000000f8 __floatsidf
0002f074 g     F .text	00000078 alt_io_redirect
000245c0 g     F .text	00000088 __ltdf2
0002fc7c g       *ABS*	00000000 __DTOR_END__
000252f4 g     F .text	00000014 puts
0002aae8 g     F .text	000000b0 __ratio
00031aa8 g     O .rwdata	00000004 N_iter
0002e504 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00025220 g     F .text	00000034 _printf_r
0002d31c g     F .text	00000008 __udivsi3
0002d5e8 g     F .text	000000c0 isatty
0002ff08 g     O .rodata	000000c8 __mprec_tens
00031aa4 g     O .rwdata	00000004 N_in
00029af8 g     F .text	00000008 __locale_charset
0002f7e0 g     F .text	00000090 alt_icache_flush
000335a8 g     O .bss	00000004 __malloc_top_pad
00031ac4 g     O .rwdata	00000004 __mb_cur_max
00029b00 g     F .text	0000000c _localeconv_r
0002b404 g     F .text	0000003c __i2b
000294dc g     F .text	0000049c __sfvwrite_r
0002bdb4 g     F .text	00000070 _sbrk_r
0002c448 g     F .text	00000078 _read_r
00030460 g     O .rwdata	0000000c __lc_ctype
00031ae4 g     O .rwdata	00000004 alt_max_fd
00020344 g     F .text	00000170 dtof
00024fcc g     F .text	00000138 __unpack_d
0002c1c8 g     F .text	00000110 _fclose_r
00031a94 g     O .rwdata	00000004 lsfr
00028da8 g     F .text	00000034 fflush
000335ac g     O .bss	00000004 __malloc_max_sbrked_mem
0002382c g     F .text	00000054 __extendsfdf2
00023d10 g     F .text	00000074 __adddf3
0002a9c8 g     F .text	00000120 __b2d
0002ca9c g     F .text	000005b0 __umoddi3
0002d7f4 g     F .text	000000f0 lseek
00031ab8 g     O .rwdata	00000004 __fdlib_version
00031ac0 g     O .rwdata	00000004 _global_impure_ptr
0002b780 g     F .text	000005f4 _realloc_r
00034640 g       *ABS*	00000000 __bss_end
0002eeb8 g     F .text	000000f8 alt_iic_isr_register
0002f448 g     F .text	0000010c alt_tick
0002c4c0 g     F .text	000005dc __udivdi3
0002ffd0 g     O .rodata	00000028 __mprec_bigtens
0002b660 g     F .text	00000120 __s2b
0002d04c g     F .text	00000194 __floatunsidf
0002a8e8 g     F .text	00000060 __mcmp
00028f10 g     F .text	00000018 __fp_lock_all
0002ee70 g     F .text	00000048 alt_ic_irq_enabled
0002f3b0 g     F .text	00000098 alt_alarm_stop
000335c4 g     O .bss	00000004 alt_irq_active
000200ec g     F .exceptions	000000c8 alt_irq_handler
00030874 g     O .rwdata	00000028 alt_dev_null
0002302c g     F .text	00000210 rint
00024bc4 g     F .text	000000c8 __unpack_f
0002eabc g     F .text	0000001c alt_dcache_flush_all
0002a7b4 g     F .text	00000070 __hi0bits
000247c8 g     F .text	000000d8 __fixdfsi
00031afc g       *ABS*	00000000 __ram_rwdata_end
00031aa0 g     O .rwdata	00000004 N_hidden
00031adc g     O .rwdata	00000008 alt_dev_list
0002dc8c g     F .text	00000120 write
00030060 g       *ABS*	00000000 __ram_rodata_end
0002d4b4 g     F .text	000000d4 fstat
00024648 g     F .text	00000088 __ledf2
0002b540 g     F .text	00000120 __pow5mult
0003359c g     O .bss	00000004 __nlocale_changed
0002d324 g     F .text	00000008 __umodsi3
00034640 g       *ABS*	00000000 end
00024a64 g     F .text	00000160 __pack_f
0002e004 g     F .text	000000c0 altera_avalon_jtag_uart_init
0002fc78 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
000249e4 g     F .text	00000080 __clzsi2
0002e728 g     F .text	00000240 altera_avalon_jtag_uart_write
00028e34 g     F .text	00000004 __sfp_lock_acquire
0002a490 g     F .text	000000e4 memchr
000253d4 g     F .text	00001eac ___vfprintf_internal_r
000291c8 g     F .text	00000314 _free_r
0002fa68 g     F .text	000001b0 __call_exitprocs
000335a0 g     O .bss	00000004 __mlocale_changed
00031ad0 g     O .rwdata	00000004 __malloc_sbrk_base
000201b4 g     F .text	0000003c _start
000335c8 g     O .bss	00000004 _alt_tick_rate
0002b0d0 g     F .text	0000014c __lshift
000335cc g     O .bss	00000004 _alt_nticks
0002d9f0 g     F .text	00000120 read
0002de40 g     F .text	00000044 alt_sys_init
00023794 g     F .text	00000098 __floatsisf
0002f930 g     F .text	00000134 __register_exitproc
00031a84 g     O .rwdata	00000004 w_kj
0002b21c g     F .text	000001e8 __multiply
000219e8 g     F .text	00001300 __ieee754_pow
0002e39c g     F .text	00000074 altera_avalon_jtag_uart_close
00020d68 g     F .text	00000488 pow
00030060 g       *ABS*	00000000 __ram_rwdata_start
0002fc7c g       *ABS*	00000000 __ram_rodata_start
000335d0 g     O .bss	00000028 __malloc_current_mallinfo
0002adc8 g     F .text	0000017c __d2b
0002debc g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0002f728 g     F .text	000000b8 alt_get_fd
00025104 g     F .text	000000c8 __fpcmp_parts_d
0002c158 g     F .text	00000070 _close_r
00031a8c g     O .rwdata	00000004 training
0002f8bc g     F .text	00000074 memcmp
0002df6c g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00034640 g       *ABS*	00000000 __alt_stack_base
0002dfb4 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
000272a4 g     F .text	0000013c __swsetup_r
00033620 g     O .bss	00000190 outputs
00024148 g     F .text	00000258 __divdf3
00028fac g     F .text	000000f0 __sfp
0002ac2c g     F .text	00000058 __copybits
0003046c g     O .rwdata	00000408 __malloc_av_
00028e40 g     F .text	00000004 __sinit_lock_release
00023d84 g     F .text	000003c4 __muldf3
0002bf10 g     F .text	00000060 __sread
0002fd0c g     O .rodata	00000010 __thenan_sf
0002f608 g     F .text	00000120 alt_find_file
0002ead8 g     F .text	000000b4 alt_dev_llist_insert
0002d9b0 g     F .text	00000020 __malloc_lock
0002dbd0 g     F .text	000000bc sbrk
00031a80 g     O .rwdata	00000004 w_ji
00028bac g     F .text	000001fc _fflush_r
0002c0a4 g     F .text	000000b4 _calloc_r
000337b0 g     O .bss	00000600 In
00033598 g       *ABS*	00000000 __bss_start
0002a6f4 g     F .text	00000098 memset
000204b4 g     F .text	0000072c main
00020000 g       *ABS*	00000000 __alt_mem_RAM
000335c0 g     O .bss	00000004 alt_envp
000335b0 g     O .bss	00000004 __malloc_max_total_mem
0002df14 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0002be24 g     F .text	00000008 __sclose
00023014 g     F .text	00000008 matherr
00040000 g       *ABS*	00000000 __alt_heap_limit
0002c2d8 g     F .text	00000014 fclose
000248d8 g     F .text	00000074 __truncdfsf2
000344b0 g     O .bss	00000190 _atexit0
000275f8 g     F .text	000015b4 _dtoa_r
00029d50 g     F .text	00000740 _malloc_r
00031ae8 g     O .rwdata	00000004 alt_errno
00029a40 g     F .text	000000b8 _fwalk
0002d25c g     F .text	00000060 __divsi3
0002fd1c g     O .rodata	00000014 __thenan_df
0002909c g     F .text	0000012c _malloc_trim_r
0002fc7c g       *ABS*	00000000 __CTOR_END__
00023440 g     F .text	000001e0 __mulsf3
00022fc8 g     F .text	0000001c finite
0002bf70 g     F .text	000000bc strcmp
0002fc7c g       *ABS*	00000000 __flash_rodata_start
0002fc7c g       *ABS*	00000000 __DTOR_LIST__
0002341c g     F .text	00000024 copysign
00024428 g     F .text	00000088 __nedf2
0002de0c g     F .text	00000034 alt_irq_init
0002db70 g     F .text	00000060 alt_release_fd
0002fd30 g     O .rodata	00000100 __clz_tab
000335a4 g     O .bss	00000004 _PathLocale
0002f870 g     F .text	00000014 atexit
0002c02c g     F .text	00000078 _write_r
00029ba0 g     F .text	0000001c setlocale
00031abc g     O .rwdata	00000004 _impure_ptr
000335b8 g     O .bss	00000004 alt_argc
0002323c g     F .text	000001e0 scalbn
0002ec50 g     F .text	00000064 _do_dtors
000211f0 g     F .text	000007f8 __ieee754_log
00020020 g       .exceptions	00000000 alt_irq_entry
0002a948 g     F .text	00000080 __ulp
0002bd74 g     F .text	00000040 __isinfd
00028ef8 g     F .text	00000018 __fp_unlock_all
00031a98 g     O .rwdata	00000004 y_pk
00031ad4 g     O .rwdata	00000008 alt_fs_list
0002301c g     F .text	00000010 nan
00020020 g       *ABS*	00000000 __ram_exceptions_start
00029b0c g     F .text	00000010 localeconv
00022ce8 g     F .text	000002c8 __ieee754_sqrt
0002ece4 g     F .text	00000050 alt_ic_isr_register
00033db0 g     O .bss	00000600 d_pk
00031afc g       *ABS*	00000000 _edata
00034640 g       *ABS*	00000000 _end
000201b4 g       *ABS*	00000000 __ram_exceptions_end
0002e410 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0002edd0 g     F .text	000000a0 alt_ic_irq_disable
0002be94 g     F .text	0000007c __swrite
00031acc g     O .rwdata	00000004 __malloc_trim_threshold
0002f554 g     F .text	00000020 altera_nios2_qsys_irq_init
0002f884 g     F .text	00000038 exit
00033598 g     O .bss	00000004 delta_pk
00029978 g     F .text	000000c8 _fwalk_reent
0002af44 g     F .text	0000018c __mdiff
0002d2bc g     F .text	00000060 __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00028e38 g     F .text	00000004 __sfp_lock_release
00031a90 g     O .rwdata	00000004 start
0002fc58 g     F .text	00000020 _exit
00022fe4 g     F .text	00000030 __isnand
0002e968 g     F .text	00000154 alt_alarm_start
0002494c g     F .text	00000098 __muldi3
00029bbc g     F .text	00000194 __smakebuf_r
00025308 g     F .text	00000074 strlen
00031a7c g     O .rwdata	00000004 ready
0002f1c8 g     F .text	00000188 open
00024538 g     F .text	00000088 __gedf2
00031ab0 g     O .rwdata	00000008 eta
0002ecb4 g     F .text	00000030 alt_icache_flush_all
00031af0 g     O .rwdata	00000004 alt_priority_mask
0002ed34 g     F .text	0000009c alt_ic_irq_enable
00027280 g     F .text	00000024 __vfprintf_internal
00023c90 g     F .text	00000080 __subdf3
0002a824 g     F .text	000000c4 __lo0bits
00031af4 g     O .rwdata	00000008 alt_alarm_list
0002ebec g     F .text	00000064 _do_ctors
0002d32c g     F .text	000000fc close
0002d708 g     F .text	00000080 alt_load
00024cb8 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00028e3c g     F .text	00000004 __sinit_lock_acquire
0002b440 g     F .text	00000100 __multadd
0002a78c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08406d14 	ori	at,at,436
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_RAM-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
   20044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200ec0 	call	200ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000306 	br	20098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   2008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   20094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   20098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   2009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
   200c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
   200e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200e8:	ef80083a 	eret

000200ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200ec:	defff904 	addi	sp,sp,-28
   200f0:	dfc00615 	stw	ra,24(sp)
   200f4:	df000515 	stw	fp,20(sp)
   200f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   200fc:	0005313a 	rdctl	r2,ipending
   20100:	e0bffc15 	stw	r2,-16(fp)

  return active;
   20104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   20108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   2010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20110:	00800044 	movi	r2,1
   20114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   20118:	e0ffff17 	ldw	r3,-4(fp)
   2011c:	e0bffe17 	ldw	r2,-8(fp)
   20120:	1884703a 	and	r2,r3,r2
   20124:	1005003a 	cmpeq	r2,r2,zero
   20128:	1000161e 	bne	r2,zero,20184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2012c:	e0bffd17 	ldw	r2,-12(fp)
   20130:	00c000f4 	movhi	r3,3
   20134:	18d0ec04 	addi	r3,r3,17328
   20138:	100490fa 	slli	r2,r2,3
   2013c:	10c5883a 	add	r2,r2,r3
   20140:	11400017 	ldw	r5,0(r2)
   20144:	e0bffd17 	ldw	r2,-12(fp)
   20148:	00c000f4 	movhi	r3,3
   2014c:	18d0ec04 	addi	r3,r3,17328
   20150:	100490fa 	slli	r2,r2,3
   20154:	10c5883a 	add	r2,r2,r3
   20158:	10800104 	addi	r2,r2,4
   2015c:	11000017 	ldw	r4,0(r2)
   20160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20164:	0005313a 	rdctl	r2,ipending
   20168:	e0bffb15 	stw	r2,-20(fp)

  return active;
   2016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   20170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   20174:	e0bfff17 	ldw	r2,-4(fp)
   20178:	1004c03a 	cmpne	r2,r2,zero
   2017c:	103fe31e 	bne	r2,zero,2010c <alt_irq_handler+0x20>
   20180:	00000706 	br	201a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   20184:	e0bffe17 	ldw	r2,-8(fp)
   20188:	1085883a 	add	r2,r2,r2
   2018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   20190:	e0bffd17 	ldw	r2,-12(fp)
   20194:	10800044 	addi	r2,r2,1
   20198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   2019c:	003fde06 	br	20118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   201a0:	e037883a 	mov	sp,fp
   201a4:	dfc00117 	ldw	ra,4(sp)
   201a8:	df000017 	ldw	fp,0(sp)
   201ac:	dec00204 	addi	sp,sp,8
   201b0:	f800283a 	ret

Disassembly of section .text:

000201b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   201b4:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   201b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
   201bc:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   201c0:	d6a69f14 	ori	gp,gp,39548
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   201c4:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   201c8:	108d6614 	ori	r2,r2,13720

    movhi r3, %hi(__bss_end)
   201cc:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   201d0:	18d19014 	ori	r3,r3,17984

    beq r2, r3, 1f
   201d4:	10c00326 	beq	r2,r3,201e4 <_start+0x30>

0:
    stw zero, (r2)
   201d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   201dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   201e0:	10fffd36 	bltu	r2,r3,201d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   201e4:	002d7080 	call	2d708 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   201e8:	002d9440 	call	2d944 <alt_main>

000201ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   201ec:	003fff06 	br	201ec <alt_after_alt_main>

000201f0 <ftod>:
#include <float.h>
#include <time.h>
#include<math.h>


double ftod(int32_t in){
   201f0:	defff704 	addi	sp,sp,-36
   201f4:	dfc00815 	stw	ra,32(sp)
   201f8:	df000715 	stw	fp,28(sp)
   201fc:	df000704 	addi	fp,sp,28
   20200:	e13ffe15 	stw	r4,-8(fp)
    double out = 0, sig;
   20204:	e03ffc15 	stw	zero,-16(fp)
   20208:	e03ffd15 	stw	zero,-12(fp)
    int i;
    if(in >> 31 != 0){
   2020c:	e0bffe17 	ldw	r2,-8(fp)
   20210:	1005d7fa 	srai	r2,r2,31
   20214:	1005003a 	cmpeq	r2,r2,zero
   20218:	1000041e 	bne	r2,zero,2022c <ftod+0x3c>
        sig = -1.0;
   2021c:	e03ffa15 	stw	zero,-24(fp)
   20220:	00affc34 	movhi	r2,49136
   20224:	e0bffb15 	stw	r2,-20(fp)
   20228:	00000306 	br	20238 <ftod+0x48>
    }
    else{sig = 1.0;}
   2022c:	e03ffa15 	stw	zero,-24(fp)
   20230:	008ffc34 	movhi	r2,16368
   20234:	e0bffb15 	stw	r2,-20(fp)
    in = abs(in);
   20238:	e0bffe17 	ldw	r2,-8(fp)
   2023c:	e0bfff15 	stw	r2,-4(fp)
   20240:	e0ffff17 	ldw	r3,-4(fp)
   20244:	1804403a 	cmpge	r2,r3,zero
   20248:	1000031e 	bne	r2,zero,20258 <ftod+0x68>
   2024c:	e0bfff17 	ldw	r2,-4(fp)
   20250:	0085c83a 	sub	r2,zero,r2
   20254:	e0bfff15 	stw	r2,-4(fp)
   20258:	e0ffff17 	ldw	r3,-4(fp)
   2025c:	e0fffe15 	stw	r3,-8(fp)
    for(i=-24;i<7;i++){
   20260:	00bffa04 	movi	r2,-24
   20264:	e0bff915 	stw	r2,-28(fp)
   20268:	00002106 	br	202f0 <ftod+0x100>
        if((in & 0x1) == 0x1){out+= pow(2,i);}
   2026c:	e0bffe17 	ldw	r2,-8(fp)
   20270:	1080004c 	andi	r2,r2,1
   20274:	10803fcc 	andi	r2,r2,255
   20278:	1005003a 	cmpeq	r2,r2,zero
   2027c:	1000161e 	bne	r2,zero,202d8 <ftod+0xe8>
   20280:	e13ff917 	ldw	r4,-28(fp)
   20284:	00246d00 	call	246d0 <__floatsidf>
   20288:	100f883a 	mov	r7,r2
   2028c:	1811883a 	mov	r8,r3
   20290:	0009883a 	mov	r4,zero
   20294:	01500034 	movhi	r5,16384
   20298:	380d883a 	mov	r6,r7
   2029c:	400f883a 	mov	r7,r8
   202a0:	0020d680 	call	20d68 <pow>
   202a4:	1009883a 	mov	r4,r2
   202a8:	180b883a 	mov	r5,r3
   202ac:	2005883a 	mov	r2,r4
   202b0:	2807883a 	mov	r3,r5
   202b4:	e13ffc17 	ldw	r4,-16(fp)
   202b8:	e17ffd17 	ldw	r5,-12(fp)
   202bc:	100d883a 	mov	r6,r2
   202c0:	180f883a 	mov	r7,r3
   202c4:	0023d100 	call	23d10 <__adddf3>
   202c8:	1009883a 	mov	r4,r2
   202cc:	180b883a 	mov	r5,r3
   202d0:	e13ffc15 	stw	r4,-16(fp)
   202d4:	e17ffd15 	stw	r5,-12(fp)
        in = in >> 1;
   202d8:	e0bffe17 	ldw	r2,-8(fp)
   202dc:	1005d07a 	srai	r2,r2,1
   202e0:	e0bffe15 	stw	r2,-8(fp)
    if(in >> 31 != 0){
        sig = -1.0;
    }
    else{sig = 1.0;}
    in = abs(in);
    for(i=-24;i<7;i++){
   202e4:	e0bff917 	ldw	r2,-28(fp)
   202e8:	10800044 	addi	r2,r2,1
   202ec:	e0bff915 	stw	r2,-28(fp)
   202f0:	e0bff917 	ldw	r2,-28(fp)
   202f4:	108001d0 	cmplti	r2,r2,7
   202f8:	103fdc1e 	bne	r2,zero,2026c <ftod+0x7c>
        if((in & 0x1) == 0x1){out+= pow(2,i);}
        in = in >> 1;
    }
    return out*sig;
   202fc:	e13ffc17 	ldw	r4,-16(fp)
   20300:	e17ffd17 	ldw	r5,-12(fp)
   20304:	e1bffa17 	ldw	r6,-24(fp)
   20308:	e1fffb17 	ldw	r7,-20(fp)
   2030c:	0023d840 	call	23d84 <__muldf3>
   20310:	1009883a 	mov	r4,r2
   20314:	180b883a 	mov	r5,r3
   20318:	200d883a 	mov	r6,r4
   2031c:	280f883a 	mov	r7,r5
   20320:	3007883a 	mov	r3,r6
   20324:	3809883a 	mov	r4,r7
}
   20328:	1805883a 	mov	r2,r3
   2032c:	2007883a 	mov	r3,r4
   20330:	e037883a 	mov	sp,fp
   20334:	dfc00117 	ldw	ra,4(sp)
   20338:	df000017 	ldw	fp,0(sp)
   2033c:	dec00204 	addi	sp,sp,8
   20340:	f800283a 	ret

00020344 <dtof>:

int32_t dtof(double in){
   20344:	defff904 	addi	sp,sp,-28
   20348:	dfc00615 	stw	ra,24(sp)
   2034c:	df000515 	stw	fp,20(sp)
   20350:	df000504 	addi	fp,sp,20
   20354:	e13ffe15 	stw	r4,-8(fp)
   20358:	e17fff15 	stw	r5,-4(fp)
    int32_t out = 0, sig;
   2035c:	e03ffd15 	stw	zero,-12(fp)
    int i;

    if(in >= 0){
   20360:	e13ffe17 	ldw	r4,-8(fp)
   20364:	e17fff17 	ldw	r5,-4(fp)
   20368:	000d883a 	mov	r6,zero
   2036c:	000f883a 	mov	r7,zero
   20370:	00245380 	call	24538 <__gedf2>
   20374:	1004403a 	cmpge	r2,r2,zero
   20378:	1000011e 	bne	r2,zero,20380 <dtof+0x3c>
   2037c:	00000306 	br	2038c <dtof+0x48>
        sig = 1;
   20380:	00800044 	movi	r2,1
   20384:	e0bffc15 	stw	r2,-16(fp)
   20388:	00000706 	br	203a8 <dtof+0x64>
    }
    else{sig = -1; in = in * -1.0;}
   2038c:	00bfffc4 	movi	r2,-1
   20390:	e0bffc15 	stw	r2,-16(fp)
   20394:	e13fff17 	ldw	r4,-4(fp)
   20398:	e0bffe17 	ldw	r2,-8(fp)
   2039c:	20e0003c 	xorhi	r3,r4,32768
   203a0:	e0bffe15 	stw	r2,-8(fp)
   203a4:	e0ffff15 	stw	r3,-4(fp)
    out = (int32_t)in;
   203a8:	e13ffe17 	ldw	r4,-8(fp)
   203ac:	e17fff17 	ldw	r5,-4(fp)
   203b0:	00247c80 	call	247c8 <__fixdfsi>
   203b4:	e0bffd15 	stw	r2,-12(fp)
    in = in - out;
   203b8:	e13ffd17 	ldw	r4,-12(fp)
   203bc:	00246d00 	call	246d0 <__floatsidf>
   203c0:	100f883a 	mov	r7,r2
   203c4:	1811883a 	mov	r8,r3
   203c8:	e13ffe17 	ldw	r4,-8(fp)
   203cc:	e17fff17 	ldw	r5,-4(fp)
   203d0:	380d883a 	mov	r6,r7
   203d4:	400f883a 	mov	r7,r8
   203d8:	0023c900 	call	23c90 <__subdf3>
   203dc:	1009883a 	mov	r4,r2
   203e0:	180b883a 	mov	r5,r3
   203e4:	e13ffe15 	stw	r4,-8(fp)
   203e8:	e17fff15 	stw	r5,-4(fp)
	for(i=0;i<24;i++){
   203ec:	e03ffb15 	stw	zero,-20(fp)
   203f0:	00002506 	br	20488 <dtof+0x144>
		out = out << 1;
   203f4:	e0bffd17 	ldw	r2,-12(fp)
   203f8:	1085883a 	add	r2,r2,r2
   203fc:	e0bffd15 	stw	r2,-12(fp)
		in = in*2;
   20400:	e0bffe17 	ldw	r2,-8(fp)
   20404:	e0ffff17 	ldw	r3,-4(fp)
   20408:	1009883a 	mov	r4,r2
   2040c:	180b883a 	mov	r5,r3
   20410:	100d883a 	mov	r6,r2
   20414:	180f883a 	mov	r7,r3
   20418:	0023d100 	call	23d10 <__adddf3>
   2041c:	1009883a 	mov	r4,r2
   20420:	180b883a 	mov	r5,r3
   20424:	e13ffe15 	stw	r4,-8(fp)
   20428:	e17fff15 	stw	r5,-4(fp)
		if(in>=1){out = out|(0x1);in = in - 1;}
   2042c:	e13ffe17 	ldw	r4,-8(fp)
   20430:	e17fff17 	ldw	r5,-4(fp)
   20434:	000d883a 	mov	r6,zero
   20438:	01cffc34 	movhi	r7,16368
   2043c:	00245380 	call	24538 <__gedf2>
   20440:	1004403a 	cmpge	r2,r2,zero
   20444:	1000011e 	bne	r2,zero,2044c <dtof+0x108>
   20448:	00000c06 	br	2047c <dtof+0x138>
   2044c:	e0bffd17 	ldw	r2,-12(fp)
   20450:	10800054 	ori	r2,r2,1
   20454:	e0bffd15 	stw	r2,-12(fp)
   20458:	e13ffe17 	ldw	r4,-8(fp)
   2045c:	e17fff17 	ldw	r5,-4(fp)
   20460:	000d883a 	mov	r6,zero
   20464:	01cffc34 	movhi	r7,16368
   20468:	0023c900 	call	23c90 <__subdf3>
   2046c:	1009883a 	mov	r4,r2
   20470:	180b883a 	mov	r5,r3
   20474:	e13ffe15 	stw	r4,-8(fp)
   20478:	e17fff15 	stw	r5,-4(fp)
        sig = 1;
    }
    else{sig = -1; in = in * -1.0;}
    out = (int32_t)in;
    in = in - out;
	for(i=0;i<24;i++){
   2047c:	e0bffb17 	ldw	r2,-20(fp)
   20480:	10800044 	addi	r2,r2,1
   20484:	e0bffb15 	stw	r2,-20(fp)
   20488:	e0bffb17 	ldw	r2,-20(fp)
   2048c:	10800610 	cmplti	r2,r2,24
   20490:	103fd81e 	bne	r2,zero,203f4 <dtof+0xb0>
		out = out << 1;
		in = in*2;
		if(in>=1){out = out|(0x1);in = in - 1;}
    }
    return out*sig;
   20494:	e0fffd17 	ldw	r3,-12(fp)
   20498:	e0bffc17 	ldw	r2,-16(fp)
   2049c:	1885383a 	mul	r2,r3,r2
}
   204a0:	e037883a 	mov	sp,fp
   204a4:	dfc00117 	ldw	ra,4(sp)
   204a8:	df000017 	ldw	fp,0(sp)
   204ac:	dec00204 	addi	sp,sp,8
   204b0:	f800283a 	ret

000204b4 <main>:
		0.583333,1.43333575,1.3666688333,2.6833400833,1.43333575,1.3666688333,1.1666680833,0.1666666667,1.3666688333,1.46666925,2.7166729167,1.1500013333,1.46666925,1.7166701667,1.7500036667,0.1666666667,1.1666680833,1.25000175,1.1333346667,1.4500025,
		1.1666680833,1.7166701667,1.25000175,0.9166671667,0.7666665833,1.1333346667,1.0166675,1.1833348333,1.1833348333,1.1333346667,1.1833348333,2.6833400833,1.9833379167,1.1166679167,2.6833400833,1.43333575,1.1833348333,1.1333346667,1.46666925,1.43333575,1.7333369167};
*/
double In [192];
int main()
{
   204b4:	deffec04 	addi	sp,sp,-80
   204b8:	dfc01315 	stw	ra,76(sp)
   204bc:	df001215 	stw	fp,72(sp)
   204c0:	dc801115 	stw	r18,68(sp)
   204c4:	dc401015 	stw	r17,64(sp)
   204c8:	dc000f15 	stw	r16,60(sp)
   204cc:	df000f04 	addi	fp,sp,60
	int32_t data1;
	int32_t data2;
	int32_t data3;
	int32_t data4;

	for (i=0;i<80;i=i+4){
   204d0:	e03ffa15 	stw	zero,-24(fp)
   204d4:	00002006 	br	20558 <main+0xa4>
		data1 = *(lsfr);
   204d8:	d0a00617 	ldw	r2,-32744(gp)
   204dc:	10800017 	ldw	r2,0(r2)
   204e0:	e0bff715 	stw	r2,-36(fp)
		data2 = *(lsfr);
   204e4:	d0a00617 	ldw	r2,-32744(gp)
   204e8:	10800017 	ldw	r2,0(r2)
   204ec:	e0bff615 	stw	r2,-40(fp)
		data3 = *(lsfr);
   204f0:	d0a00617 	ldw	r2,-32744(gp)
   204f4:	10800017 	ldw	r2,0(r2)
   204f8:	e0bff515 	stw	r2,-44(fp)
		data4 = 0;
   204fc:	e03ff415 	stw	zero,-48(fp)

		data_t = data4 << 24 | data3 << 16 | data2 << 8 | data1;
   20500:	e0bff417 	ldw	r2,-48(fp)
   20504:	1006963a 	slli	r3,r2,24
   20508:	e0bff517 	ldw	r2,-44(fp)
   2050c:	1004943a 	slli	r2,r2,16
   20510:	1886b03a 	or	r3,r3,r2
   20514:	e0bff617 	ldw	r2,-40(fp)
   20518:	1004923a 	slli	r2,r2,8
   2051c:	1886b03a 	or	r3,r3,r2
   20520:	e0bff717 	ldw	r2,-36(fp)
   20524:	1884b03a 	or	r2,r3,r2
   20528:	e0bff815 	stw	r2,-32(fp)
		*(w_ji+i) = data_t;
   2052c:	e0bffa17 	ldw	r2,-24(fp)
   20530:	1085883a 	add	r2,r2,r2
   20534:	1085883a 	add	r2,r2,r2
   20538:	1007883a 	mov	r3,r2
   2053c:	d0a00117 	ldw	r2,-32764(gp)
   20540:	1887883a 	add	r3,r3,r2
   20544:	e0bff817 	ldw	r2,-32(fp)
   20548:	18800015 	stw	r2,0(r3)
	int32_t data1;
	int32_t data2;
	int32_t data3;
	int32_t data4;

	for (i=0;i<80;i=i+4){
   2054c:	e0bffa17 	ldw	r2,-24(fp)
   20550:	10800104 	addi	r2,r2,4
   20554:	e0bffa15 	stw	r2,-24(fp)
   20558:	e0bffa17 	ldw	r2,-24(fp)
   2055c:	10801410 	cmplti	r2,r2,80
   20560:	103fdd1e 	bne	r2,zero,204d8 <main+0x24>
		*(w_ji+i) = data_t;
	}
//printf("----------------------------------------------------------- \n");

	int pos,x;
	*b=dtof(-1.72); //-1.72
   20564:	d4200317 	ldw	r16,-32756(gp)
   20568:	012e14b4 	movhi	r4,47186
   2056c:	213ae144 	addi	r4,r4,-5243
   20570:	016fff34 	movhi	r5,49148
   20574:	29614784 	addi	r5,r5,-31458
   20578:	00203440 	call	20344 <dtof>
   2057c:	80800015 	stw	r2,0(r16)

	for (iter=0;iter<6;iter++) {
   20580:	e03ff915 	stw	zero,-28(fp)
   20584:	00016906 	br	20b2c <main+0x678>
		printf("----------------------------------------------------------- \n");
   20588:	010000f4 	movhi	r4,3
   2058c:	213f1f04 	addi	r4,r4,-900
   20590:	00252f40 	call	252f4 <puts>
		for (pos=0;pos<N_dat;pos++){
   20594:	e03ff315 	stw	zero,-52(fp)
   20598:	00015e06 	br	20b14 <main+0x660>
			In[pos] = (((float) pos*5))/(float) (N_dat);
   2059c:	e47ff317 	ldw	r17,-52(fp)
   205a0:	e13ff317 	ldw	r4,-52(fp)
   205a4:	00237940 	call	23794 <__floatsisf>
   205a8:	1009883a 	mov	r4,r2
   205ac:	01502834 	movhi	r5,16544
   205b0:	00234400 	call	23440 <__mulsf3>
   205b4:	1021883a 	mov	r16,r2
   205b8:	d1200c17 	ldw	r4,-32720(gp)
   205bc:	00237940 	call	23794 <__floatsisf>
   205c0:	8009883a 	mov	r4,r16
   205c4:	100b883a 	mov	r5,r2
   205c8:	00236200 	call	23620 <__divsf3>
   205cc:	1009883a 	mov	r4,r2
   205d0:	002382c0 	call	2382c <__extendsfdf2>
   205d4:	1009883a 	mov	r4,r2
   205d8:	180b883a 	mov	r5,r3
   205dc:	00c000f4 	movhi	r3,3
   205e0:	18cdec04 	addi	r3,r3,14256
   205e4:	880490fa 	slli	r2,r17,3
   205e8:	10c5883a 	add	r2,r2,r3
   205ec:	11000015 	stw	r4,0(r2)
   205f0:	11400115 	stw	r5,4(r2)
			d_pk[pos]=(float)(log(In[pos]+1));///2.0;
   205f4:	e43ff317 	ldw	r16,-52(fp)
   205f8:	e0bff317 	ldw	r2,-52(fp)
   205fc:	00c000f4 	movhi	r3,3
   20600:	18cdec04 	addi	r3,r3,14256
   20604:	100490fa 	slli	r2,r2,3
   20608:	10c9883a 	add	r4,r2,r3
   2060c:	20800017 	ldw	r2,0(r4)
   20610:	20c00117 	ldw	r3,4(r4)
   20614:	1009883a 	mov	r4,r2
   20618:	180b883a 	mov	r5,r3
   2061c:	000d883a 	mov	r6,zero
   20620:	01cffc34 	movhi	r7,16368
   20624:	0023d100 	call	23d10 <__adddf3>
   20628:	1009883a 	mov	r4,r2
   2062c:	180b883a 	mov	r5,r3
   20630:	2005883a 	mov	r2,r4
   20634:	2807883a 	mov	r3,r5
   20638:	1009883a 	mov	r4,r2
   2063c:	180b883a 	mov	r5,r3
   20640:	0020be00 	call	20be0 <log>
   20644:	100b883a 	mov	r5,r2
   20648:	180d883a 	mov	r6,r3
   2064c:	2809883a 	mov	r4,r5
   20650:	300b883a 	mov	r5,r6
   20654:	00248d80 	call	248d8 <__truncdfsf2>
   20658:	1009883a 	mov	r4,r2
   2065c:	002382c0 	call	2382c <__extendsfdf2>
   20660:	1009883a 	mov	r4,r2
   20664:	180b883a 	mov	r5,r3
   20668:	00c000f4 	movhi	r3,3
   2066c:	18cf6c04 	addi	r3,r3,15792
   20670:	800490fa 	slli	r2,r16,3
   20674:	10c5883a 	add	r2,r2,r3
   20678:	11000015 	stw	r4,0(r2)
   2067c:	11400115 	stw	r5,4(r2)

			*training = dtof(In[pos]);
   20680:	d4200417 	ldw	r16,-32752(gp)
   20684:	e0bff317 	ldw	r2,-52(fp)
   20688:	00c000f4 	movhi	r3,3
   2068c:	18cdec04 	addi	r3,r3,14256
   20690:	100490fa 	slli	r2,r2,3
   20694:	10c9883a 	add	r4,r2,r3
   20698:	20800017 	ldw	r2,0(r4)
   2069c:	20c00117 	ldw	r3,4(r4)
   206a0:	1009883a 	mov	r4,r2
   206a4:	180b883a 	mov	r5,r3
   206a8:	00203440 	call	20344 <dtof>
   206ac:	80800015 	stw	r2,0(r16)
			// llamar a la red
			*start=1;
   206b0:	d0e00517 	ldw	r3,-32748(gp)
   206b4:	00800044 	movi	r2,1
   206b8:	18800015 	stw	r2,0(r3)
			//output delta computing
			//printf("DPK = %f\n",d_pk[pos]);
			//delta_pk=(d_pk[pos]-ftod(*(y_pk)));
			delta_pk=(d_pk[pos]-ftod(*(y_pk)));
   206bc:	e0bff317 	ldw	r2,-52(fp)
   206c0:	00c000f4 	movhi	r3,3
   206c4:	18cf6c04 	addi	r3,r3,15792
   206c8:	100490fa 	slli	r2,r2,3
   206cc:	10c5883a 	add	r2,r2,r3
   206d0:	14000017 	ldw	r16,0(r2)
   206d4:	14400117 	ldw	r17,4(r2)
   206d8:	d0a00717 	ldw	r2,-32740(gp)
   206dc:	11000017 	ldw	r4,0(r2)
   206e0:	00201f00 	call	201f0 <ftod>
   206e4:	100f883a 	mov	r7,r2
   206e8:	1811883a 	mov	r8,r3
   206ec:	8009883a 	mov	r4,r16
   206f0:	880b883a 	mov	r5,r17
   206f4:	380d883a 	mov	r6,r7
   206f8:	400f883a 	mov	r7,r8
   206fc:	0023c900 	call	23c90 <__subdf3>
   20700:	1009883a 	mov	r4,r2
   20704:	180b883a 	mov	r5,r3
   20708:	2005883a 	mov	r2,r4
   2070c:	2807883a 	mov	r3,r5
   20710:	1009883a 	mov	r4,r2
   20714:	180b883a 	mov	r5,r3
   20718:	00248d80 	call	248d8 <__truncdfsf2>
   2071c:	d0a6c715 	stw	r2,-25828(gp)


			//printf("Delta = %f\n",delta_pk);
			//hidden delta computing
				for (i=0;i<N_hidden;i++) {
   20720:	e03ffa15 	stw	zero,-24(fp)
   20724:	0000bd06 	br	20a1c <main+0x568>
					//printf("<pjffff: %f \n",ftod(*y_pj));
					c_w_kj = ftod(*(w_kj+i*4));
   20728:	e0bffa17 	ldw	r2,-24(fp)
   2072c:	1004913a 	slli	r2,r2,4
   20730:	1007883a 	mov	r3,r2
   20734:	d0a00217 	ldw	r2,-32760(gp)
   20738:	1885883a 	add	r2,r3,r2
   2073c:	11000017 	ldw	r4,0(r2)
   20740:	00201f00 	call	201f0 <ftod>
   20744:	1009883a 	mov	r4,r2
   20748:	180b883a 	mov	r5,r3
   2074c:	e13ffe15 	stw	r4,-8(fp)
   20750:	e17fff15 	stw	r5,-4(fp)
					c_y_pj = ftod(*(y_pj+i*4));
   20754:	e0bffa17 	ldw	r2,-24(fp)
   20758:	1004913a 	slli	r2,r2,4
   2075c:	1007883a 	mov	r3,r2
   20760:	d0a00817 	ldw	r2,-32736(gp)
   20764:	1885883a 	add	r2,r3,r2
   20768:	11000017 	ldw	r4,0(r2)
   2076c:	00201f00 	call	201f0 <ftod>
   20770:	1009883a 	mov	r4,r2
   20774:	180b883a 	mov	r5,r3
   20778:	e13ffc15 	stw	r4,-16(fp)
   2077c:	e17ffd15 	stw	r5,-12(fp)
					*(w_kj+i*4) = dtof(c_w_kj + eta * delta_pk *c_y_pj);  //output weights adjustment
   20780:	e0bffa17 	ldw	r2,-24(fp)
   20784:	1004913a 	slli	r2,r2,4
   20788:	1007883a 	mov	r3,r2
   2078c:	d0a00217 	ldw	r2,-32760(gp)
   20790:	18a1883a 	add	r16,r3,r2
   20794:	d0a6c717 	ldw	r2,-25828(gp)
   20798:	1009883a 	mov	r4,r2
   2079c:	002382c0 	call	2382c <__extendsfdf2>
   207a0:	100b883a 	mov	r5,r2
   207a4:	180d883a 	mov	r6,r3
   207a8:	d0a00d17 	ldw	r2,-32716(gp)
   207ac:	010000f4 	movhi	r4,3
   207b0:	2106ad04 	addi	r4,r4,6836
   207b4:	20c00017 	ldw	r3,0(r4)
   207b8:	2809883a 	mov	r4,r5
   207bc:	300b883a 	mov	r5,r6
   207c0:	100d883a 	mov	r6,r2
   207c4:	180f883a 	mov	r7,r3
   207c8:	0023d840 	call	23d84 <__muldf3>
   207cc:	1009883a 	mov	r4,r2
   207d0:	180b883a 	mov	r5,r3
   207d4:	2005883a 	mov	r2,r4
   207d8:	2807883a 	mov	r3,r5
   207dc:	1009883a 	mov	r4,r2
   207e0:	180b883a 	mov	r5,r3
   207e4:	e1bffc17 	ldw	r6,-16(fp)
   207e8:	e1fffd17 	ldw	r7,-12(fp)
   207ec:	0023d840 	call	23d84 <__muldf3>
   207f0:	1009883a 	mov	r4,r2
   207f4:	180b883a 	mov	r5,r3
   207f8:	2005883a 	mov	r2,r4
   207fc:	2807883a 	mov	r3,r5
   20800:	1009883a 	mov	r4,r2
   20804:	180b883a 	mov	r5,r3
   20808:	e1bffe17 	ldw	r6,-8(fp)
   2080c:	e1ffff17 	ldw	r7,-4(fp)
   20810:	0023d100 	call	23d10 <__adddf3>
   20814:	1009883a 	mov	r4,r2
   20818:	180b883a 	mov	r5,r3
   2081c:	2005883a 	mov	r2,r4
   20820:	2807883a 	mov	r3,r5
   20824:	1009883a 	mov	r4,r2
   20828:	180b883a 	mov	r5,r3
   2082c:	00203440 	call	20344 <dtof>
   20830:	80800015 	stw	r2,0(r16)
					//c_w_kj=ftod(*(w_kj+i*4)); //new
					delta_pj[i] = c_y_pj * ( 1 - c_y_pj) * delta_pk * c_w_kj;
   20834:	e4bffa17 	ldw	r18,-24(fp)
   20838:	0009883a 	mov	r4,zero
   2083c:	014ffc34 	movhi	r5,16368
   20840:	e1bffc17 	ldw	r6,-16(fp)
   20844:	e1fffd17 	ldw	r7,-12(fp)
   20848:	0023c900 	call	23c90 <__subdf3>
   2084c:	1009883a 	mov	r4,r2
   20850:	180b883a 	mov	r5,r3
   20854:	2005883a 	mov	r2,r4
   20858:	2807883a 	mov	r3,r5
   2085c:	1009883a 	mov	r4,r2
   20860:	180b883a 	mov	r5,r3
   20864:	e1bffc17 	ldw	r6,-16(fp)
   20868:	e1fffd17 	ldw	r7,-12(fp)
   2086c:	0023d840 	call	23d84 <__muldf3>
   20870:	1009883a 	mov	r4,r2
   20874:	180b883a 	mov	r5,r3
   20878:	2021883a 	mov	r16,r4
   2087c:	2823883a 	mov	r17,r5
   20880:	d0a6c717 	ldw	r2,-25828(gp)
   20884:	1009883a 	mov	r4,r2
   20888:	002382c0 	call	2382c <__extendsfdf2>
   2088c:	100f883a 	mov	r7,r2
   20890:	1811883a 	mov	r8,r3
   20894:	8009883a 	mov	r4,r16
   20898:	880b883a 	mov	r5,r17
   2089c:	380d883a 	mov	r6,r7
   208a0:	400f883a 	mov	r7,r8
   208a4:	0023d840 	call	23d84 <__muldf3>
   208a8:	1009883a 	mov	r4,r2
   208ac:	180b883a 	mov	r5,r3
   208b0:	2005883a 	mov	r2,r4
   208b4:	2807883a 	mov	r3,r5
   208b8:	1009883a 	mov	r4,r2
   208bc:	180b883a 	mov	r5,r3
   208c0:	e1bffe17 	ldw	r6,-8(fp)
   208c4:	e1ffff17 	ldw	r7,-4(fp)
   208c8:	0023d840 	call	23d84 <__muldf3>
   208cc:	1009883a 	mov	r4,r2
   208d0:	180b883a 	mov	r5,r3
   208d4:	2005883a 	mov	r2,r4
   208d8:	2807883a 	mov	r3,r5
   208dc:	1009883a 	mov	r4,r2
   208e0:	180b883a 	mov	r5,r3
   208e4:	00248d80 	call	248d8 <__truncdfsf2>
   208e8:	1009883a 	mov	r4,r2
   208ec:	00c000f4 	movhi	r3,3
   208f0:	18cd7e04 	addi	r3,r3,13816
   208f4:	9485883a 	add	r2,r18,r18
   208f8:	1085883a 	add	r2,r2,r2
   208fc:	10c5883a 	add	r2,r2,r3
   20900:	11000015 	stw	r4,0(r2)
					*(w_ji+i*4) = dtof(ftod(*(w_ji+i*4)) + eta * delta_pj[i] * In[pos]); // hidden weight adjustment
   20904:	e0bffa17 	ldw	r2,-24(fp)
   20908:	1004913a 	slli	r2,r2,4
   2090c:	1007883a 	mov	r3,r2
   20910:	d0a00117 	ldw	r2,-32764(gp)
   20914:	18a5883a 	add	r18,r3,r2
   20918:	e0bffa17 	ldw	r2,-24(fp)
   2091c:	1004913a 	slli	r2,r2,4
   20920:	1007883a 	mov	r3,r2
   20924:	d0a00117 	ldw	r2,-32764(gp)
   20928:	1885883a 	add	r2,r3,r2
   2092c:	11000017 	ldw	r4,0(r2)
   20930:	00201f00 	call	201f0 <ftod>
   20934:	1021883a 	mov	r16,r2
   20938:	1823883a 	mov	r17,r3
   2093c:	e0bffa17 	ldw	r2,-24(fp)
   20940:	00c000f4 	movhi	r3,3
   20944:	18cd7e04 	addi	r3,r3,13816
   20948:	1085883a 	add	r2,r2,r2
   2094c:	1085883a 	add	r2,r2,r2
   20950:	10c5883a 	add	r2,r2,r3
   20954:	10800017 	ldw	r2,0(r2)
   20958:	1009883a 	mov	r4,r2
   2095c:	002382c0 	call	2382c <__extendsfdf2>
   20960:	100b883a 	mov	r5,r2
   20964:	180d883a 	mov	r6,r3
   20968:	d0a00d17 	ldw	r2,-32716(gp)
   2096c:	010000f4 	movhi	r4,3
   20970:	2106ad04 	addi	r4,r4,6836
   20974:	20c00017 	ldw	r3,0(r4)
   20978:	2809883a 	mov	r4,r5
   2097c:	300b883a 	mov	r5,r6
   20980:	100d883a 	mov	r6,r2
   20984:	180f883a 	mov	r7,r3
   20988:	0023d840 	call	23d84 <__muldf3>
   2098c:	1009883a 	mov	r4,r2
   20990:	180b883a 	mov	r5,r3
   20994:	200d883a 	mov	r6,r4
   20998:	280f883a 	mov	r7,r5
   2099c:	e0bff317 	ldw	r2,-52(fp)
   209a0:	00c000f4 	movhi	r3,3
   209a4:	18cdec04 	addi	r3,r3,14256
   209a8:	100490fa 	slli	r2,r2,3
   209ac:	10c9883a 	add	r4,r2,r3
   209b0:	20800017 	ldw	r2,0(r4)
   209b4:	20c00117 	ldw	r3,4(r4)
   209b8:	3009883a 	mov	r4,r6
   209bc:	380b883a 	mov	r5,r7
   209c0:	100d883a 	mov	r6,r2
   209c4:	180f883a 	mov	r7,r3
   209c8:	0023d840 	call	23d84 <__muldf3>
   209cc:	1009883a 	mov	r4,r2
   209d0:	180b883a 	mov	r5,r3
   209d4:	2005883a 	mov	r2,r4
   209d8:	2807883a 	mov	r3,r5
   209dc:	8009883a 	mov	r4,r16
   209e0:	880b883a 	mov	r5,r17
   209e4:	100d883a 	mov	r6,r2
   209e8:	180f883a 	mov	r7,r3
   209ec:	0023d100 	call	23d10 <__adddf3>
   209f0:	1009883a 	mov	r4,r2
   209f4:	180b883a 	mov	r5,r3
   209f8:	2005883a 	mov	r2,r4
   209fc:	2807883a 	mov	r3,r5
   20a00:	1009883a 	mov	r4,r2
   20a04:	180b883a 	mov	r5,r3
   20a08:	00203440 	call	20344 <dtof>
   20a0c:	90800015 	stw	r2,0(r18)
			delta_pk=(d_pk[pos]-ftod(*(y_pk)));


			//printf("Delta = %f\n",delta_pk);
			//hidden delta computing
				for (i=0;i<N_hidden;i++) {
   20a10:	e0bffa17 	ldw	r2,-24(fp)
   20a14:	10800044 	addi	r2,r2,1
   20a18:	e0bffa15 	stw	r2,-24(fp)
   20a1c:	d0e00917 	ldw	r3,-32732(gp)
   20a20:	e0bffa17 	ldw	r2,-24(fp)
   20a24:	10ff4016 	blt	r2,r3,20728 <main+0x274>
					*(w_kj+i*4) = dtof(c_w_kj + eta * delta_pk *c_y_pj);  //output weights adjustment
					//c_w_kj=ftod(*(w_kj+i*4)); //new
					delta_pj[i] = c_y_pj * ( 1 - c_y_pj) * delta_pk * c_w_kj;
					*(w_ji+i*4) = dtof(ftod(*(w_ji+i*4)) + eta * delta_pj[i] * In[pos]); // hidden weight adjustment
				}
				*b=dtof(ftod(*b) + eta * delta_pk);
   20a28:	d4a00317 	ldw	r18,-32756(gp)
   20a2c:	d0a00317 	ldw	r2,-32756(gp)
   20a30:	11000017 	ldw	r4,0(r2)
   20a34:	00201f00 	call	201f0 <ftod>
   20a38:	1021883a 	mov	r16,r2
   20a3c:	1823883a 	mov	r17,r3
   20a40:	d0a6c717 	ldw	r2,-25828(gp)
   20a44:	1009883a 	mov	r4,r2
   20a48:	002382c0 	call	2382c <__extendsfdf2>
   20a4c:	100b883a 	mov	r5,r2
   20a50:	180d883a 	mov	r6,r3
   20a54:	d0a00d17 	ldw	r2,-32716(gp)
   20a58:	010000f4 	movhi	r4,3
   20a5c:	2106ad04 	addi	r4,r4,6836
   20a60:	20c00017 	ldw	r3,0(r4)
   20a64:	2809883a 	mov	r4,r5
   20a68:	300b883a 	mov	r5,r6
   20a6c:	100d883a 	mov	r6,r2
   20a70:	180f883a 	mov	r7,r3
   20a74:	0023d840 	call	23d84 <__muldf3>
   20a78:	1009883a 	mov	r4,r2
   20a7c:	180b883a 	mov	r5,r3
   20a80:	2005883a 	mov	r2,r4
   20a84:	2807883a 	mov	r3,r5
   20a88:	8009883a 	mov	r4,r16
   20a8c:	880b883a 	mov	r5,r17
   20a90:	100d883a 	mov	r6,r2
   20a94:	180f883a 	mov	r7,r3
   20a98:	0023d100 	call	23d10 <__adddf3>
   20a9c:	1009883a 	mov	r4,r2
   20aa0:	180b883a 	mov	r5,r3
   20aa4:	2005883a 	mov	r2,r4
   20aa8:	2807883a 	mov	r3,r5
   20aac:	1009883a 	mov	r4,r2
   20ab0:	180b883a 	mov	r5,r3
   20ab4:	00203440 	call	20344 <dtof>
   20ab8:	90800015 	stw	r2,0(r18)
				/*for (i=0;i<2*10*4;i=i+4){
					printf("%f \n", ftod(*(w_ji+i)));
				}*/
			outputs[pos] = ftod(*y_pk);
   20abc:	e43ff317 	ldw	r16,-52(fp)
   20ac0:	d0a00717 	ldw	r2,-32740(gp)
   20ac4:	11000017 	ldw	r4,0(r2)
   20ac8:	00201f00 	call	201f0 <ftod>
   20acc:	100b883a 	mov	r5,r2
   20ad0:	180d883a 	mov	r6,r3
   20ad4:	2809883a 	mov	r4,r5
   20ad8:	300b883a 	mov	r5,r6
   20adc:	00248d80 	call	248d8 <__truncdfsf2>
   20ae0:	1009883a 	mov	r4,r2
   20ae4:	00c000f4 	movhi	r3,3
   20ae8:	18cd8804 	addi	r3,r3,13856
   20aec:	8405883a 	add	r2,r16,r16
   20af0:	1085883a 	add	r2,r2,r2
   20af4:	10c5883a 	add	r2,r2,r3
   20af8:	11000015 	stw	r4,0(r2)
			x = *ready;
   20afc:	d0a00017 	ldw	r2,-32768(gp)
   20b00:	10800017 	ldw	r2,0(r2)
   20b04:	e0bff215 	stw	r2,-56(fp)
	int pos,x;
	*b=dtof(-1.72); //-1.72

	for (iter=0;iter<6;iter++) {
		printf("----------------------------------------------------------- \n");
		for (pos=0;pos<N_dat;pos++){
   20b08:	e0bff317 	ldw	r2,-52(fp)
   20b0c:	10800044 	addi	r2,r2,1
   20b10:	e0bff315 	stw	r2,-52(fp)
   20b14:	d0e00c17 	ldw	r3,-32720(gp)
   20b18:	e0bff317 	ldw	r2,-52(fp)
   20b1c:	10fe9f16 	blt	r2,r3,2059c <main+0xe8>
//printf("----------------------------------------------------------- \n");

	int pos,x;
	*b=dtof(-1.72); //-1.72

	for (iter=0;iter<6;iter++) {
   20b20:	e0bff917 	ldw	r2,-28(fp)
   20b24:	10800044 	addi	r2,r2,1
   20b28:	e0bff915 	stw	r2,-28(fp)
   20b2c:	e0bff917 	ldw	r2,-28(fp)
   20b30:	10800190 	cmplti	r2,r2,6
   20b34:	103e941e 	bne	r2,zero,20588 <main+0xd4>
			outputs[pos] = ftod(*y_pk);
			x = *ready;
		}
	}

	for (pos=0;pos<N_dat;pos++){
   20b38:	e03ff315 	stw	zero,-52(fp)
   20b3c:	00001c06 	br	20bb0 <main+0x6fc>
		printf("%f\t%f\n",outputs[pos],d_pk[pos]);
   20b40:	e0bff317 	ldw	r2,-52(fp)
   20b44:	00c000f4 	movhi	r3,3
   20b48:	18cd8804 	addi	r3,r3,13856
   20b4c:	1085883a 	add	r2,r2,r2
   20b50:	1085883a 	add	r2,r2,r2
   20b54:	10c5883a 	add	r2,r2,r3
   20b58:	10800017 	ldw	r2,0(r2)
   20b5c:	1009883a 	mov	r4,r2
   20b60:	002382c0 	call	2382c <__extendsfdf2>
   20b64:	1011883a 	mov	r8,r2
   20b68:	1813883a 	mov	r9,r3
   20b6c:	e0bff317 	ldw	r2,-52(fp)
   20b70:	00c000f4 	movhi	r3,3
   20b74:	18cf6c04 	addi	r3,r3,15792
   20b78:	100490fa 	slli	r2,r2,3
   20b7c:	10c9883a 	add	r4,r2,r3
   20b80:	20800017 	ldw	r2,0(r4)
   20b84:	20c00117 	ldw	r3,4(r4)
   20b88:	d8c00015 	stw	r3,0(sp)
   20b8c:	100f883a 	mov	r7,r2
   20b90:	010000f4 	movhi	r4,3
   20b94:	213f2f04 	addi	r4,r4,-836
   20b98:	400b883a 	mov	r5,r8
   20b9c:	480d883a 	mov	r6,r9
   20ba0:	00251dc0 	call	251dc <printf>
			outputs[pos] = ftod(*y_pk);
			x = *ready;
		}
	}

	for (pos=0;pos<N_dat;pos++){
   20ba4:	e0bff317 	ldw	r2,-52(fp)
   20ba8:	10800044 	addi	r2,r2,1
   20bac:	e0bff315 	stw	r2,-52(fp)
   20bb0:	d0e00c17 	ldw	r3,-32720(gp)
   20bb4:	e0bff317 	ldw	r2,-52(fp)
   20bb8:	10ffe116 	blt	r2,r3,20b40 <main+0x68c>
	 	 printf("Peso Oculto: %f \n",ftod(*w_ji));
	 	 printf("Peso Salida: %f \n",ftod(*w_kj));
	 	printf("Salida: %f \n",ftod(*y_pk));
	 	*/

	return 0;
   20bbc:	0005883a 	mov	r2,zero
}
   20bc0:	e037883a 	mov	sp,fp
   20bc4:	dfc00417 	ldw	ra,16(sp)
   20bc8:	df000317 	ldw	fp,12(sp)
   20bcc:	dc800217 	ldw	r18,8(sp)
   20bd0:	dc400117 	ldw	r17,4(sp)
   20bd4:	dc000017 	ldw	r16,0(sp)
   20bd8:	dec00504 	addi	sp,sp,20
   20bdc:	f800283a 	ret

00020be0 <log>:
   20be0:	defff104 	addi	sp,sp,-60
   20be4:	dd000d15 	stw	r20,52(sp)
   20be8:	050000f4 	movhi	r20,3
   20bec:	a506ae04 	addi	r20,r20,6840
   20bf0:	dcc00c15 	stw	r19,48(sp)
   20bf4:	dc800b15 	stw	r18,44(sp)
   20bf8:	dc400a15 	stw	r17,40(sp)
   20bfc:	dc000915 	stw	r16,36(sp)
   20c00:	2025883a 	mov	r18,r4
   20c04:	dfc00e15 	stw	ra,56(sp)
   20c08:	2827883a 	mov	r19,r5
   20c0c:	00211f00 	call	211f0 <__ieee754_log>
   20c10:	a1000017 	ldw	r4,0(r20)
   20c14:	1021883a 	mov	r16,r2
   20c18:	00bfffc4 	movi	r2,-1
   20c1c:	1823883a 	mov	r17,r3
   20c20:	20800a26 	beq	r4,r2,20c4c <log+0x6c>
   20c24:	9009883a 	mov	r4,r18
   20c28:	980b883a 	mov	r5,r19
   20c2c:	0022fe40 	call	22fe4 <__isnand>
   20c30:	1000061e 	bne	r2,zero,20c4c <log+0x6c>
   20c34:	000d883a 	mov	r6,zero
   20c38:	000f883a 	mov	r7,zero
   20c3c:	9009883a 	mov	r4,r18
   20c40:	980b883a 	mov	r5,r19
   20c44:	00244b00 	call	244b0 <__gtdf2>
   20c48:	00800a0e 	bge	zero,r2,20c74 <log+0x94>
   20c4c:	8005883a 	mov	r2,r16
   20c50:	8807883a 	mov	r3,r17
   20c54:	dfc00e17 	ldw	ra,56(sp)
   20c58:	dd000d17 	ldw	r20,52(sp)
   20c5c:	dcc00c17 	ldw	r19,48(sp)
   20c60:	dc800b17 	ldw	r18,44(sp)
   20c64:	dc400a17 	ldw	r17,40(sp)
   20c68:	dc000917 	ldw	r16,36(sp)
   20c6c:	dec00f04 	addi	sp,sp,60
   20c70:	f800283a 	ret
   20c74:	a4000017 	ldw	r16,0(r20)
   20c78:	008000f4 	movhi	r2,3
   20c7c:	10bf3104 	addi	r2,r2,-828
   20c80:	d8800115 	stw	r2,4(sp)
   20c84:	d8000815 	stw	zero,32(sp)
   20c88:	dc800215 	stw	r18,8(sp)
   20c8c:	dcc00315 	stw	r19,12(sp)
   20c90:	dc800415 	stw	r18,16(sp)
   20c94:	dcc00515 	stw	r19,20(sp)
   20c98:	8000231e 	bne	r16,zero,20d28 <log+0x148>
   20c9c:	00b80034 	movhi	r2,57344
   20ca0:	00f1fc34 	movhi	r3,51184
   20ca4:	18ffffc4 	addi	r3,r3,-1
   20ca8:	d8800615 	stw	r2,24(sp)
   20cac:	d8c00715 	stw	r3,28(sp)
   20cb0:	000d883a 	mov	r6,zero
   20cb4:	000f883a 	mov	r7,zero
   20cb8:	980b883a 	mov	r5,r19
   20cbc:	9009883a 	mov	r4,r18
   20cc0:	00243a00 	call	243a0 <__eqdf2>
   20cc4:	10000b1e 	bne	r2,zero,20cf4 <log+0x114>
   20cc8:	00800084 	movi	r2,2
   20ccc:	d8800015 	stw	r2,0(sp)
   20cd0:	80801d26 	beq	r16,r2,20d48 <log+0x168>
   20cd4:	d809883a 	mov	r4,sp
   20cd8:	00230140 	call	23014 <matherr>
   20cdc:	10001a26 	beq	r2,zero,20d48 <log+0x168>
   20ce0:	d8800817 	ldw	r2,32(sp)
   20ce4:	10001c1e 	bne	r2,zero,20d58 <log+0x178>
   20ce8:	dc000617 	ldw	r16,24(sp)
   20cec:	dc400717 	ldw	r17,28(sp)
   20cf0:	003fd606 	br	20c4c <log+0x6c>
   20cf4:	00800044 	movi	r2,1
   20cf8:	00c00084 	movi	r3,2
   20cfc:	d8800015 	stw	r2,0(sp)
   20d00:	80c00d26 	beq	r16,r3,20d38 <log+0x158>
   20d04:	d809883a 	mov	r4,sp
   20d08:	00230140 	call	23014 <matherr>
   20d0c:	10000a26 	beq	r2,zero,20d38 <log+0x158>
   20d10:	010000f4 	movhi	r4,3
   20d14:	213f9d04 	addi	r4,r4,-396
   20d18:	002301c0 	call	2301c <nan>
   20d1c:	d8c00715 	stw	r3,28(sp)
   20d20:	d8800615 	stw	r2,24(sp)
   20d24:	003fee06 	br	20ce0 <log+0x100>
   20d28:	00bffc34 	movhi	r2,65520
   20d2c:	d8800715 	stw	r2,28(sp)
   20d30:	d8000615 	stw	zero,24(sp)
   20d34:	003fde06 	br	20cb0 <log+0xd0>
   20d38:	00251cc0 	call	251cc <__errno>
   20d3c:	00c00844 	movi	r3,33
   20d40:	10c00015 	stw	r3,0(r2)
   20d44:	003ff206 	br	20d10 <log+0x130>
   20d48:	00251cc0 	call	251cc <__errno>
   20d4c:	00c00884 	movi	r3,34
   20d50:	10c00015 	stw	r3,0(r2)
   20d54:	003fe206 	br	20ce0 <log+0x100>
   20d58:	00251cc0 	call	251cc <__errno>
   20d5c:	d8c00817 	ldw	r3,32(sp)
   20d60:	10c00015 	stw	r3,0(r2)
   20d64:	003fe006 	br	20ce8 <log+0x108>

00020d68 <pow>:
   20d68:	deffee04 	addi	sp,sp,-72
   20d6c:	ddc01015 	stw	r23,64(sp)
   20d70:	05c000f4 	movhi	r23,3
   20d74:	bdc6ae04 	addi	r23,r23,6840
   20d78:	dd800f15 	stw	r22,60(sp)
   20d7c:	dd400e15 	stw	r21,56(sp)
   20d80:	dd000d15 	stw	r20,52(sp)
   20d84:	dcc00c15 	stw	r19,48(sp)
   20d88:	dc800b15 	stw	r18,44(sp)
   20d8c:	dc400a15 	stw	r17,40(sp)
   20d90:	dc000915 	stw	r16,36(sp)
   20d94:	2029883a 	mov	r20,r4
   20d98:	dfc01115 	stw	ra,68(sp)
   20d9c:	3025883a 	mov	r18,r6
   20da0:	282b883a 	mov	r21,r5
   20da4:	3827883a 	mov	r19,r7
   20da8:	00219e80 	call	219e8 <__ieee754_pow>
   20dac:	b9000017 	ldw	r4,0(r23)
   20db0:	05bfffc4 	movi	r22,-1
   20db4:	1021883a 	mov	r16,r2
   20db8:	1823883a 	mov	r17,r3
   20dbc:	25800426 	beq	r4,r22,20dd0 <pow+0x68>
   20dc0:	9009883a 	mov	r4,r18
   20dc4:	980b883a 	mov	r5,r19
   20dc8:	0022fe40 	call	22fe4 <__isnand>
   20dcc:	10000d26 	beq	r2,zero,20e04 <pow+0x9c>
   20dd0:	8005883a 	mov	r2,r16
   20dd4:	8807883a 	mov	r3,r17
   20dd8:	dfc01117 	ldw	ra,68(sp)
   20ddc:	ddc01017 	ldw	r23,64(sp)
   20de0:	dd800f17 	ldw	r22,60(sp)
   20de4:	dd400e17 	ldw	r21,56(sp)
   20de8:	dd000d17 	ldw	r20,52(sp)
   20dec:	dcc00c17 	ldw	r19,48(sp)
   20df0:	dc800b17 	ldw	r18,44(sp)
   20df4:	dc400a17 	ldw	r17,40(sp)
   20df8:	dc000917 	ldw	r16,36(sp)
   20dfc:	dec01204 	addi	sp,sp,72
   20e00:	f800283a 	ret
   20e04:	a009883a 	mov	r4,r20
   20e08:	a80b883a 	mov	r5,r21
   20e0c:	0022fe40 	call	22fe4 <__isnand>
   20e10:	1000151e 	bne	r2,zero,20e68 <pow+0x100>
   20e14:	000d883a 	mov	r6,zero
   20e18:	000f883a 	mov	r7,zero
   20e1c:	a009883a 	mov	r4,r20
   20e20:	a80b883a 	mov	r5,r21
   20e24:	00243a00 	call	243a0 <__eqdf2>
   20e28:	1000541e 	bne	r2,zero,20f7c <pow+0x214>
   20e2c:	000d883a 	mov	r6,zero
   20e30:	000f883a 	mov	r7,zero
   20e34:	9009883a 	mov	r4,r18
   20e38:	980b883a 	mov	r5,r19
   20e3c:	00243a00 	call	243a0 <__eqdf2>
   20e40:	10002c1e 	bne	r2,zero,20ef4 <pow+0x18c>
   20e44:	b8800017 	ldw	r2,0(r23)
   20e48:	d8000615 	stw	zero,24(sp)
   20e4c:	d8000715 	stw	zero,28(sp)
   20e50:	10001226 	beq	r2,zero,20e9c <pow+0x134>
   20e54:	008ffc34 	movhi	r2,16368
   20e58:	d8800715 	stw	r2,28(sp)
   20e5c:	dc000617 	ldw	r16,24(sp)
   20e60:	dc400717 	ldw	r17,28(sp)
   20e64:	003fda06 	br	20dd0 <pow+0x68>
   20e68:	000d883a 	mov	r6,zero
   20e6c:	000f883a 	mov	r7,zero
   20e70:	9009883a 	mov	r4,r18
   20e74:	980b883a 	mov	r5,r19
   20e78:	00243a00 	call	243a0 <__eqdf2>
   20e7c:	103fd41e 	bne	r2,zero,20dd0 <pow+0x68>
   20e80:	b8c00017 	ldw	r3,0(r23)
   20e84:	010ffc34 	movhi	r4,16368
   20e88:	d8000615 	stw	zero,24(sp)
   20e8c:	d9000715 	stw	r4,28(sp)
   20e90:	1d801526 	beq	r3,r22,20ee8 <pow+0x180>
   20e94:	00800084 	movi	r2,2
   20e98:	18801326 	beq	r3,r2,20ee8 <pow+0x180>
   20e9c:	008000f4 	movhi	r2,3
   20ea0:	10bf3204 	addi	r2,r2,-824
   20ea4:	00c00044 	movi	r3,1
   20ea8:	d809883a 	mov	r4,sp
   20eac:	dcc00515 	stw	r19,20(sp)
   20eb0:	dd400315 	stw	r21,12(sp)
   20eb4:	d8800115 	stw	r2,4(sp)
   20eb8:	d8c00015 	stw	r3,0(sp)
   20ebc:	dc800415 	stw	r18,16(sp)
   20ec0:	dd000215 	stw	r20,8(sp)
   20ec4:	d8000815 	stw	zero,32(sp)
   20ec8:	00230140 	call	23014 <matherr>
   20ecc:	10002726 	beq	r2,zero,20f6c <pow+0x204>
   20ed0:	d8800817 	ldw	r2,32(sp)
   20ed4:	103fe126 	beq	r2,zero,20e5c <pow+0xf4>
   20ed8:	00251cc0 	call	251cc <__errno>
   20edc:	d8c00817 	ldw	r3,32(sp)
   20ee0:	10c00015 	stw	r3,0(r2)
   20ee4:	003fdd06 	br	20e5c <pow+0xf4>
   20ee8:	d9000715 	stw	r4,28(sp)
   20eec:	d8000615 	stw	zero,24(sp)
   20ef0:	003fda06 	br	20e5c <pow+0xf4>
   20ef4:	9009883a 	mov	r4,r18
   20ef8:	980b883a 	mov	r5,r19
   20efc:	0022fc80 	call	22fc8 <finite>
   20f00:	103fb326 	beq	r2,zero,20dd0 <pow+0x68>
   20f04:	000d883a 	mov	r6,zero
   20f08:	000f883a 	mov	r7,zero
   20f0c:	9009883a 	mov	r4,r18
   20f10:	980b883a 	mov	r5,r19
   20f14:	00245c00 	call	245c0 <__ltdf2>
   20f18:	103fad0e 	bge	r2,zero,20dd0 <pow+0x68>
   20f1c:	b9000017 	ldw	r4,0(r23)
   20f20:	00800044 	movi	r2,1
   20f24:	00c000f4 	movhi	r3,3
   20f28:	18ff3204 	addi	r3,r3,-824
   20f2c:	d8800015 	stw	r2,0(sp)
   20f30:	d8c00115 	stw	r3,4(sp)
   20f34:	dd400315 	stw	r21,12(sp)
   20f38:	dcc00515 	stw	r19,20(sp)
   20f3c:	d8000815 	stw	zero,32(sp)
   20f40:	dd000215 	stw	r20,8(sp)
   20f44:	dc800415 	stw	r18,16(sp)
   20f48:	20005626 	beq	r4,zero,210a4 <pow+0x33c>
   20f4c:	00bffc34 	movhi	r2,65520
   20f50:	d8800715 	stw	r2,28(sp)
   20f54:	00800084 	movi	r2,2
   20f58:	d8000615 	stw	zero,24(sp)
   20f5c:	20800326 	beq	r4,r2,20f6c <pow+0x204>
   20f60:	d809883a 	mov	r4,sp
   20f64:	00230140 	call	23014 <matherr>
   20f68:	103fd91e 	bne	r2,zero,20ed0 <pow+0x168>
   20f6c:	00251cc0 	call	251cc <__errno>
   20f70:	00c00844 	movi	r3,33
   20f74:	10c00015 	stw	r3,0(r2)
   20f78:	003fd506 	br	20ed0 <pow+0x168>
   20f7c:	8009883a 	mov	r4,r16
   20f80:	880b883a 	mov	r5,r17
   20f84:	0022fc80 	call	22fc8 <finite>
   20f88:	10002426 	beq	r2,zero,2101c <pow+0x2b4>
   20f8c:	000d883a 	mov	r6,zero
   20f90:	000f883a 	mov	r7,zero
   20f94:	8009883a 	mov	r4,r16
   20f98:	880b883a 	mov	r5,r17
   20f9c:	00243a00 	call	243a0 <__eqdf2>
   20fa0:	103f8b1e 	bne	r2,zero,20dd0 <pow+0x68>
   20fa4:	a009883a 	mov	r4,r20
   20fa8:	a80b883a 	mov	r5,r21
   20fac:	0022fc80 	call	22fc8 <finite>
   20fb0:	103f8726 	beq	r2,zero,20dd0 <pow+0x68>
   20fb4:	9009883a 	mov	r4,r18
   20fb8:	980b883a 	mov	r5,r19
   20fbc:	0022fc80 	call	22fc8 <finite>
   20fc0:	103f8326 	beq	r2,zero,20dd0 <pow+0x68>
   20fc4:	b9000017 	ldw	r4,0(r23)
   20fc8:	00800104 	movi	r2,4
   20fcc:	d8800015 	stw	r2,0(sp)
   20fd0:	00c000f4 	movhi	r3,3
   20fd4:	18ff3204 	addi	r3,r3,-824
   20fd8:	00800084 	movi	r2,2
   20fdc:	d8c00115 	stw	r3,4(sp)
   20fe0:	dd400315 	stw	r21,12(sp)
   20fe4:	dcc00515 	stw	r19,20(sp)
   20fe8:	d8000815 	stw	zero,32(sp)
   20fec:	dd000215 	stw	r20,8(sp)
   20ff0:	dc800415 	stw	r18,16(sp)
   20ff4:	d8000615 	stw	zero,24(sp)
   20ff8:	d8000715 	stw	zero,28(sp)
   20ffc:	20800326 	beq	r4,r2,2100c <pow+0x2a4>
   21000:	d809883a 	mov	r4,sp
   21004:	00230140 	call	23014 <matherr>
   21008:	103fb11e 	bne	r2,zero,20ed0 <pow+0x168>
   2100c:	00251cc0 	call	251cc <__errno>
   21010:	00c00884 	movi	r3,34
   21014:	10c00015 	stw	r3,0(r2)
   21018:	003fad06 	br	20ed0 <pow+0x168>
   2101c:	a009883a 	mov	r4,r20
   21020:	a80b883a 	mov	r5,r21
   21024:	0022fc80 	call	22fc8 <finite>
   21028:	103fd826 	beq	r2,zero,20f8c <pow+0x224>
   2102c:	9009883a 	mov	r4,r18
   21030:	980b883a 	mov	r5,r19
   21034:	0022fc80 	call	22fc8 <finite>
   21038:	103fd426 	beq	r2,zero,20f8c <pow+0x224>
   2103c:	880b883a 	mov	r5,r17
   21040:	8009883a 	mov	r4,r16
   21044:	0022fe40 	call	22fe4 <__isnand>
   21048:	10001926 	beq	r2,zero,210b0 <pow+0x348>
   2104c:	bc000017 	ldw	r16,0(r23)
   21050:	00800044 	movi	r2,1
   21054:	00c000f4 	movhi	r3,3
   21058:	18ff3204 	addi	r3,r3,-824
   2105c:	d8800015 	stw	r2,0(sp)
   21060:	d8c00115 	stw	r3,4(sp)
   21064:	dd400315 	stw	r21,12(sp)
   21068:	dcc00515 	stw	r19,20(sp)
   2106c:	d8000815 	stw	zero,32(sp)
   21070:	dd000215 	stw	r20,8(sp)
   21074:	dc800415 	stw	r18,16(sp)
   21078:	80000a26 	beq	r16,zero,210a4 <pow+0x33c>
   2107c:	0009883a 	mov	r4,zero
   21080:	000d883a 	mov	r6,zero
   21084:	000b883a 	mov	r5,zero
   21088:	000f883a 	mov	r7,zero
   2108c:	00241480 	call	24148 <__divdf3>
   21090:	d8800615 	stw	r2,24(sp)
   21094:	00800084 	movi	r2,2
   21098:	d8c00715 	stw	r3,28(sp)
   2109c:	80bfb01e 	bne	r16,r2,20f60 <pow+0x1f8>
   210a0:	003fb206 	br	20f6c <pow+0x204>
   210a4:	d8000615 	stw	zero,24(sp)
   210a8:	d8000715 	stw	zero,28(sp)
   210ac:	003fac06 	br	20f60 <pow+0x1f8>
   210b0:	b8800017 	ldw	r2,0(r23)
   210b4:	00c000c4 	movi	r3,3
   210b8:	010000f4 	movhi	r4,3
   210bc:	213f3204 	addi	r4,r4,-824
   210c0:	d8c00015 	stw	r3,0(sp)
   210c4:	d9000115 	stw	r4,4(sp)
   210c8:	d8000815 	stw	zero,32(sp)
   210cc:	dd000215 	stw	r20,8(sp)
   210d0:	dd400315 	stw	r21,12(sp)
   210d4:	dc800415 	stw	r18,16(sp)
   210d8:	dcc00515 	stw	r19,20(sp)
   210dc:	1000251e 	bne	r2,zero,21174 <pow+0x40c>
   210e0:	05b80034 	movhi	r22,57344
   210e4:	0091fc34 	movhi	r2,18416
   210e8:	10bfffc4 	addi	r2,r2,-1
   210ec:	000d883a 	mov	r6,zero
   210f0:	000f883a 	mov	r7,zero
   210f4:	a80b883a 	mov	r5,r21
   210f8:	a009883a 	mov	r4,r20
   210fc:	d8800715 	stw	r2,28(sp)
   21100:	dd800615 	stw	r22,24(sp)
   21104:	00245c00 	call	245c0 <__ltdf2>
   21108:	103fbd0e 	bge	r2,zero,21000 <pow+0x298>
   2110c:	0005883a 	mov	r2,zero
   21110:	00cff834 	movhi	r3,16352
   21114:	180f883a 	mov	r7,r3
   21118:	100d883a 	mov	r6,r2
   2111c:	980b883a 	mov	r5,r19
   21120:	9009883a 	mov	r4,r18
   21124:	0023d840 	call	23d84 <__muldf3>
   21128:	1009883a 	mov	r4,r2
   2112c:	180b883a 	mov	r5,r3
   21130:	1021883a 	mov	r16,r2
   21134:	1823883a 	mov	r17,r3
   21138:	002302c0 	call	2302c <rint>
   2113c:	180f883a 	mov	r7,r3
   21140:	8009883a 	mov	r4,r16
   21144:	880b883a 	mov	r5,r17
   21148:	100d883a 	mov	r6,r2
   2114c:	00244280 	call	24428 <__nedf2>
   21150:	10000426 	beq	r2,zero,21164 <pow+0x3fc>
   21154:	00b1fc34 	movhi	r2,51184
   21158:	10bfffc4 	addi	r2,r2,-1
   2115c:	dd800615 	stw	r22,24(sp)
   21160:	d8800715 	stw	r2,28(sp)
   21164:	b8c00017 	ldw	r3,0(r23)
   21168:	00800084 	movi	r2,2
   2116c:	18bfa41e 	bne	r3,r2,21000 <pow+0x298>
   21170:	003fa606 	br	2100c <pow+0x2a4>
   21174:	009ffc34 	movhi	r2,32752
   21178:	000d883a 	mov	r6,zero
   2117c:	000f883a 	mov	r7,zero
   21180:	a80b883a 	mov	r5,r21
   21184:	a009883a 	mov	r4,r20
   21188:	d8800715 	stw	r2,28(sp)
   2118c:	d8000615 	stw	zero,24(sp)
   21190:	00245c00 	call	245c0 <__ltdf2>
   21194:	103ff30e 	bge	r2,zero,21164 <pow+0x3fc>
   21198:	0005883a 	mov	r2,zero
   2119c:	00cff834 	movhi	r3,16352
   211a0:	180f883a 	mov	r7,r3
   211a4:	100d883a 	mov	r6,r2
   211a8:	980b883a 	mov	r5,r19
   211ac:	9009883a 	mov	r4,r18
   211b0:	0023d840 	call	23d84 <__muldf3>
   211b4:	1009883a 	mov	r4,r2
   211b8:	180b883a 	mov	r5,r3
   211bc:	1021883a 	mov	r16,r2
   211c0:	1823883a 	mov	r17,r3
   211c4:	002302c0 	call	2302c <rint>
   211c8:	180f883a 	mov	r7,r3
   211cc:	8009883a 	mov	r4,r16
   211d0:	880b883a 	mov	r5,r17
   211d4:	100d883a 	mov	r6,r2
   211d8:	00244280 	call	24428 <__nedf2>
   211dc:	103fe126 	beq	r2,zero,21164 <pow+0x3fc>
   211e0:	00bffc34 	movhi	r2,65520
   211e4:	d8800715 	stw	r2,28(sp)
   211e8:	d8000615 	stw	zero,24(sp)
   211ec:	003fdd06 	br	21164 <pow+0x3fc>

000211f0 <__ieee754_log>:
   211f0:	deffe604 	addi	sp,sp,-104
   211f4:	2015883a 	mov	r10,r4
   211f8:	01000434 	movhi	r4,16
   211fc:	213fffc4 	addi	r4,r4,-1
   21200:	dfc01915 	stw	ra,100(sp)
   21204:	df001815 	stw	fp,96(sp)
   21208:	ddc01715 	stw	r23,92(sp)
   2120c:	dd801615 	stw	r22,88(sp)
   21210:	dd401515 	stw	r21,84(sp)
   21214:	dd001415 	stw	r20,80(sp)
   21218:	dcc01315 	stw	r19,76(sp)
   2121c:	dc801215 	stw	r18,72(sp)
   21220:	dc401115 	stw	r17,68(sp)
   21224:	dc001015 	stw	r16,64(sp)
   21228:	2817883a 	mov	r11,r5
   2122c:	2813883a 	mov	r9,r5
   21230:	2140190e 	bge	r4,r5,21298 <__ieee754_log+0xa8>
   21234:	000d883a 	mov	r6,zero
   21238:	009ffc34 	movhi	r2,32752
   2123c:	10bfffc4 	addi	r2,r2,-1
   21240:	1240230e 	bge	r2,r9,212d0 <__ieee754_log+0xe0>
   21244:	580f883a 	mov	r7,r11
   21248:	5009883a 	mov	r4,r10
   2124c:	580b883a 	mov	r5,r11
   21250:	500d883a 	mov	r6,r10
   21254:	0023d100 	call	23d10 <__adddf3>
   21258:	100d883a 	mov	r6,r2
   2125c:	180f883a 	mov	r7,r3
   21260:	3005883a 	mov	r2,r6
   21264:	3807883a 	mov	r3,r7
   21268:	dfc01917 	ldw	ra,100(sp)
   2126c:	df001817 	ldw	fp,96(sp)
   21270:	ddc01717 	ldw	r23,92(sp)
   21274:	dd801617 	ldw	r22,88(sp)
   21278:	dd401517 	ldw	r21,84(sp)
   2127c:	dd001417 	ldw	r20,80(sp)
   21280:	dcc01317 	ldw	r19,76(sp)
   21284:	dc801217 	ldw	r18,72(sp)
   21288:	dc401117 	ldw	r17,68(sp)
   2128c:	dc001017 	ldw	r16,64(sp)
   21290:	dec01a04 	addi	sp,sp,104
   21294:	f800283a 	ret
   21298:	00a00034 	movhi	r2,32768
   2129c:	10bfffc4 	addi	r2,r2,-1
   212a0:	2884703a 	and	r2,r5,r2
   212a4:	5084b03a 	or	r2,r10,r2
   212a8:	1000e31e 	bne	r2,zero,21638 <__ieee754_log+0x448>
   212ac:	00f0d434 	movhi	r3,50000
   212b0:	000d883a 	mov	r6,zero
   212b4:	000f883a 	mov	r7,zero
   212b8:	180b883a 	mov	r5,r3
   212bc:	1009883a 	mov	r4,r2
   212c0:	00241480 	call	24148 <__divdf3>
   212c4:	100d883a 	mov	r6,r2
   212c8:	180f883a 	mov	r7,r3
   212cc:	003fe406 	br	21260 <__ieee754_log+0x70>
   212d0:	04000434 	movhi	r16,16
   212d4:	843fffc4 	addi	r16,r16,-1
   212d8:	4c38703a 	and	fp,r9,r16
   212dc:	02000274 	movhi	r8,9
   212e0:	4217d904 	addi	r8,r8,24420
   212e4:	e211883a 	add	r8,fp,r8
   212e8:	4813d53a 	srai	r9,r9,20
   212ec:	4200042c 	andhi	r8,r8,16
   212f0:	41cffc3c 	xorhi	r7,r8,16368
   212f4:	4011d53a 	srai	r8,r8,20
   212f8:	3253883a 	add	r9,r6,r9
   212fc:	e1ceb03a 	or	r7,fp,r7
   21300:	0005883a 	mov	r2,zero
   21304:	00cffc34 	movhi	r3,16368
   21308:	4a7f0044 	addi	r9,r9,-1023
   2130c:	5009883a 	mov	r4,r10
   21310:	380b883a 	mov	r5,r7
   21314:	4a13883a 	add	r9,r9,r8
   21318:	180f883a 	mov	r7,r3
   2131c:	100d883a 	mov	r6,r2
   21320:	da400015 	stw	r9,0(sp)
   21324:	0023c900 	call	23c90 <__subdf3>
   21328:	d8c00b15 	stw	r3,44(sp)
   2132c:	d9000b17 	ldw	r4,44(sp)
   21330:	e0c00084 	addi	r3,fp,2
   21334:	d8800a15 	stw	r2,40(sp)
   21338:	d8800815 	stw	r2,32(sp)
   2133c:	1c06703a 	and	r3,r3,r16
   21340:	00800084 	movi	r2,2
   21344:	d9000915 	stw	r4,36(sp)
   21348:	10c0c70e 	bge	r2,r3,21668 <__ieee754_log+0x478>
   2134c:	d9000817 	ldw	r4,32(sp)
   21350:	d9400b17 	ldw	r5,44(sp)
   21354:	0005883a 	mov	r2,zero
   21358:	00d00034 	movhi	r3,16384
   2135c:	180f883a 	mov	r7,r3
   21360:	100d883a 	mov	r6,r2
   21364:	0023d100 	call	23d10 <__adddf3>
   21368:	d9400b17 	ldw	r5,44(sp)
   2136c:	d9000817 	ldw	r4,32(sp)
   21370:	180f883a 	mov	r7,r3
   21374:	100d883a 	mov	r6,r2
   21378:	00241480 	call	24148 <__divdf3>
   2137c:	d9000017 	ldw	r4,0(sp)
   21380:	d8800c15 	stw	r2,48(sp)
   21384:	d8c00d15 	stw	r3,52(sp)
   21388:	d8800615 	stw	r2,24(sp)
   2138c:	00246d00 	call	246d0 <__floatsidf>
   21390:	d9000d17 	ldw	r4,52(sp)
   21394:	d9400d17 	ldw	r5,52(sp)
   21398:	d8800e15 	stw	r2,56(sp)
   2139c:	d9000715 	stw	r4,28(sp)
   213a0:	d9000617 	ldw	r4,24(sp)
   213a4:	280f883a 	mov	r7,r5
   213a8:	d8c00f15 	stw	r3,60(sp)
   213ac:	200d883a 	mov	r6,r4
   213b0:	0023d840 	call	23d84 <__muldf3>
   213b4:	1009883a 	mov	r4,r2
   213b8:	100d883a 	mov	r6,r2
   213bc:	d8800415 	stw	r2,16(sp)
   213c0:	00bffeb4 	movhi	r2,65530
   213c4:	10bae184 	addi	r2,r2,-5242
   213c8:	180b883a 	mov	r5,r3
   213cc:	180f883a 	mov	r7,r3
   213d0:	e085883a 	add	r2,fp,r2
   213d4:	182b883a 	mov	r21,r3
   213d8:	d8c00515 	stw	r3,20(sp)
   213dc:	d8800115 	stw	r2,4(sp)
   213e0:	0023d840 	call	23d84 <__muldf3>
   213e4:	1021883a 	mov	r16,r2
   213e8:	1823883a 	mov	r17,r3
   213ec:	00b41e74 	movhi	r2,53369
   213f0:	10b1a7c4 	addi	r2,r2,-14689
   213f4:	00cff134 	movhi	r3,16324
   213f8:	18e68244 	addi	r3,r3,-26103
   213fc:	8009883a 	mov	r4,r16
   21400:	880b883a 	mov	r5,r17
   21404:	180f883a 	mov	r7,r3
   21408:	100d883a 	mov	r6,r2
   2140c:	0023d840 	call	23d84 <__muldf3>
   21410:	020763b4 	movhi	r8,7566
   21414:	421e2bc4 	addi	r8,r8,30895
   21418:	024ff334 	movhi	r9,16332
   2141c:	4a5c7144 	addi	r9,r9,29125
   21420:	480f883a 	mov	r7,r9
   21424:	400d883a 	mov	r6,r8
   21428:	180b883a 	mov	r5,r3
   2142c:	1009883a 	mov	r4,r2
   21430:	0023d100 	call	23d10 <__adddf3>
   21434:	180f883a 	mov	r7,r3
   21438:	8009883a 	mov	r4,r16
   2143c:	880b883a 	mov	r5,r17
   21440:	100d883a 	mov	r6,r2
   21444:	0023d840 	call	23d84 <__muldf3>
   21448:	02266634 	movhi	r8,39320
   2144c:	423e8104 	addi	r8,r8,-1532
   21450:	024ff6b4 	movhi	r9,16346
   21454:	4a666644 	addi	r9,r9,-26215
   21458:	480f883a 	mov	r7,r9
   2145c:	400d883a 	mov	r6,r8
   21460:	180b883a 	mov	r5,r3
   21464:	1009883a 	mov	r4,r2
   21468:	0023d100 	call	23d10 <__adddf3>
   2146c:	180f883a 	mov	r7,r3
   21470:	8009883a 	mov	r4,r16
   21474:	880b883a 	mov	r5,r17
   21478:	100d883a 	mov	r6,r2
   2147c:	0023d840 	call	23d84 <__muldf3>
   21480:	0237cfb4 	movhi	r8,57150
   21484:	42149104 	addi	r8,r8,21060
   21488:	024ff0f4 	movhi	r9,16323
   2148c:	4a7c4484 	addi	r9,r9,-3822
   21490:	480f883a 	mov	r7,r9
   21494:	8009883a 	mov	r4,r16
   21498:	880b883a 	mov	r5,r17
   2149c:	400d883a 	mov	r6,r8
   214a0:	102d883a 	mov	r22,r2
   214a4:	182f883a 	mov	r23,r3
   214a8:	0023d840 	call	23d84 <__muldf3>
   214ac:	0225b2f4 	movhi	r8,38603
   214b0:	4200f784 	addi	r8,r8,990
   214b4:	024ff1f4 	movhi	r9,16327
   214b8:	4a519904 	addi	r9,r9,18020
   214bc:	480f883a 	mov	r7,r9
   214c0:	400d883a 	mov	r6,r8
   214c4:	180b883a 	mov	r5,r3
   214c8:	1009883a 	mov	r4,r2
   214cc:	0023d100 	call	23d10 <__adddf3>
   214d0:	180f883a 	mov	r7,r3
   214d4:	8009883a 	mov	r4,r16
   214d8:	880b883a 	mov	r5,r17
   214dc:	100d883a 	mov	r6,r2
   214e0:	0023d840 	call	23d84 <__muldf3>
   214e4:	022508f4 	movhi	r8,37923
   214e8:	4224d644 	addi	r8,r8,-27815
   214ec:	024ff4b4 	movhi	r9,16338
   214f0:	4a524904 	addi	r9,r9,18724
   214f4:	480f883a 	mov	r7,r9
   214f8:	400d883a 	mov	r6,r8
   214fc:	180b883a 	mov	r5,r3
   21500:	1009883a 	mov	r4,r2
   21504:	0023d100 	call	23d10 <__adddf3>
   21508:	180f883a 	mov	r7,r3
   2150c:	8009883a 	mov	r4,r16
   21510:	880b883a 	mov	r5,r17
   21514:	100d883a 	mov	r6,r2
   21518:	0023d840 	call	23d84 <__muldf3>
   2151c:	02155574 	movhi	r8,21845
   21520:	421564c4 	addi	r8,r8,21907
   21524:	024ff974 	movhi	r9,16357
   21528:	4a555544 	addi	r9,r9,21845
   2152c:	480f883a 	mov	r7,r9
   21530:	400d883a 	mov	r6,r8
   21534:	180b883a 	mov	r5,r3
   21538:	1009883a 	mov	r4,r2
   2153c:	0023d100 	call	23d10 <__adddf3>
   21540:	d9000417 	ldw	r4,16(sp)
   21544:	a80b883a 	mov	r5,r21
   21548:	180f883a 	mov	r7,r3
   2154c:	100d883a 	mov	r6,r2
   21550:	0023d840 	call	23d84 <__muldf3>
   21554:	180f883a 	mov	r7,r3
   21558:	b009883a 	mov	r4,r22
   2155c:	b80b883a 	mov	r5,r23
   21560:	100d883a 	mov	r6,r2
   21564:	0023d100 	call	23d10 <__adddf3>
   21568:	d9000117 	ldw	r4,4(sp)
   2156c:	1021883a 	mov	r16,r2
   21570:	008001f4 	movhi	r2,7
   21574:	10ae1444 	addi	r2,r2,-18351
   21578:	1705c83a 	sub	r2,r2,fp
   2157c:	1823883a 	mov	r17,r3
   21580:	2086b03a 	or	r3,r4,r2
   21584:	d8800e17 	ldw	r2,56(sp)
   21588:	d9000f17 	ldw	r4,60(sp)
   2158c:	d8800215 	stw	r2,8(sp)
   21590:	d9000315 	stw	r4,12(sp)
   21594:	00c0df0e 	bge	zero,r3,21914 <__ieee754_log+0x724>
   21598:	d9000817 	ldw	r4,32(sp)
   2159c:	d9400b17 	ldw	r5,44(sp)
   215a0:	0005883a 	mov	r2,zero
   215a4:	00cff834 	movhi	r3,16352
   215a8:	180f883a 	mov	r7,r3
   215ac:	100d883a 	mov	r6,r2
   215b0:	0023d840 	call	23d84 <__muldf3>
   215b4:	d9000817 	ldw	r4,32(sp)
   215b8:	d9400b17 	ldw	r5,44(sp)
   215bc:	180f883a 	mov	r7,r3
   215c0:	100d883a 	mov	r6,r2
   215c4:	0023d840 	call	23d84 <__muldf3>
   215c8:	1029883a 	mov	r20,r2
   215cc:	d8800017 	ldw	r2,0(sp)
   215d0:	182b883a 	mov	r21,r3
   215d4:	1000971e 	bne	r2,zero,21834 <__ieee754_log+0x644>
   215d8:	8009883a 	mov	r4,r16
   215dc:	880b883a 	mov	r5,r17
   215e0:	a00d883a 	mov	r6,r20
   215e4:	180f883a 	mov	r7,r3
   215e8:	0023d100 	call	23d10 <__adddf3>
   215ec:	d9000617 	ldw	r4,24(sp)
   215f0:	d9400d17 	ldw	r5,52(sp)
   215f4:	180f883a 	mov	r7,r3
   215f8:	100d883a 	mov	r6,r2
   215fc:	0023d840 	call	23d84 <__muldf3>
   21600:	180f883a 	mov	r7,r3
   21604:	a009883a 	mov	r4,r20
   21608:	a80b883a 	mov	r5,r21
   2160c:	100d883a 	mov	r6,r2
   21610:	0023c900 	call	23c90 <__subdf3>
   21614:	d9000817 	ldw	r4,32(sp)
   21618:	d9400b17 	ldw	r5,44(sp)
   2161c:	1011883a 	mov	r8,r2
   21620:	180f883a 	mov	r7,r3
   21624:	400d883a 	mov	r6,r8
   21628:	0023c900 	call	23c90 <__subdf3>
   2162c:	100d883a 	mov	r6,r2
   21630:	180f883a 	mov	r7,r3
   21634:	003f0a06 	br	21260 <__ieee754_log+0x70>
   21638:	28002f16 	blt	r5,zero,216f8 <__ieee754_log+0x508>
   2163c:	0005883a 	mov	r2,zero
   21640:	00d0d434 	movhi	r3,17232
   21644:	5009883a 	mov	r4,r10
   21648:	100d883a 	mov	r6,r2
   2164c:	180f883a 	mov	r7,r3
   21650:	0023d840 	call	23d84 <__muldf3>
   21654:	1015883a 	mov	r10,r2
   21658:	1813883a 	mov	r9,r3
   2165c:	1817883a 	mov	r11,r3
   21660:	01bff284 	movi	r6,-54
   21664:	003ef406 	br	21238 <__ieee754_log+0x48>
   21668:	d9000817 	ldw	r4,32(sp)
   2166c:	d9400b17 	ldw	r5,44(sp)
   21670:	000d883a 	mov	r6,zero
   21674:	000f883a 	mov	r7,zero
   21678:	00243a00 	call	243a0 <__eqdf2>
   2167c:	1000271e 	bne	r2,zero,2171c <__ieee754_log+0x52c>
   21680:	d8800017 	ldw	r2,0(sp)
   21684:	1000b026 	beq	r2,zero,21948 <__ieee754_log+0x758>
   21688:	d9000017 	ldw	r4,0(sp)
   2168c:	00246d00 	call	246d0 <__floatsidf>
   21690:	1021883a 	mov	r16,r2
   21694:	1823883a 	mov	r17,r3
   21698:	00bfb834 	movhi	r2,65248
   2169c:	00cff9b4 	movhi	r3,16358
   216a0:	18cb9084 	addi	r3,r3,11842
   216a4:	8009883a 	mov	r4,r16
   216a8:	880b883a 	mov	r5,r17
   216ac:	180f883a 	mov	r7,r3
   216b0:	100d883a 	mov	r6,r2
   216b4:	0023d840 	call	23d84 <__muldf3>
   216b8:	020d5e74 	movhi	r8,13689
   216bc:	420f1d84 	addi	r8,r8,15478
   216c0:	024f7ab4 	movhi	r9,15850
   216c4:	4a4e7bc4 	addi	r9,r9,14831
   216c8:	8009883a 	mov	r4,r16
   216cc:	880b883a 	mov	r5,r17
   216d0:	480f883a 	mov	r7,r9
   216d4:	400d883a 	mov	r6,r8
   216d8:	1021883a 	mov	r16,r2
   216dc:	1823883a 	mov	r17,r3
   216e0:	0023d840 	call	23d84 <__muldf3>
   216e4:	180f883a 	mov	r7,r3
   216e8:	880b883a 	mov	r5,r17
   216ec:	8009883a 	mov	r4,r16
   216f0:	100d883a 	mov	r6,r2
   216f4:	003ed706 	br	21254 <__ieee754_log+0x64>
   216f8:	280f883a 	mov	r7,r5
   216fc:	5009883a 	mov	r4,r10
   21700:	500d883a 	mov	r6,r10
   21704:	0023c900 	call	23c90 <__subdf3>
   21708:	180b883a 	mov	r5,r3
   2170c:	000d883a 	mov	r6,zero
   21710:	000f883a 	mov	r7,zero
   21714:	1009883a 	mov	r4,r2
   21718:	003ee906 	br	212c0 <__ieee754_log+0xd0>
   2171c:	d9000817 	ldw	r4,32(sp)
   21720:	d9400b17 	ldw	r5,44(sp)
   21724:	200d883a 	mov	r6,r4
   21728:	280f883a 	mov	r7,r5
   2172c:	0023d840 	call	23d84 <__muldf3>
   21730:	d9000817 	ldw	r4,32(sp)
   21734:	d9400b17 	ldw	r5,44(sp)
   21738:	02155574 	movhi	r8,21845
   2173c:	42155544 	addi	r8,r8,21845
   21740:	026ff574 	movhi	r9,49109
   21744:	4a555544 	addi	r9,r9,21845
   21748:	480f883a 	mov	r7,r9
   2174c:	400d883a 	mov	r6,r8
   21750:	1021883a 	mov	r16,r2
   21754:	1823883a 	mov	r17,r3
   21758:	0023d840 	call	23d84 <__muldf3>
   2175c:	0011883a 	mov	r8,zero
   21760:	024ff834 	movhi	r9,16352
   21764:	480f883a 	mov	r7,r9
   21768:	400d883a 	mov	r6,r8
   2176c:	180b883a 	mov	r5,r3
   21770:	1009883a 	mov	r4,r2
   21774:	0023d100 	call	23d10 <__adddf3>
   21778:	180f883a 	mov	r7,r3
   2177c:	8009883a 	mov	r4,r16
   21780:	880b883a 	mov	r5,r17
   21784:	100d883a 	mov	r6,r2
   21788:	0023d840 	call	23d84 <__muldf3>
   2178c:	d9000017 	ldw	r4,0(sp)
   21790:	1029883a 	mov	r20,r2
   21794:	182b883a 	mov	r21,r3
   21798:	20005926 	beq	r4,zero,21900 <__ieee754_log+0x710>
   2179c:	d9000017 	ldw	r4,0(sp)
   217a0:	00246d00 	call	246d0 <__floatsidf>
   217a4:	1021883a 	mov	r16,r2
   217a8:	1823883a 	mov	r17,r3
   217ac:	00bfb834 	movhi	r2,65248
   217b0:	00cff9b4 	movhi	r3,16358
   217b4:	18cb9084 	addi	r3,r3,11842
   217b8:	8009883a 	mov	r4,r16
   217bc:	880b883a 	mov	r5,r17
   217c0:	180f883a 	mov	r7,r3
   217c4:	100d883a 	mov	r6,r2
   217c8:	0023d840 	call	23d84 <__muldf3>
   217cc:	020d5e74 	movhi	r8,13689
   217d0:	420f1d84 	addi	r8,r8,15478
   217d4:	026f7ab4 	movhi	r9,48618
   217d8:	4a4e7bc4 	addi	r9,r9,14831
   217dc:	400d883a 	mov	r6,r8
   217e0:	480f883a 	mov	r7,r9
   217e4:	8009883a 	mov	r4,r16
   217e8:	880b883a 	mov	r5,r17
   217ec:	1021883a 	mov	r16,r2
   217f0:	1823883a 	mov	r17,r3
   217f4:	0023d840 	call	23d84 <__muldf3>
   217f8:	180f883a 	mov	r7,r3
   217fc:	a009883a 	mov	r4,r20
   21800:	a80b883a 	mov	r5,r21
   21804:	100d883a 	mov	r6,r2
   21808:	0023d100 	call	23d10 <__adddf3>
   2180c:	d9c00b17 	ldw	r7,44(sp)
   21810:	d9800817 	ldw	r6,32(sp)
   21814:	180b883a 	mov	r5,r3
   21818:	1009883a 	mov	r4,r2
   2181c:	0023c900 	call	23c90 <__subdf3>
   21820:	1011883a 	mov	r8,r2
   21824:	880b883a 	mov	r5,r17
   21828:	180f883a 	mov	r7,r3
   2182c:	8009883a 	mov	r4,r16
   21830:	003f7c06 	br	21624 <__ieee754_log+0x434>
   21834:	d9000217 	ldw	r4,8(sp)
   21838:	d9400f17 	ldw	r5,60(sp)
   2183c:	00bfb834 	movhi	r2,65248
   21840:	00cff9b4 	movhi	r3,16358
   21844:	18cb9084 	addi	r3,r3,11842
   21848:	180f883a 	mov	r7,r3
   2184c:	100d883a 	mov	r6,r2
   21850:	0023d840 	call	23d84 <__muldf3>
   21854:	8009883a 	mov	r4,r16
   21858:	880b883a 	mov	r5,r17
   2185c:	a00d883a 	mov	r6,r20
   21860:	a80f883a 	mov	r7,r21
   21864:	1025883a 	mov	r18,r2
   21868:	1827883a 	mov	r19,r3
   2186c:	0023d100 	call	23d10 <__adddf3>
   21870:	d9000617 	ldw	r4,24(sp)
   21874:	d9400d17 	ldw	r5,52(sp)
   21878:	180f883a 	mov	r7,r3
   2187c:	100d883a 	mov	r6,r2
   21880:	0023d840 	call	23d84 <__muldf3>
   21884:	d9000217 	ldw	r4,8(sp)
   21888:	d9400f17 	ldw	r5,60(sp)
   2188c:	020d5e74 	movhi	r8,13689
   21890:	420f1d84 	addi	r8,r8,15478
   21894:	024f7ab4 	movhi	r9,15850
   21898:	4a4e7bc4 	addi	r9,r9,14831
   2189c:	480f883a 	mov	r7,r9
   218a0:	400d883a 	mov	r6,r8
   218a4:	1021883a 	mov	r16,r2
   218a8:	1823883a 	mov	r17,r3
   218ac:	0023d840 	call	23d84 <__muldf3>
   218b0:	180f883a 	mov	r7,r3
   218b4:	880b883a 	mov	r5,r17
   218b8:	8009883a 	mov	r4,r16
   218bc:	100d883a 	mov	r6,r2
   218c0:	0023d100 	call	23d10 <__adddf3>
   218c4:	180f883a 	mov	r7,r3
   218c8:	a009883a 	mov	r4,r20
   218cc:	a80b883a 	mov	r5,r21
   218d0:	100d883a 	mov	r6,r2
   218d4:	0023c900 	call	23c90 <__subdf3>
   218d8:	d9c00b17 	ldw	r7,44(sp)
   218dc:	d9800817 	ldw	r6,32(sp)
   218e0:	180b883a 	mov	r5,r3
   218e4:	1009883a 	mov	r4,r2
   218e8:	0023c900 	call	23c90 <__subdf3>
   218ec:	1011883a 	mov	r8,r2
   218f0:	980b883a 	mov	r5,r19
   218f4:	180f883a 	mov	r7,r3
   218f8:	9009883a 	mov	r4,r18
   218fc:	003f4906 	br	21624 <__ieee754_log+0x434>
   21900:	d9000817 	ldw	r4,32(sp)
   21904:	d9400b17 	ldw	r5,44(sp)
   21908:	100d883a 	mov	r6,r2
   2190c:	180f883a 	mov	r7,r3
   21910:	003f4506 	br	21628 <__ieee754_log+0x438>
   21914:	d9000017 	ldw	r4,0(sp)
   21918:	20000e1e 	bne	r4,zero,21954 <__ieee754_log+0x764>
   2191c:	d9000817 	ldw	r4,32(sp)
   21920:	d9400b17 	ldw	r5,44(sp)
   21924:	800d883a 	mov	r6,r16
   21928:	880f883a 	mov	r7,r17
   2192c:	0023c900 	call	23c90 <__subdf3>
   21930:	d9000617 	ldw	r4,24(sp)
   21934:	d9400d17 	ldw	r5,52(sp)
   21938:	180f883a 	mov	r7,r3
   2193c:	100d883a 	mov	r6,r2
   21940:	0023d840 	call	23d84 <__muldf3>
   21944:	003f3306 	br	21614 <__ieee754_log+0x424>
   21948:	000d883a 	mov	r6,zero
   2194c:	000f883a 	mov	r7,zero
   21950:	003e4306 	br	21260 <__ieee754_log+0x70>
   21954:	d9000217 	ldw	r4,8(sp)
   21958:	d9400f17 	ldw	r5,60(sp)
   2195c:	00bfb834 	movhi	r2,65248
   21960:	00cff9b4 	movhi	r3,16358
   21964:	18cb9084 	addi	r3,r3,11842
   21968:	180f883a 	mov	r7,r3
   2196c:	100d883a 	mov	r6,r2
   21970:	0023d840 	call	23d84 <__muldf3>
   21974:	d9000817 	ldw	r4,32(sp)
   21978:	d9400b17 	ldw	r5,44(sp)
   2197c:	800d883a 	mov	r6,r16
   21980:	880f883a 	mov	r7,r17
   21984:	1025883a 	mov	r18,r2
   21988:	1827883a 	mov	r19,r3
   2198c:	0023c900 	call	23c90 <__subdf3>
   21990:	d9000617 	ldw	r4,24(sp)
   21994:	d9400d17 	ldw	r5,52(sp)
   21998:	180f883a 	mov	r7,r3
   2199c:	100d883a 	mov	r6,r2
   219a0:	0023d840 	call	23d84 <__muldf3>
   219a4:	d9000217 	ldw	r4,8(sp)
   219a8:	d9400f17 	ldw	r5,60(sp)
   219ac:	020d5e74 	movhi	r8,13689
   219b0:	420f1d84 	addi	r8,r8,15478
   219b4:	026f7ab4 	movhi	r9,48618
   219b8:	4a4e7bc4 	addi	r9,r9,14831
   219bc:	480f883a 	mov	r7,r9
   219c0:	400d883a 	mov	r6,r8
   219c4:	1021883a 	mov	r16,r2
   219c8:	1823883a 	mov	r17,r3
   219cc:	0023d840 	call	23d84 <__muldf3>
   219d0:	180f883a 	mov	r7,r3
   219d4:	880b883a 	mov	r5,r17
   219d8:	8009883a 	mov	r4,r16
   219dc:	100d883a 	mov	r6,r2
   219e0:	0023d100 	call	23d10 <__adddf3>
   219e4:	003fbc06 	br	218d8 <__ieee754_log+0x6e8>

000219e8 <__ieee754_pow>:
   219e8:	deffbb04 	addi	sp,sp,-276
   219ec:	3005883a 	mov	r2,r6
   219f0:	dd404015 	stw	r21,256(sp)
   219f4:	dd003f15 	stw	r20,252(sp)
   219f8:	d9802815 	stw	r6,160(sp)
   219fc:	2029883a 	mov	r20,r4
   21a00:	282b883a 	mov	r21,r5
   21a04:	3009883a 	mov	r4,r6
   21a08:	380b883a 	mov	r5,r7
   21a0c:	01a00034 	movhi	r6,32768
   21a10:	31bfffc4 	addi	r6,r6,-1
   21a14:	dc003b15 	stw	r16,236(sp)
   21a18:	29a0703a 	and	r16,r5,r6
   21a1c:	1404b03a 	or	r2,r2,r16
   21a20:	dd804115 	stw	r22,260(sp)
   21a24:	dc403c15 	stw	r17,240(sp)
   21a28:	d9c02915 	stw	r7,164(sp)
   21a2c:	382d883a 	mov	r22,r7
   21a30:	dfc04415 	stw	ra,272(sp)
   21a34:	200f883a 	mov	r7,r4
   21a38:	df004315 	stw	fp,268(sp)
   21a3c:	ddc04215 	stw	r23,264(sp)
   21a40:	dcc03e15 	stw	r19,248(sp)
   21a44:	dc803d15 	stw	r18,244(sp)
   21a48:	a023883a 	mov	r17,r20
   21a4c:	2809883a 	mov	r4,r5
   21a50:	10000826 	beq	r2,zero,21a74 <__ieee754_pow+0x8c>
   21a54:	a9a4703a 	and	r18,r21,r6
   21a58:	009ffc34 	movhi	r2,32752
   21a5c:	a827883a 	mov	r19,r21
   21a60:	1480180e 	bge	r2,r18,21ac4 <__ieee754_pow+0xdc>
   21a64:	00b00434 	movhi	r2,49168
   21a68:	9085883a 	add	r2,r18,r2
   21a6c:	8884b03a 	or	r2,r17,r2
   21a70:	1000321e 	bne	r2,zero,21b3c <__ieee754_pow+0x154>
   21a74:	0009883a 	mov	r4,zero
   21a78:	014ffc34 	movhi	r5,16368
   21a7c:	d9002815 	stw	r4,160(sp)
   21a80:	d9402915 	stw	r5,164(sp)
   21a84:	d9002817 	ldw	r4,160(sp)
   21a88:	d9402917 	ldw	r5,164(sp)
   21a8c:	2005883a 	mov	r2,r4
   21a90:	2807883a 	mov	r3,r5
   21a94:	dfc04417 	ldw	ra,272(sp)
   21a98:	df004317 	ldw	fp,268(sp)
   21a9c:	ddc04217 	ldw	r23,264(sp)
   21aa0:	dd804117 	ldw	r22,260(sp)
   21aa4:	dd404017 	ldw	r21,256(sp)
   21aa8:	dd003f17 	ldw	r20,252(sp)
   21aac:	dcc03e17 	ldw	r19,248(sp)
   21ab0:	dc803d17 	ldw	r18,244(sp)
   21ab4:	dc403c17 	ldw	r17,240(sp)
   21ab8:	dc003b17 	ldw	r16,236(sp)
   21abc:	dec04504 	addi	sp,sp,276
   21ac0:	f800283a 	ret
   21ac4:	90802b26 	beq	r18,r2,21b74 <__ieee754_pow+0x18c>
   21ac8:	143fe616 	blt	r2,r16,21a64 <__ieee754_pow+0x7c>
   21acc:	80806126 	beq	r16,r2,21c54 <__ieee754_pow+0x26c>
   21ad0:	982e403a 	cmpge	r23,r19,zero
   21ad4:	b8004e26 	beq	r23,zero,21c10 <__ieee754_pow+0x228>
   21ad8:	0039883a 	mov	fp,zero
   21adc:	3800281e 	bne	r7,zero,21b80 <__ieee754_pow+0x198>
   21ae0:	009ffc34 	movhi	r2,32752
   21ae4:	80804f26 	beq	r16,r2,21c24 <__ieee754_pow+0x23c>
   21ae8:	008ffc34 	movhi	r2,16368
   21aec:	80808226 	beq	r16,r2,21cf8 <__ieee754_pow+0x310>
   21af0:	00900034 	movhi	r2,16384
   21af4:	20828426 	beq	r4,r2,22508 <__ieee754_pow+0xb20>
   21af8:	008ff834 	movhi	r2,16352
   21afc:	2080201e 	bne	r4,r2,21b80 <__ieee754_pow+0x198>
   21b00:	98001f16 	blt	r19,zero,21b80 <__ieee754_pow+0x198>
   21b04:	a80b883a 	mov	r5,r21
   21b08:	a009883a 	mov	r4,r20
   21b0c:	dfc04417 	ldw	ra,272(sp)
   21b10:	df004317 	ldw	fp,268(sp)
   21b14:	ddc04217 	ldw	r23,264(sp)
   21b18:	dd804117 	ldw	r22,260(sp)
   21b1c:	dd404017 	ldw	r21,256(sp)
   21b20:	dd003f17 	ldw	r20,252(sp)
   21b24:	dcc03e17 	ldw	r19,248(sp)
   21b28:	dc803d17 	ldw	r18,244(sp)
   21b2c:	dc403c17 	ldw	r17,240(sp)
   21b30:	dc003b17 	ldw	r16,236(sp)
   21b34:	dec04504 	addi	sp,sp,276
   21b38:	0022ce81 	jmpi	22ce8 <__ieee754_sqrt>
   21b3c:	010000f4 	movhi	r4,3
   21b40:	213f9d04 	addi	r4,r4,-396
   21b44:	dfc04417 	ldw	ra,272(sp)
   21b48:	df004317 	ldw	fp,268(sp)
   21b4c:	ddc04217 	ldw	r23,264(sp)
   21b50:	dd804117 	ldw	r22,260(sp)
   21b54:	dd404017 	ldw	r21,256(sp)
   21b58:	dd003f17 	ldw	r20,252(sp)
   21b5c:	dcc03e17 	ldw	r19,248(sp)
   21b60:	dc803d17 	ldw	r18,244(sp)
   21b64:	dc403c17 	ldw	r17,240(sp)
   21b68:	dc003b17 	ldw	r16,236(sp)
   21b6c:	dec04504 	addi	sp,sp,276
   21b70:	002301c1 	jmpi	2301c <nan>
   21b74:	a03fbb1e 	bne	r20,zero,21a64 <__ieee754_pow+0x7c>
   21b78:	003fd306 	br	21ac8 <__ieee754_pow+0xe0>
   21b7c:	0039883a 	mov	fp,zero
   21b80:	a009883a 	mov	r4,r20
   21b84:	a80b883a 	mov	r5,r21
   21b88:	0022fb00 	call	22fb0 <fabs>
   21b8c:	1015883a 	mov	r10,r2
   21b90:	1817883a 	mov	r11,r3
   21b94:	88001226 	beq	r17,zero,21be0 <__ieee754_pow+0x1f8>
   21b98:	9804d7fa 	srli	r2,r19,31
   21b9c:	10bfffc4 	addi	r2,r2,-1
   21ba0:	1706b03a 	or	r3,r2,fp
   21ba4:	d8802515 	stw	r2,148(sp)
   21ba8:	18002c1e 	bne	r3,zero,21c5c <__ieee754_pow+0x274>
   21bac:	a80f883a 	mov	r7,r21
   21bb0:	a009883a 	mov	r4,r20
   21bb4:	a80b883a 	mov	r5,r21
   21bb8:	a00d883a 	mov	r6,r20
   21bbc:	0023c900 	call	23c90 <__subdf3>
   21bc0:	1009883a 	mov	r4,r2
   21bc4:	180b883a 	mov	r5,r3
   21bc8:	100d883a 	mov	r6,r2
   21bcc:	180f883a 	mov	r7,r3
   21bd0:	00241480 	call	24148 <__divdf3>
   21bd4:	d8802815 	stw	r2,160(sp)
   21bd8:	d8c02915 	stw	r3,164(sp)
   21bdc:	003fa906 	br	21a84 <__ieee754_pow+0x9c>
   21be0:	009ffc34 	movhi	r2,32752
   21be4:	90800326 	beq	r18,r2,21bf4 <__ieee754_pow+0x20c>
   21be8:	90000226 	beq	r18,zero,21bf4 <__ieee754_pow+0x20c>
   21bec:	008ffc34 	movhi	r2,16368
   21bf0:	90bfe91e 	bne	r18,r2,21b98 <__ieee754_pow+0x1b0>
   21bf4:	b0026316 	blt	r22,zero,22584 <__ieee754_pow+0xb9c>
   21bf8:	5011883a 	mov	r8,r10
   21bfc:	5813883a 	mov	r9,r11
   21c00:	b8023126 	beq	r23,zero,224c8 <__ieee754_pow+0xae0>
   21c04:	da002815 	stw	r8,160(sp)
   21c08:	da402915 	stw	r9,164(sp)
   21c0c:	003f9d06 	br	21a84 <__ieee754_pow+0x9c>
   21c10:	0090d034 	movhi	r2,17216
   21c14:	10bfffc4 	addi	r2,r2,-1
   21c18:	1400270e 	bge	r2,r16,21cb8 <__ieee754_pow+0x2d0>
   21c1c:	07000084 	movi	fp,2
   21c20:	003fae06 	br	21adc <__ieee754_pow+0xf4>
   21c24:	00b00434 	movhi	r2,49168
   21c28:	9085883a 	add	r2,r18,r2
   21c2c:	8884b03a 	or	r2,r17,r2
   21c30:	103f9026 	beq	r2,zero,21a74 <__ieee754_pow+0x8c>
   21c34:	008ffc34 	movhi	r2,16368
   21c38:	10bfffc4 	addi	r2,r2,-1
   21c3c:	1482d00e 	bge	r2,r18,22780 <__ieee754_pow+0xd98>
   21c40:	b03f900e 	bge	r22,zero,21a84 <__ieee754_pow+0x9c>
   21c44:	0005883a 	mov	r2,zero
   21c48:	d8802815 	stw	r2,160(sp)
   21c4c:	d8802915 	stw	r2,164(sp)
   21c50:	003f8c06 	br	21a84 <__ieee754_pow+0x9c>
   21c54:	383f9e26 	beq	r7,zero,21ad0 <__ieee754_pow+0xe8>
   21c58:	003f8206 	br	21a64 <__ieee754_pow+0x7c>
   21c5c:	00907834 	movhi	r2,16864
   21c60:	1400290e 	bge	r2,r16,21d08 <__ieee754_pow+0x320>
   21c64:	0090fc34 	movhi	r2,17392
   21c68:	1402500e 	bge	r2,r16,225ac <__ieee754_pow+0xbc4>
   21c6c:	008ffc34 	movhi	r2,16368
   21c70:	10bfffc4 	addi	r2,r2,-1
   21c74:	14800b0e 	bge	r2,r18,21ca4 <__ieee754_pow+0x2bc>
   21c78:	05800b0e 	bge	zero,r22,21ca8 <__ieee754_pow+0x2c0>
   21c7c:	00a20034 	movhi	r2,34816
   21c80:	109d6704 	addi	r2,r2,30108
   21c84:	00df8e34 	movhi	r3,32312
   21c88:	18f90f04 	addi	r3,r3,-7108
   21c8c:	100d883a 	mov	r6,r2
   21c90:	180f883a 	mov	r7,r3
   21c94:	1009883a 	mov	r4,r2
   21c98:	180b883a 	mov	r5,r3
   21c9c:	0023d840 	call	23d84 <__muldf3>
   21ca0:	003fcc06 	br	21bd4 <__ieee754_pow+0x1ec>
   21ca4:	b03ff516 	blt	r22,zero,21c7c <__ieee754_pow+0x294>
   21ca8:	0007883a 	mov	r3,zero
   21cac:	d8c02815 	stw	r3,160(sp)
   21cb0:	d8c02915 	stw	r3,164(sp)
   21cb4:	003f7306 	br	21a84 <__ieee754_pow+0x9c>
   21cb8:	008ffc34 	movhi	r2,16368
   21cbc:	10bfffc4 	addi	r2,r2,-1
   21cc0:	143f850e 	bge	r2,r16,21ad8 <__ieee754_pow+0xf0>
   21cc4:	8005d53a 	srai	r2,r16,20
   21cc8:	01400504 	movi	r5,20
   21ccc:	10ff0044 	addi	r3,r2,-1023
   21cd0:	28c3e10e 	bge	r5,r3,22c58 <__ieee754_pow+0x1270>
   21cd4:	00800d04 	movi	r2,52
   21cd8:	10c5c83a 	sub	r2,r2,r3
   21cdc:	3886d83a 	srl	r3,r7,r2
   21ce0:	1884983a 	sll	r2,r3,r2
   21ce4:	38bf7c1e 	bne	r7,r2,21ad8 <__ieee754_pow+0xf0>
   21ce8:	18c0004c 	andi	r3,r3,1
   21cec:	00800084 	movi	r2,2
   21cf0:	10f9c83a 	sub	fp,r2,r3
   21cf4:	003f7906 	br	21adc <__ieee754_pow+0xf4>
   21cf8:	b0038516 	blt	r22,zero,22b10 <__ieee754_pow+0x1128>
   21cfc:	dd002815 	stw	r20,160(sp)
   21d00:	dd402915 	stw	r21,164(sp)
   21d04:	003f5f06 	br	21a84 <__ieee754_pow+0x9c>
   21d08:	00800434 	movhi	r2,16
   21d0c:	10bfffc4 	addi	r2,r2,-1
   21d10:	1482900e 	bge	r2,r18,22754 <__ieee754_pow+0xd6c>
   21d14:	000b883a 	mov	r5,zero
   21d18:	9005d53a 	srai	r2,r18,20
   21d1c:	00c00434 	movhi	r3,16
   21d20:	18ffffc4 	addi	r3,r3,-1
   21d24:	90c8703a 	and	r4,r18,r3
   21d28:	2887883a 	add	r3,r5,r2
   21d2c:	18bf0044 	addi	r2,r3,-1023
   21d30:	d8800015 	stw	r2,0(sp)
   21d34:	00800134 	movhi	r2,4
   21d38:	10a62384 	addi	r2,r2,-26482
   21d3c:	250ffc34 	orhi	r20,r4,16368
   21d40:	1101ee0e 	bge	r2,r4,224fc <__ieee754_pow+0xb14>
   21d44:	00800334 	movhi	r2,12
   21d48:	10ad9e44 	addi	r2,r2,-18823
   21d4c:	1101e716 	blt	r2,r4,224ec <__ieee754_pow+0xb04>
   21d50:	01000044 	movi	r4,1
   21d54:	04000334 	movhi	r16,12
   21d58:	200890fa 	slli	r4,r4,3
   21d5c:	da800115 	stw	r10,4(sp)
   21d60:	dd000215 	stw	r20,8(sp)
   21d64:	d9002c15 	stw	r4,176(sp)
   21d68:	d9402c17 	ldw	r5,176(sp)
   21d6c:	010000f4 	movhi	r4,3
   21d70:	213f3304 	addi	r4,r4,-820
   21d74:	a02bd07a 	srai	r21,r20,1
   21d78:	2909883a 	add	r4,r5,r4
   21d7c:	25800017 	ldw	r22,0(r4)
   21d80:	25c00117 	ldw	r23,4(r4)
   21d84:	a00b883a 	mov	r5,r20
   21d88:	5009883a 	mov	r4,r10
   21d8c:	b00d883a 	mov	r6,r22
   21d90:	b80f883a 	mov	r7,r23
   21d94:	0023c900 	call	23c90 <__subdf3>
   21d98:	d9000117 	ldw	r4,4(sp)
   21d9c:	a00b883a 	mov	r5,r20
   21da0:	b00d883a 	mov	r6,r22
   21da4:	b80f883a 	mov	r7,r23
   21da8:	1025883a 	mov	r18,r2
   21dac:	1827883a 	mov	r19,r3
   21db0:	0023d100 	call	23d10 <__adddf3>
   21db4:	0011883a 	mov	r8,zero
   21db8:	024ffc34 	movhi	r9,16368
   21dbc:	480b883a 	mov	r5,r9
   21dc0:	4009883a 	mov	r4,r8
   21dc4:	180f883a 	mov	r7,r3
   21dc8:	100d883a 	mov	r6,r2
   21dcc:	00241480 	call	24148 <__divdf3>
   21dd0:	d8c02e15 	stw	r3,184(sp)
   21dd4:	d8800f15 	stw	r2,60(sp)
   21dd8:	d8802d15 	stw	r2,180(sp)
   21ddc:	d8802e17 	ldw	r2,184(sp)
   21de0:	d9800f17 	ldw	r6,60(sp)
   21de4:	9009883a 	mov	r4,r18
   21de8:	980b883a 	mov	r5,r19
   21dec:	100f883a 	mov	r7,r2
   21df0:	dc800b15 	stw	r18,44(sp)
   21df4:	dcc00c15 	stw	r19,48(sp)
   21df8:	d8801015 	stw	r2,64(sp)
   21dfc:	0023d840 	call	23d84 <__muldf3>
   21e00:	d8c03015 	stw	r3,192(sp)
   21e04:	d9003017 	ldw	r4,192(sp)
   21e08:	d8802f15 	stw	r2,188(sp)
   21e0c:	d8800315 	stw	r2,12(sp)
   21e10:	ad480034 	orhi	r21,r21,8192
   21e14:	0005883a 	mov	r2,zero
   21e18:	ac2b883a 	add	r21,r21,r16
   21e1c:	000b883a 	mov	r5,zero
   21e20:	1021883a 	mov	r16,r2
   21e24:	2005883a 	mov	r2,r4
   21e28:	800d883a 	mov	r6,r16
   21e2c:	a80f883a 	mov	r7,r21
   21e30:	d9000415 	stw	r4,16(sp)
   21e34:	d9002715 	stw	r4,156(sp)
   21e38:	d9402615 	stw	r5,152(sp)
   21e3c:	d9401615 	stw	r5,88(sp)
   21e40:	d9001715 	stw	r4,92(sp)
   21e44:	100b883a 	mov	r5,r2
   21e48:	0009883a 	mov	r4,zero
   21e4c:	0023d840 	call	23d84 <__muldf3>
   21e50:	d9000b17 	ldw	r4,44(sp)
   21e54:	980b883a 	mov	r5,r19
   21e58:	180f883a 	mov	r7,r3
   21e5c:	100d883a 	mov	r6,r2
   21e60:	0023c900 	call	23c90 <__subdf3>
   21e64:	8009883a 	mov	r4,r16
   21e68:	a80b883a 	mov	r5,r21
   21e6c:	b80f883a 	mov	r7,r23
   21e70:	b00d883a 	mov	r6,r22
   21e74:	1021883a 	mov	r16,r2
   21e78:	1823883a 	mov	r17,r3
   21e7c:	0023c900 	call	23c90 <__subdf3>
   21e80:	d9000117 	ldw	r4,4(sp)
   21e84:	a00b883a 	mov	r5,r20
   21e88:	180f883a 	mov	r7,r3
   21e8c:	100d883a 	mov	r6,r2
   21e90:	0023c900 	call	23c90 <__subdf3>
   21e94:	d9001617 	ldw	r4,88(sp)
   21e98:	d9402717 	ldw	r5,156(sp)
   21e9c:	180f883a 	mov	r7,r3
   21ea0:	100d883a 	mov	r6,r2
   21ea4:	0023d840 	call	23d84 <__muldf3>
   21ea8:	180f883a 	mov	r7,r3
   21eac:	880b883a 	mov	r5,r17
   21eb0:	8009883a 	mov	r4,r16
   21eb4:	100d883a 	mov	r6,r2
   21eb8:	0023c900 	call	23c90 <__subdf3>
   21ebc:	d9000f17 	ldw	r4,60(sp)
   21ec0:	d9402e17 	ldw	r5,184(sp)
   21ec4:	180f883a 	mov	r7,r3
   21ec8:	100d883a 	mov	r6,r2
   21ecc:	0023d840 	call	23d84 <__muldf3>
   21ed0:	d9000317 	ldw	r4,12(sp)
   21ed4:	d9403017 	ldw	r5,192(sp)
   21ed8:	d8803115 	stw	r2,196(sp)
   21edc:	200d883a 	mov	r6,r4
   21ee0:	280f883a 	mov	r7,r5
   21ee4:	d8c03215 	stw	r3,200(sp)
   21ee8:	0023d840 	call	23d84 <__muldf3>
   21eec:	1009883a 	mov	r4,r2
   21ef0:	180b883a 	mov	r5,r3
   21ef4:	100d883a 	mov	r6,r2
   21ef8:	180f883a 	mov	r7,r3
   21efc:	1021883a 	mov	r16,r2
   21f00:	1823883a 	mov	r17,r3
   21f04:	0023d840 	call	23d84 <__muldf3>
   21f08:	02129174 	movhi	r8,19013
   21f0c:	4213bbc4 	addi	r8,r8,20207
   21f10:	024ff2b4 	movhi	r9,16330
   21f14:	4a5f8a04 	addi	r9,r9,32296
   21f18:	480f883a 	mov	r7,r9
   21f1c:	8009883a 	mov	r4,r16
   21f20:	880b883a 	mov	r5,r17
   21f24:	400d883a 	mov	r6,r8
   21f28:	1029883a 	mov	r20,r2
   21f2c:	182b883a 	mov	r21,r3
   21f30:	0023d840 	call	23d84 <__muldf3>
   21f34:	0224f2b4 	movhi	r8,37834
   21f38:	4236d944 	addi	r8,r8,-9371
   21f3c:	024ff3b4 	movhi	r9,16334
   21f40:	4a619284 	addi	r9,r9,-31158
   21f44:	480f883a 	mov	r7,r9
   21f48:	400d883a 	mov	r6,r8
   21f4c:	180b883a 	mov	r5,r3
   21f50:	1009883a 	mov	r4,r2
   21f54:	0023d100 	call	23d10 <__adddf3>
   21f58:	180f883a 	mov	r7,r3
   21f5c:	8009883a 	mov	r4,r16
   21f60:	880b883a 	mov	r5,r17
   21f64:	100d883a 	mov	r6,r2
   21f68:	0023d840 	call	23d84 <__muldf3>
   21f6c:	022a4774 	movhi	r8,43293
   21f70:	42104044 	addi	r8,r8,16641
   21f74:	024ff474 	movhi	r9,16337
   21f78:	4a5d1804 	addi	r9,r9,29792
   21f7c:	480f883a 	mov	r7,r9
   21f80:	400d883a 	mov	r6,r8
   21f84:	180b883a 	mov	r5,r3
   21f88:	1009883a 	mov	r4,r2
   21f8c:	0023d100 	call	23d10 <__adddf3>
   21f90:	180f883a 	mov	r7,r3
   21f94:	8009883a 	mov	r4,r16
   21f98:	880b883a 	mov	r5,r17
   21f9c:	100d883a 	mov	r6,r2
   21fa0:	0023d840 	call	23d84 <__muldf3>
   21fa4:	021463f4 	movhi	r8,20879
   21fa8:	42099344 	addi	r8,r8,9805
   21fac:	024ff574 	movhi	r9,16341
   21fb0:	4a555544 	addi	r9,r9,21845
   21fb4:	480f883a 	mov	r7,r9
   21fb8:	400d883a 	mov	r6,r8
   21fbc:	180b883a 	mov	r5,r3
   21fc0:	1009883a 	mov	r4,r2
   21fc4:	0023d100 	call	23d10 <__adddf3>
   21fc8:	180f883a 	mov	r7,r3
   21fcc:	8009883a 	mov	r4,r16
   21fd0:	880b883a 	mov	r5,r17
   21fd4:	100d883a 	mov	r6,r2
   21fd8:	0023d840 	call	23d84 <__muldf3>
   21fdc:	0236dc34 	movhi	r8,56176
   21fe0:	422affc4 	addi	r8,r8,-21505
   21fe4:	024ff6f4 	movhi	r9,16347
   21fe8:	4a5b6d84 	addi	r9,r9,28086
   21fec:	480f883a 	mov	r7,r9
   21ff0:	400d883a 	mov	r6,r8
   21ff4:	180b883a 	mov	r5,r3
   21ff8:	1009883a 	mov	r4,r2
   21ffc:	0023d100 	call	23d10 <__adddf3>
   22000:	180f883a 	mov	r7,r3
   22004:	8009883a 	mov	r4,r16
   22008:	880b883a 	mov	r5,r17
   2200c:	100d883a 	mov	r6,r2
   22010:	0023d840 	call	23d84 <__muldf3>
   22014:	020cccf4 	movhi	r8,13107
   22018:	420cc0c4 	addi	r8,r8,13059
   2201c:	024ff8f4 	movhi	r9,16355
   22020:	4a4cccc4 	addi	r9,r9,13107
   22024:	480f883a 	mov	r7,r9
   22028:	400d883a 	mov	r6,r8
   2202c:	180b883a 	mov	r5,r3
   22030:	1009883a 	mov	r4,r2
   22034:	0023d100 	call	23d10 <__adddf3>
   22038:	180f883a 	mov	r7,r3
   2203c:	a80b883a 	mov	r5,r21
   22040:	a009883a 	mov	r4,r20
   22044:	100d883a 	mov	r6,r2
   22048:	0023d840 	call	23d84 <__muldf3>
   2204c:	d9000317 	ldw	r4,12(sp)
   22050:	d9403017 	ldw	r5,192(sp)
   22054:	d9801617 	ldw	r6,88(sp)
   22058:	d9c02717 	ldw	r7,156(sp)
   2205c:	1021883a 	mov	r16,r2
   22060:	1823883a 	mov	r17,r3
   22064:	0023d100 	call	23d10 <__adddf3>
   22068:	d9003117 	ldw	r4,196(sp)
   2206c:	d9403217 	ldw	r5,200(sp)
   22070:	180f883a 	mov	r7,r3
   22074:	100d883a 	mov	r6,r2
   22078:	d9001415 	stw	r4,80(sp)
   2207c:	d9401515 	stw	r5,84(sp)
   22080:	0023d840 	call	23d84 <__muldf3>
   22084:	180f883a 	mov	r7,r3
   22088:	8009883a 	mov	r4,r16
   2208c:	880b883a 	mov	r5,r17
   22090:	100d883a 	mov	r6,r2
   22094:	0023d100 	call	23d10 <__adddf3>
   22098:	d9001617 	ldw	r4,88(sp)
   2209c:	d9402717 	ldw	r5,156(sp)
   220a0:	d8803315 	stw	r2,204(sp)
   220a4:	200d883a 	mov	r6,r4
   220a8:	280f883a 	mov	r7,r5
   220ac:	d8c03415 	stw	r3,208(sp)
   220b0:	0023d840 	call	23d84 <__muldf3>
   220b4:	182f883a 	mov	r23,r3
   220b8:	05500234 	movhi	r21,16392
   220bc:	0029883a 	mov	r20,zero
   220c0:	b80b883a 	mov	r5,r23
   220c4:	a00d883a 	mov	r6,r20
   220c8:	a80f883a 	mov	r7,r21
   220cc:	1009883a 	mov	r4,r2
   220d0:	d8800715 	stw	r2,28(sp)
   220d4:	d8c00815 	stw	r3,32(sp)
   220d8:	0023d100 	call	23d10 <__adddf3>
   220dc:	d9003317 	ldw	r4,204(sp)
   220e0:	d9403417 	ldw	r5,208(sp)
   220e4:	180f883a 	mov	r7,r3
   220e8:	100d883a 	mov	r6,r2
   220ec:	d9000515 	stw	r4,20(sp)
   220f0:	d9400615 	stw	r5,24(sp)
   220f4:	0023d100 	call	23d10 <__adddf3>
   220f8:	d9001617 	ldw	r4,88(sp)
   220fc:	d9402717 	ldw	r5,156(sp)
   22100:	0025883a 	mov	r18,zero
   22104:	900d883a 	mov	r6,r18
   22108:	180f883a 	mov	r7,r3
   2210c:	1823883a 	mov	r17,r3
   22110:	0023d840 	call	23d84 <__muldf3>
   22114:	d9001417 	ldw	r4,80(sp)
   22118:	d9403217 	ldw	r5,200(sp)
   2211c:	880f883a 	mov	r7,r17
   22120:	900d883a 	mov	r6,r18
   22124:	d8803515 	stw	r2,212(sp)
   22128:	d8c03615 	stw	r3,216(sp)
   2212c:	0023d840 	call	23d84 <__muldf3>
   22130:	a80f883a 	mov	r7,r21
   22134:	880b883a 	mov	r5,r17
   22138:	000d883a 	mov	r6,zero
   2213c:	9009883a 	mov	r4,r18
   22140:	1021883a 	mov	r16,r2
   22144:	1823883a 	mov	r17,r3
   22148:	0023c900 	call	23c90 <__subdf3>
   2214c:	d9800717 	ldw	r6,28(sp)
   22150:	b80f883a 	mov	r7,r23
   22154:	180b883a 	mov	r5,r3
   22158:	1009883a 	mov	r4,r2
   2215c:	0023c900 	call	23c90 <__subdf3>
   22160:	d9000517 	ldw	r4,20(sp)
   22164:	d9403417 	ldw	r5,208(sp)
   22168:	180f883a 	mov	r7,r3
   2216c:	100d883a 	mov	r6,r2
   22170:	0023c900 	call	23c90 <__subdf3>
   22174:	d9000317 	ldw	r4,12(sp)
   22178:	d9403017 	ldw	r5,192(sp)
   2217c:	180f883a 	mov	r7,r3
   22180:	100d883a 	mov	r6,r2
   22184:	0023d840 	call	23d84 <__muldf3>
   22188:	180f883a 	mov	r7,r3
   2218c:	880b883a 	mov	r5,r17
   22190:	8009883a 	mov	r4,r16
   22194:	100d883a 	mov	r6,r2
   22198:	0023d100 	call	23d10 <__adddf3>
   2219c:	102d883a 	mov	r22,r2
   221a0:	d9003617 	ldw	r4,216(sp)
   221a4:	d8803517 	ldw	r2,212(sp)
   221a8:	d9403617 	ldw	r5,216(sp)
   221ac:	182f883a 	mov	r23,r3
   221b0:	b00d883a 	mov	r6,r22
   221b4:	b80f883a 	mov	r7,r23
   221b8:	d9000a15 	stw	r4,40(sp)
   221bc:	1009883a 	mov	r4,r2
   221c0:	054ffbf4 	movhi	r21,16367
   221c4:	ad71c244 	addi	r21,r21,-14583
   221c8:	dd800d15 	stw	r22,52(sp)
   221cc:	ddc00e15 	stw	r23,56(sp)
   221d0:	05380034 	movhi	r20,57344
   221d4:	d8800915 	stw	r2,36(sp)
   221d8:	0023d100 	call	23d10 <__adddf3>
   221dc:	180b883a 	mov	r5,r3
   221e0:	a00d883a 	mov	r6,r20
   221e4:	a80f883a 	mov	r7,r21
   221e8:	9009883a 	mov	r4,r18
   221ec:	1823883a 	mov	r17,r3
   221f0:	0023d840 	call	23d84 <__muldf3>
   221f4:	020516f4 	movhi	r8,5211
   221f8:	42007d44 	addi	r8,r8,501
   221fc:	026f8fb4 	movhi	r9,48702
   22200:	4a4bf804 	addi	r9,r9,12256
   22204:	480f883a 	mov	r7,r9
   22208:	400d883a 	mov	r6,r8
   2220c:	880b883a 	mov	r5,r17
   22210:	9009883a 	mov	r4,r18
   22214:	d8803715 	stw	r2,220(sp)
   22218:	d8c03815 	stw	r3,224(sp)
   2221c:	0023d840 	call	23d84 <__muldf3>
   22220:	d9800917 	ldw	r6,36(sp)
   22224:	d9c03617 	ldw	r7,216(sp)
   22228:	880b883a 	mov	r5,r17
   2222c:	9009883a 	mov	r4,r18
   22230:	1021883a 	mov	r16,r2
   22234:	1823883a 	mov	r17,r3
   22238:	0023c900 	call	23c90 <__subdf3>
   2223c:	d9000d17 	ldw	r4,52(sp)
   22240:	b80b883a 	mov	r5,r23
   22244:	180f883a 	mov	r7,r3
   22248:	100d883a 	mov	r6,r2
   2224c:	0023c900 	call	23c90 <__subdf3>
   22250:	180b883a 	mov	r5,r3
   22254:	a80f883a 	mov	r7,r21
   22258:	01b70eb4 	movhi	r6,56378
   2225c:	3180ff44 	addi	r6,r6,1021
   22260:	1009883a 	mov	r4,r2
   22264:	0023d840 	call	23d84 <__muldf3>
   22268:	180f883a 	mov	r7,r3
   2226c:	880b883a 	mov	r5,r17
   22270:	8009883a 	mov	r4,r16
   22274:	100d883a 	mov	r6,r2
   22278:	0023d100 	call	23d10 <__adddf3>
   2227c:	d9402c17 	ldw	r5,176(sp)
   22280:	010000f4 	movhi	r4,3
   22284:	213f3704 	addi	r4,r4,-804
   22288:	2909883a 	add	r4,r5,r4
   2228c:	22400117 	ldw	r9,4(r4)
   22290:	22000017 	ldw	r8,0(r4)
   22294:	180b883a 	mov	r5,r3
   22298:	480f883a 	mov	r7,r9
   2229c:	400d883a 	mov	r6,r8
   222a0:	1009883a 	mov	r4,r2
   222a4:	0023d100 	call	23d10 <__adddf3>
   222a8:	d9000017 	ldw	r4,0(sp)
   222ac:	182f883a 	mov	r23,r3
   222b0:	102d883a 	mov	r22,r2
   222b4:	00246d00 	call	246d0 <__floatsidf>
   222b8:	d9402c17 	ldw	r5,176(sp)
   222bc:	010000f4 	movhi	r4,3
   222c0:	213f3b04 	addi	r4,r4,-788
   222c4:	b00d883a 	mov	r6,r22
   222c8:	2911883a 	add	r8,r5,r4
   222cc:	d9003717 	ldw	r4,220(sp)
   222d0:	d9403817 	ldw	r5,224(sp)
   222d4:	45000017 	ldw	r20,0(r8)
   222d8:	d9002315 	stw	r4,140(sp)
   222dc:	d9003817 	ldw	r4,224(sp)
   222e0:	45400117 	ldw	r21,4(r8)
   222e4:	b80f883a 	mov	r7,r23
   222e8:	d9002415 	stw	r4,144(sp)
   222ec:	d9002317 	ldw	r4,140(sp)
   222f0:	1021883a 	mov	r16,r2
   222f4:	1823883a 	mov	r17,r3
   222f8:	dd802115 	stw	r22,132(sp)
   222fc:	ddc02215 	stw	r23,136(sp)
   22300:	0023d100 	call	23d10 <__adddf3>
   22304:	180b883a 	mov	r5,r3
   22308:	1009883a 	mov	r4,r2
   2230c:	a00d883a 	mov	r6,r20
   22310:	a80f883a 	mov	r7,r21
   22314:	0023d100 	call	23d10 <__adddf3>
   22318:	180f883a 	mov	r7,r3
   2231c:	8009883a 	mov	r4,r16
   22320:	880b883a 	mov	r5,r17
   22324:	100d883a 	mov	r6,r2
   22328:	0023d100 	call	23d10 <__adddf3>
   2232c:	180b883a 	mov	r5,r3
   22330:	0009883a 	mov	r4,zero
   22334:	800d883a 	mov	r6,r16
   22338:	880f883a 	mov	r7,r17
   2233c:	d9001b15 	stw	r4,108(sp)
   22340:	d8c01c15 	stw	r3,112(sp)
   22344:	0023c900 	call	23c90 <__subdf3>
   22348:	180b883a 	mov	r5,r3
   2234c:	a80f883a 	mov	r7,r21
   22350:	1009883a 	mov	r4,r2
   22354:	a00d883a 	mov	r6,r20
   22358:	0023c900 	call	23c90 <__subdf3>
   2235c:	d9802317 	ldw	r6,140(sp)
   22360:	d9c03817 	ldw	r7,224(sp)
   22364:	180b883a 	mov	r5,r3
   22368:	1009883a 	mov	r4,r2
   2236c:	0023c900 	call	23c90 <__subdf3>
   22370:	d9002117 	ldw	r4,132(sp)
   22374:	1011883a 	mov	r8,r2
   22378:	1813883a 	mov	r9,r3
   2237c:	b80b883a 	mov	r5,r23
   22380:	480f883a 	mov	r7,r9
   22384:	400d883a 	mov	r6,r8
   22388:	0023c900 	call	23c90 <__subdf3>
   2238c:	1823883a 	mov	r17,r3
   22390:	d8c02517 	ldw	r3,148(sp)
   22394:	1021883a 	mov	r16,r2
   22398:	e0bfffc4 	addi	r2,fp,-1
   2239c:	1884b03a 	or	r2,r3,r2
   223a0:	1000731e 	bne	r2,zero,22570 <__ieee754_pow+0xb88>
   223a4:	0009883a 	mov	r4,zero
   223a8:	016ffc34 	movhi	r5,49136
   223ac:	d9001915 	stw	r4,100(sp)
   223b0:	d9401a15 	stw	r5,104(sp)
   223b4:	d9402917 	ldw	r5,164(sp)
   223b8:	d9002817 	ldw	r4,160(sp)
   223bc:	0029883a 	mov	r20,zero
   223c0:	a00d883a 	mov	r6,r20
   223c4:	280f883a 	mov	r7,r5
   223c8:	2827883a 	mov	r19,r5
   223cc:	0023c900 	call	23c90 <__subdf3>
   223d0:	d9001b17 	ldw	r4,108(sp)
   223d4:	d9401c17 	ldw	r5,112(sp)
   223d8:	180f883a 	mov	r7,r3
   223dc:	100d883a 	mov	r6,r2
   223e0:	0023d840 	call	23d84 <__muldf3>
   223e4:	d9c02917 	ldw	r7,164(sp)
   223e8:	d9802817 	ldw	r6,160(sp)
   223ec:	880b883a 	mov	r5,r17
   223f0:	8009883a 	mov	r4,r16
   223f4:	1823883a 	mov	r17,r3
   223f8:	1021883a 	mov	r16,r2
   223fc:	0023d840 	call	23d84 <__muldf3>
   22400:	180f883a 	mov	r7,r3
   22404:	880b883a 	mov	r5,r17
   22408:	8009883a 	mov	r4,r16
   2240c:	100d883a 	mov	r6,r2
   22410:	0023d100 	call	23d10 <__adddf3>
   22414:	d9401c17 	ldw	r5,112(sp)
   22418:	d9001b17 	ldw	r4,108(sp)
   2241c:	a00d883a 	mov	r6,r20
   22420:	980f883a 	mov	r7,r19
   22424:	1029883a 	mov	r20,r2
   22428:	182b883a 	mov	r21,r3
   2242c:	0023d840 	call	23d84 <__muldf3>
   22430:	1025883a 	mov	r18,r2
   22434:	1827883a 	mov	r19,r3
   22438:	a009883a 	mov	r4,r20
   2243c:	a80b883a 	mov	r5,r21
   22440:	900d883a 	mov	r6,r18
   22444:	980f883a 	mov	r7,r19
   22448:	dd001d15 	stw	r20,116(sp)
   2244c:	dc801f15 	stw	r18,124(sp)
   22450:	dd401e15 	stw	r21,120(sp)
   22454:	dcc02015 	stw	r19,128(sp)
   22458:	0023d100 	call	23d10 <__adddf3>
   2245c:	1823883a 	mov	r17,r3
   22460:	01102434 	movhi	r4,16528
   22464:	213fffc4 	addi	r4,r4,-1
   22468:	1021883a 	mov	r16,r2
   2246c:	182f883a 	mov	r23,r3
   22470:	dc401815 	stw	r17,96(sp)
   22474:	100b883a 	mov	r5,r2
   22478:	20c02c0e 	bge	r4,r3,2252c <__ieee754_pow+0xb44>
   2247c:	00afdc34 	movhi	r2,49008
   22480:	1885883a 	add	r2,r3,r2
   22484:	2884b03a 	or	r2,r5,r2
   22488:	1001a626 	beq	r2,zero,22b24 <__ieee754_pow+0x113c>
   2248c:	04220034 	movhi	r16,34816
   22490:	841d6704 	addi	r16,r16,30108
   22494:	045f8e34 	movhi	r17,32312
   22498:	8c790f04 	addi	r17,r17,-7108
   2249c:	d9401a17 	ldw	r5,104(sp)
   224a0:	d9001917 	ldw	r4,100(sp)
   224a4:	800d883a 	mov	r6,r16
   224a8:	880f883a 	mov	r7,r17
   224ac:	0023d840 	call	23d84 <__muldf3>
   224b0:	180b883a 	mov	r5,r3
   224b4:	800d883a 	mov	r6,r16
   224b8:	880f883a 	mov	r7,r17
   224bc:	1009883a 	mov	r4,r2
   224c0:	0023d840 	call	23d84 <__muldf3>
   224c4:	003dc306 	br	21bd4 <__ieee754_pow+0x1ec>
   224c8:	00b00434 	movhi	r2,49168
   224cc:	9085883a 	add	r2,r18,r2
   224d0:	e084b03a 	or	r2,fp,r2
   224d4:	1000af1e 	bne	r2,zero,22794 <__ieee754_pow+0xdac>
   224d8:	480f883a 	mov	r7,r9
   224dc:	4009883a 	mov	r4,r8
   224e0:	480b883a 	mov	r5,r9
   224e4:	400d883a 	mov	r6,r8
   224e8:	003db406 	br	21bbc <__ieee754_pow+0x1d4>
   224ec:	00bffc34 	movhi	r2,65520
   224f0:	18ff0084 	addi	r3,r3,-1022
   224f4:	a0a9883a 	add	r20,r20,r2
   224f8:	d8c00015 	stw	r3,0(sp)
   224fc:	0009883a 	mov	r4,zero
   22500:	04000234 	movhi	r16,8
   22504:	003e1406 	br	21d58 <__ieee754_pow+0x370>
   22508:	a80f883a 	mov	r7,r21
   2250c:	a009883a 	mov	r4,r20
   22510:	a80b883a 	mov	r5,r21
   22514:	a00d883a 	mov	r6,r20
   22518:	0023d840 	call	23d84 <__muldf3>
   2251c:	180b883a 	mov	r5,r3
   22520:	d8802815 	stw	r2,160(sp)
   22524:	d9402915 	stw	r5,164(sp)
   22528:	003d5606 	br	21a84 <__ieee754_pow+0x9c>
   2252c:	d9001817 	ldw	r4,96(sp)
   22530:	00a00034 	movhi	r2,32768
   22534:	10bfffc4 	addi	r2,r2,-1
   22538:	00d02474 	movhi	r3,16529
   2253c:	18f2ffc4 	addi	r3,r3,-13313
   22540:	20b8703a 	and	fp,r4,r2
   22544:	1f009d0e 	bge	r3,fp,227bc <__ieee754_pow+0xdd4>
   22548:	008fdbf4 	movhi	r2,16239
   2254c:	108d0004 	addi	r2,r2,13312
   22550:	2085883a 	add	r2,r4,r2
   22554:	1144b03a 	or	r2,r2,r5
   22558:	1001c626 	beq	r2,zero,22c74 <__ieee754_pow+0x128c>
   2255c:	0430be74 	movhi	r16,49913
   22560:	843cd644 	addi	r16,r16,-3239
   22564:	04406974 	movhi	r17,421
   22568:	8c5b87c4 	addi	r17,r17,28191
   2256c:	003fcb06 	br	2249c <__ieee754_pow+0xab4>
   22570:	0005883a 	mov	r2,zero
   22574:	00cffc34 	movhi	r3,16368
   22578:	d8801915 	stw	r2,100(sp)
   2257c:	d8c01a15 	stw	r3,104(sp)
   22580:	003f8c06 	br	223b4 <__ieee754_pow+0x9cc>
   22584:	0005883a 	mov	r2,zero
   22588:	00cffc34 	movhi	r3,16368
   2258c:	180b883a 	mov	r5,r3
   22590:	580f883a 	mov	r7,r11
   22594:	1009883a 	mov	r4,r2
   22598:	500d883a 	mov	r6,r10
   2259c:	00241480 	call	24148 <__divdf3>
   225a0:	1011883a 	mov	r8,r2
   225a4:	1813883a 	mov	r9,r3
   225a8:	003d9506 	br	21c00 <__ieee754_pow+0x218>
   225ac:	008ffc34 	movhi	r2,16368
   225b0:	10bfff84 	addi	r2,r2,-2
   225b4:	14bdbb0e 	bge	r2,r18,21ca4 <__ieee754_pow+0x2bc>
   225b8:	008ffc34 	movhi	r2,16368
   225bc:	14bdae16 	blt	r2,r18,21c78 <__ieee754_pow+0x290>
   225c0:	580b883a 	mov	r5,r11
   225c4:	5009883a 	mov	r4,r10
   225c8:	000d883a 	mov	r6,zero
   225cc:	100f883a 	mov	r7,r2
   225d0:	0023c900 	call	23c90 <__subdf3>
   225d4:	1021883a 	mov	r16,r2
   225d8:	1823883a 	mov	r17,r3
   225dc:	00980034 	movhi	r2,24576
   225e0:	00cffdf4 	movhi	r3,16375
   225e4:	18c551c4 	addi	r3,r3,5447
   225e8:	8009883a 	mov	r4,r16
   225ec:	880b883a 	mov	r5,r17
   225f0:	180f883a 	mov	r7,r3
   225f4:	100d883a 	mov	r6,r2
   225f8:	0023d840 	call	23d84 <__muldf3>
   225fc:	023e17b4 	movhi	r8,63582
   22600:	4237d104 	addi	r8,r8,-8380
   22604:	024f9574 	movhi	r9,15957
   22608:	4a6b82c4 	addi	r9,r9,-20981
   2260c:	480f883a 	mov	r7,r9
   22610:	400d883a 	mov	r6,r8
   22614:	8009883a 	mov	r4,r16
   22618:	880b883a 	mov	r5,r17
   2261c:	102d883a 	mov	r22,r2
   22620:	182f883a 	mov	r23,r3
   22624:	0023d840 	call	23d84 <__muldf3>
   22628:	8009883a 	mov	r4,r16
   2262c:	880b883a 	mov	r5,r17
   22630:	800d883a 	mov	r6,r16
   22634:	880f883a 	mov	r7,r17
   22638:	d8802a15 	stw	r2,168(sp)
   2263c:	d8c02b15 	stw	r3,172(sp)
   22640:	0023d840 	call	23d84 <__muldf3>
   22644:	0011883a 	mov	r8,zero
   22648:	026ff434 	movhi	r9,49104
   2264c:	480f883a 	mov	r7,r9
   22650:	8009883a 	mov	r4,r16
   22654:	880b883a 	mov	r5,r17
   22658:	400d883a 	mov	r6,r8
   2265c:	1029883a 	mov	r20,r2
   22660:	182b883a 	mov	r21,r3
   22664:	0023d840 	call	23d84 <__muldf3>
   22668:	02155574 	movhi	r8,21845
   2266c:	42155544 	addi	r8,r8,21845
   22670:	024ff574 	movhi	r9,16341
   22674:	4a555544 	addi	r9,r9,21845
   22678:	480f883a 	mov	r7,r9
   2267c:	400d883a 	mov	r6,r8
   22680:	180b883a 	mov	r5,r3
   22684:	1009883a 	mov	r4,r2
   22688:	0023d100 	call	23d10 <__adddf3>
   2268c:	180f883a 	mov	r7,r3
   22690:	8009883a 	mov	r4,r16
   22694:	880b883a 	mov	r5,r17
   22698:	100d883a 	mov	r6,r2
   2269c:	0023d840 	call	23d84 <__muldf3>
   226a0:	0011883a 	mov	r8,zero
   226a4:	024ff834 	movhi	r9,16352
   226a8:	480b883a 	mov	r5,r9
   226ac:	4009883a 	mov	r4,r8
   226b0:	180f883a 	mov	r7,r3
   226b4:	100d883a 	mov	r6,r2
   226b8:	0023c900 	call	23c90 <__subdf3>
   226bc:	180f883a 	mov	r7,r3
   226c0:	a80b883a 	mov	r5,r21
   226c4:	a009883a 	mov	r4,r20
   226c8:	100d883a 	mov	r6,r2
   226cc:	0023d840 	call	23d84 <__muldf3>
   226d0:	02194b34 	movhi	r8,25900
   226d4:	4220bf84 	addi	r8,r8,-32002
   226d8:	026ffdf4 	movhi	r9,49143
   226dc:	4a4551c4 	addi	r9,r9,5447
   226e0:	480f883a 	mov	r7,r9
   226e4:	400d883a 	mov	r6,r8
   226e8:	180b883a 	mov	r5,r3
   226ec:	1009883a 	mov	r4,r2
   226f0:	0023d840 	call	23d84 <__muldf3>
   226f4:	d9402b17 	ldw	r5,172(sp)
   226f8:	d9002a17 	ldw	r4,168(sp)
   226fc:	180f883a 	mov	r7,r3
   22700:	100d883a 	mov	r6,r2
   22704:	0023d100 	call	23d10 <__adddf3>
   22708:	100d883a 	mov	r6,r2
   2270c:	b009883a 	mov	r4,r22
   22710:	b80b883a 	mov	r5,r23
   22714:	180f883a 	mov	r7,r3
   22718:	1021883a 	mov	r16,r2
   2271c:	1823883a 	mov	r17,r3
   22720:	0023d100 	call	23d10 <__adddf3>
   22724:	180b883a 	mov	r5,r3
   22728:	0009883a 	mov	r4,zero
   2272c:	b00d883a 	mov	r6,r22
   22730:	b80f883a 	mov	r7,r23
   22734:	d9001b15 	stw	r4,108(sp)
   22738:	d8c01c15 	stw	r3,112(sp)
   2273c:	0023c900 	call	23c90 <__subdf3>
   22740:	1011883a 	mov	r8,r2
   22744:	1813883a 	mov	r9,r3
   22748:	8009883a 	mov	r4,r16
   2274c:	880b883a 	mov	r5,r17
   22750:	003f0b06 	br	22380 <__ieee754_pow+0x998>
   22754:	0005883a 	mov	r2,zero
   22758:	00d0d034 	movhi	r3,17216
   2275c:	580b883a 	mov	r5,r11
   22760:	5009883a 	mov	r4,r10
   22764:	180f883a 	mov	r7,r3
   22768:	100d883a 	mov	r6,r2
   2276c:	0023d840 	call	23d84 <__muldf3>
   22770:	1015883a 	mov	r10,r2
   22774:	1825883a 	mov	r18,r3
   22778:	017ff2c4 	movi	r5,-53
   2277c:	003d6606 	br	21d18 <__ieee754_pow+0x330>
   22780:	b03d300e 	bge	r22,zero,21c44 <__ieee754_pow+0x25c>
   22784:	d9402917 	ldw	r5,164(sp)
   22788:	28e0003c 	xorhi	r3,r5,32768
   2278c:	d8c02915 	stw	r3,164(sp)
   22790:	003cbc06 	br	21a84 <__ieee754_pow+0x9c>
   22794:	00800044 	movi	r2,1
   22798:	e0bd1a1e 	bne	fp,r2,21c04 <__ieee754_pow+0x21c>
   2279c:	48e0003c 	xorhi	r3,r9,32768
   227a0:	da002815 	stw	r8,160(sp)
   227a4:	d8c02915 	stw	r3,164(sp)
   227a8:	003cb606 	br	21a84 <__ieee754_pow+0x9c>
   227ac:	d9001817 	ldw	r4,96(sp)
   227b0:	00a00034 	movhi	r2,32768
   227b4:	10bfffc4 	addi	r2,r2,-1
   227b8:	20b8703a 	and	fp,r4,r2
   227bc:	008ff834 	movhi	r2,16352
   227c0:	1700fc16 	blt	r2,fp,22bb4 <__ieee754_pow+0x11cc>
   227c4:	0039883a 	mov	fp,zero
   227c8:	d8001315 	stw	zero,76(sp)
   227cc:	0025883a 	mov	r18,zero
   227d0:	0005883a 	mov	r2,zero
   227d4:	00cff9b4 	movhi	r3,16358
   227d8:	18cb90c4 	addi	r3,r3,11843
   227dc:	9009883a 	mov	r4,r18
   227e0:	b80b883a 	mov	r5,r23
   227e4:	180f883a 	mov	r7,r3
   227e8:	100d883a 	mov	r6,r2
   227ec:	0023d840 	call	23d84 <__muldf3>
   227f0:	d9c02017 	ldw	r7,128(sp)
   227f4:	d9801f17 	ldw	r6,124(sp)
   227f8:	9009883a 	mov	r4,r18
   227fc:	b80b883a 	mov	r5,r23
   22800:	b823883a 	mov	r17,r23
   22804:	102d883a 	mov	r22,r2
   22808:	182f883a 	mov	r23,r3
   2280c:	0023c900 	call	23c90 <__subdf3>
   22810:	d9401e17 	ldw	r5,120(sp)
   22814:	d9001d17 	ldw	r4,116(sp)
   22818:	180f883a 	mov	r7,r3
   2281c:	100d883a 	mov	r6,r2
   22820:	0023c900 	call	23c90 <__subdf3>
   22824:	023fbeb4 	movhi	r8,65274
   22828:	420e7bc4 	addi	r8,r8,14831
   2282c:	024ff9b4 	movhi	r9,16358
   22830:	4a4b9084 	addi	r9,r9,11842
   22834:	480f883a 	mov	r7,r9
   22838:	400d883a 	mov	r6,r8
   2283c:	180b883a 	mov	r5,r3
   22840:	1009883a 	mov	r4,r2
   22844:	0023d840 	call	23d84 <__muldf3>
   22848:	02032a34 	movhi	r8,3240
   2284c:	421b0e44 	addi	r8,r8,27705
   22850:	026f8834 	movhi	r9,48672
   22854:	4a571844 	addi	r9,r9,23649
   22858:	480f883a 	mov	r7,r9
   2285c:	400d883a 	mov	r6,r8
   22860:	9009883a 	mov	r4,r18
   22864:	880b883a 	mov	r5,r17
   22868:	1021883a 	mov	r16,r2
   2286c:	1823883a 	mov	r17,r3
   22870:	0023d840 	call	23d84 <__muldf3>
   22874:	180f883a 	mov	r7,r3
   22878:	880b883a 	mov	r5,r17
   2287c:	8009883a 	mov	r4,r16
   22880:	100d883a 	mov	r6,r2
   22884:	0023d100 	call	23d10 <__adddf3>
   22888:	100d883a 	mov	r6,r2
   2288c:	b009883a 	mov	r4,r22
   22890:	b80b883a 	mov	r5,r23
   22894:	180f883a 	mov	r7,r3
   22898:	1021883a 	mov	r16,r2
   2289c:	1823883a 	mov	r17,r3
   228a0:	0023d100 	call	23d10 <__adddf3>
   228a4:	1009883a 	mov	r4,r2
   228a8:	180b883a 	mov	r5,r3
   228ac:	b00d883a 	mov	r6,r22
   228b0:	b80f883a 	mov	r7,r23
   228b4:	d8803915 	stw	r2,228(sp)
   228b8:	d8c03a15 	stw	r3,232(sp)
   228bc:	d8801115 	stw	r2,68(sp)
   228c0:	d8c01215 	stw	r3,72(sp)
   228c4:	0023c900 	call	23c90 <__subdf3>
   228c8:	180f883a 	mov	r7,r3
   228cc:	8009883a 	mov	r4,r16
   228d0:	880b883a 	mov	r5,r17
   228d4:	100d883a 	mov	r6,r2
   228d8:	0023c900 	call	23c90 <__subdf3>
   228dc:	d9001117 	ldw	r4,68(sp)
   228e0:	d9403a17 	ldw	r5,232(sp)
   228e4:	1029883a 	mov	r20,r2
   228e8:	200d883a 	mov	r6,r4
   228ec:	280f883a 	mov	r7,r5
   228f0:	182b883a 	mov	r21,r3
   228f4:	0023d840 	call	23d84 <__muldf3>
   228f8:	1021883a 	mov	r16,r2
   228fc:	1823883a 	mov	r17,r3
   22900:	009caff4 	movhi	r2,29375
   22904:	10a93404 	addi	r2,r2,-23344
   22908:	00cf99b4 	movhi	r3,15974
   2290c:	18cdda44 	addi	r3,r3,14185
   22910:	8009883a 	mov	r4,r16
   22914:	880b883a 	mov	r5,r17
   22918:	180f883a 	mov	r7,r3
   2291c:	100d883a 	mov	r6,r2
   22920:	0023d840 	call	23d84 <__muldf3>
   22924:	023174b4 	movhi	r8,50642
   22928:	421afc44 	addi	r8,r8,27633
   2292c:	024faf34 	movhi	r9,16060
   22930:	4a6f5044 	addi	r9,r9,-17087
   22934:	480f883a 	mov	r7,r9
   22938:	400d883a 	mov	r6,r8
   2293c:	180b883a 	mov	r5,r3
   22940:	1009883a 	mov	r4,r2
   22944:	0023c900 	call	23c90 <__subdf3>
   22948:	180f883a 	mov	r7,r3
   2294c:	8009883a 	mov	r4,r16
   22950:	880b883a 	mov	r5,r17
   22954:	100d883a 	mov	r6,r2
   22958:	0023d840 	call	23d84 <__muldf3>
   2295c:	022bc9b4 	movhi	r8,44838
   22960:	42378b04 	addi	r8,r8,-8660
   22964:	024fc474 	movhi	r9,16145
   22968:	4a559a84 	addi	r9,r9,22122
   2296c:	480f883a 	mov	r7,r9
   22970:	400d883a 	mov	r6,r8
   22974:	180b883a 	mov	r5,r3
   22978:	1009883a 	mov	r4,r2
   2297c:	0023d100 	call	23d10 <__adddf3>
   22980:	180f883a 	mov	r7,r3
   22984:	8009883a 	mov	r4,r16
   22988:	880b883a 	mov	r5,r17
   2298c:	100d883a 	mov	r6,r2
   22990:	0023d840 	call	23d84 <__muldf3>
   22994:	0205aff4 	movhi	r8,5823
   22998:	422f64c4 	addi	r8,r8,-17005
   2299c:	024fd9f4 	movhi	r9,16231
   229a0:	4a705b04 	addi	r9,r9,-16020
   229a4:	480f883a 	mov	r7,r9
   229a8:	400d883a 	mov	r6,r8
   229ac:	180b883a 	mov	r5,r3
   229b0:	1009883a 	mov	r4,r2
   229b4:	0023c900 	call	23c90 <__subdf3>
   229b8:	180f883a 	mov	r7,r3
   229bc:	8009883a 	mov	r4,r16
   229c0:	880b883a 	mov	r5,r17
   229c4:	100d883a 	mov	r6,r2
   229c8:	0023d840 	call	23d84 <__muldf3>
   229cc:	02155574 	movhi	r8,21845
   229d0:	42154f84 	addi	r8,r8,21822
   229d4:	024ff174 	movhi	r9,16325
   229d8:	4a555544 	addi	r9,r9,21845
   229dc:	480f883a 	mov	r7,r9
   229e0:	400d883a 	mov	r6,r8
   229e4:	180b883a 	mov	r5,r3
   229e8:	1009883a 	mov	r4,r2
   229ec:	0023d100 	call	23d10 <__adddf3>
   229f0:	180f883a 	mov	r7,r3
   229f4:	8009883a 	mov	r4,r16
   229f8:	880b883a 	mov	r5,r17
   229fc:	100d883a 	mov	r6,r2
   22a00:	0023d840 	call	23d84 <__muldf3>
   22a04:	d9001117 	ldw	r4,68(sp)
   22a08:	d9403a17 	ldw	r5,232(sp)
   22a0c:	180f883a 	mov	r7,r3
   22a10:	100d883a 	mov	r6,r2
   22a14:	0023c900 	call	23c90 <__subdf3>
   22a18:	d9001117 	ldw	r4,68(sp)
   22a1c:	d9403a17 	ldw	r5,232(sp)
   22a20:	100d883a 	mov	r6,r2
   22a24:	180f883a 	mov	r7,r3
   22a28:	1021883a 	mov	r16,r2
   22a2c:	1823883a 	mov	r17,r3
   22a30:	0023d840 	call	23d84 <__muldf3>
   22a34:	0011883a 	mov	r8,zero
   22a38:	02500034 	movhi	r9,16384
   22a3c:	480f883a 	mov	r7,r9
   22a40:	400d883a 	mov	r6,r8
   22a44:	8009883a 	mov	r4,r16
   22a48:	880b883a 	mov	r5,r17
   22a4c:	1021883a 	mov	r16,r2
   22a50:	1823883a 	mov	r17,r3
   22a54:	0023c900 	call	23c90 <__subdf3>
   22a58:	180f883a 	mov	r7,r3
   22a5c:	880b883a 	mov	r5,r17
   22a60:	8009883a 	mov	r4,r16
   22a64:	100d883a 	mov	r6,r2
   22a68:	00241480 	call	24148 <__divdf3>
   22a6c:	d9001117 	ldw	r4,68(sp)
   22a70:	d9403a17 	ldw	r5,232(sp)
   22a74:	a00d883a 	mov	r6,r20
   22a78:	a80f883a 	mov	r7,r21
   22a7c:	1025883a 	mov	r18,r2
   22a80:	1827883a 	mov	r19,r3
   22a84:	0023d840 	call	23d84 <__muldf3>
   22a88:	180f883a 	mov	r7,r3
   22a8c:	a009883a 	mov	r4,r20
   22a90:	a80b883a 	mov	r5,r21
   22a94:	100d883a 	mov	r6,r2
   22a98:	0023d100 	call	23d10 <__adddf3>
   22a9c:	180f883a 	mov	r7,r3
   22aa0:	980b883a 	mov	r5,r19
   22aa4:	9009883a 	mov	r4,r18
   22aa8:	100d883a 	mov	r6,r2
   22aac:	0023c900 	call	23c90 <__subdf3>
   22ab0:	d9801117 	ldw	r6,68(sp)
   22ab4:	d9c03a17 	ldw	r7,232(sp)
   22ab8:	180b883a 	mov	r5,r3
   22abc:	1009883a 	mov	r4,r2
   22ac0:	0023c900 	call	23c90 <__subdf3>
   22ac4:	0011883a 	mov	r8,zero
   22ac8:	024ffc34 	movhi	r9,16368
   22acc:	480b883a 	mov	r5,r9
   22ad0:	180f883a 	mov	r7,r3
   22ad4:	4009883a 	mov	r4,r8
   22ad8:	100d883a 	mov	r6,r2
   22adc:	0023c900 	call	23c90 <__subdf3>
   22ae0:	100b883a 	mov	r5,r2
   22ae4:	d8801317 	ldw	r2,76(sp)
   22ae8:	10d5883a 	add	r10,r2,r3
   22aec:	5005d53a 	srai	r2,r10,20
   22af0:	0080720e 	bge	zero,r2,22cbc <__ieee754_pow+0x12d4>
   22af4:	2811883a 	mov	r8,r5
   22af8:	5013883a 	mov	r9,r10
   22afc:	d9c01a17 	ldw	r7,104(sp)
   22b00:	d9801917 	ldw	r6,100(sp)
   22b04:	480b883a 	mov	r5,r9
   22b08:	4009883a 	mov	r4,r8
   22b0c:	003e8206 	br	22518 <__ieee754_pow+0xb30>
   22b10:	0009883a 	mov	r4,zero
   22b14:	800b883a 	mov	r5,r16
   22b18:	a80f883a 	mov	r7,r21
   22b1c:	a00d883a 	mov	r6,r20
   22b20:	003c2b06 	br	21bd0 <__ieee754_pow+0x1e8>
   22b24:	d9001d17 	ldw	r4,116(sp)
   22b28:	00994b34 	movhi	r2,25900
   22b2c:	10a0bf84 	addi	r2,r2,-32002
   22b30:	00cf25f4 	movhi	r3,15511
   22b34:	18c551c4 	addi	r3,r3,5447
   22b38:	a80b883a 	mov	r5,r21
   22b3c:	180f883a 	mov	r7,r3
   22b40:	100d883a 	mov	r6,r2
   22b44:	0023d100 	call	23d10 <__adddf3>
   22b48:	d9801f17 	ldw	r6,124(sp)
   22b4c:	880b883a 	mov	r5,r17
   22b50:	8009883a 	mov	r4,r16
   22b54:	980f883a 	mov	r7,r19
   22b58:	1021883a 	mov	r16,r2
   22b5c:	1823883a 	mov	r17,r3
   22b60:	0023c900 	call	23c90 <__subdf3>
   22b64:	180f883a 	mov	r7,r3
   22b68:	880b883a 	mov	r5,r17
   22b6c:	8009883a 	mov	r4,r16
   22b70:	100d883a 	mov	r6,r2
   22b74:	00244b00 	call	244b0 <__gtdf2>
   22b78:	00bf0c0e 	bge	zero,r2,227ac <__ieee754_pow+0xdc4>
   22b7c:	04220034 	movhi	r16,34816
   22b80:	841d6704 	addi	r16,r16,30108
   22b84:	045f8e34 	movhi	r17,32312
   22b88:	8c790f04 	addi	r17,r17,-7108
   22b8c:	d9401a17 	ldw	r5,104(sp)
   22b90:	d9001917 	ldw	r4,100(sp)
   22b94:	800d883a 	mov	r6,r16
   22b98:	880f883a 	mov	r7,r17
   22b9c:	0023d840 	call	23d84 <__muldf3>
   22ba0:	180b883a 	mov	r5,r3
   22ba4:	800d883a 	mov	r6,r16
   22ba8:	880f883a 	mov	r7,r17
   22bac:	1009883a 	mov	r4,r2
   22bb0:	003e5906 	br	22518 <__ieee754_pow+0xb30>
   22bb4:	e005d53a 	srai	r2,fp,20
   22bb8:	01800434 	movhi	r6,16
   22bbc:	d9401817 	ldw	r5,96(sp)
   22bc0:	10bf0084 	addi	r2,r2,-1022
   22bc4:	308dd83a 	sra	r6,r6,r2
   22bc8:	02000434 	movhi	r8,16
   22bcc:	423fffc4 	addi	r8,r8,-1
   22bd0:	0005883a 	mov	r2,zero
   22bd4:	298d883a 	add	r6,r5,r6
   22bd8:	318b883a 	add	r5,r6,r6
   22bdc:	320e703a 	and	r7,r6,r8
   22be0:	1013883a 	mov	r9,r2
   22be4:	280ad57a 	srli	r5,r5,21
   22be8:	d8801817 	ldw	r2,96(sp)
   22bec:	01000504 	movi	r4,20
   22bf0:	297f0044 	addi	r5,r5,-1023
   22bf4:	4151d83a 	sra	r8,r8,r5
   22bf8:	39c00434 	orhi	r7,r7,16
   22bfc:	2149c83a 	sub	r4,r4,r5
   22c00:	0210303a 	nor	r8,zero,r8
   22c04:	3939d83a 	sra	fp,r7,r4
   22c08:	320e703a 	and	r7,r6,r8
   22c0c:	10002916 	blt	r2,zero,22cb4 <__ieee754_pow+0x12cc>
   22c10:	d9402017 	ldw	r5,128(sp)
   22c14:	d9001f17 	ldw	r4,124(sp)
   22c18:	480d883a 	mov	r6,r9
   22c1c:	0023c900 	call	23c90 <__subdf3>
   22c20:	180b883a 	mov	r5,r3
   22c24:	d9402015 	stw	r5,128(sp)
   22c28:	280f883a 	mov	r7,r5
   22c2c:	d9001d17 	ldw	r4,116(sp)
   22c30:	d9401e17 	ldw	r5,120(sp)
   22c34:	1007883a 	mov	r3,r2
   22c38:	180d883a 	mov	r6,r3
   22c3c:	d8801f15 	stw	r2,124(sp)
   22c40:	0023d100 	call	23d10 <__adddf3>
   22c44:	180b883a 	mov	r5,r3
   22c48:	e006953a 	slli	r3,fp,20
   22c4c:	282f883a 	mov	r23,r5
   22c50:	d8c01315 	stw	r3,76(sp)
   22c54:	003edd06 	br	227cc <__ieee754_pow+0xde4>
   22c58:	383bc81e 	bne	r7,zero,21b7c <__ieee754_pow+0x194>
   22c5c:	28c5c83a 	sub	r2,r5,r3
   22c60:	8087d83a 	sra	r3,r16,r2
   22c64:	1884983a 	sll	r2,r3,r2
   22c68:	80801b26 	beq	r16,r2,22cd8 <__ieee754_pow+0x12f0>
   22c6c:	0039883a 	mov	fp,zero
   22c70:	003b9d06 	br	21ae8 <__ieee754_pow+0x100>
   22c74:	d9801f17 	ldw	r6,124(sp)
   22c78:	8009883a 	mov	r4,r16
   22c7c:	880b883a 	mov	r5,r17
   22c80:	980f883a 	mov	r7,r19
   22c84:	0023c900 	call	23c90 <__subdf3>
   22c88:	d9001d17 	ldw	r4,116(sp)
   22c8c:	a80b883a 	mov	r5,r21
   22c90:	180f883a 	mov	r7,r3
   22c94:	100d883a 	mov	r6,r2
   22c98:	00246480 	call	24648 <__ledf2>
   22c9c:	00bfc516 	blt	zero,r2,22bb4 <__ieee754_pow+0x11cc>
   22ca0:	0430be74 	movhi	r16,49913
   22ca4:	843cd644 	addi	r16,r16,-3239
   22ca8:	04406974 	movhi	r17,421
   22cac:	8c5b87c4 	addi	r17,r17,28191
   22cb0:	003fb606 	br	22b8c <__ieee754_pow+0x11a4>
   22cb4:	0739c83a 	sub	fp,zero,fp
   22cb8:	003fd506 	br	22c10 <__ieee754_pow+0x1228>
   22cbc:	2809883a 	mov	r4,r5
   22cc0:	e00d883a 	mov	r6,fp
   22cc4:	180b883a 	mov	r5,r3
   22cc8:	002323c0 	call	2323c <scalbn>
   22ccc:	1011883a 	mov	r8,r2
   22cd0:	1813883a 	mov	r9,r3
   22cd4:	003f8906 	br	22afc <__ieee754_pow+0x1114>
   22cd8:	18c0004c 	andi	r3,r3,1
   22cdc:	00800084 	movi	r2,2
   22ce0:	10f9c83a 	sub	fp,r2,r3
   22ce4:	003b8006 	br	21ae8 <__ieee754_pow+0x100>

00022ce8 <__ieee754_sqrt>:
   22ce8:	defffd04 	addi	sp,sp,-12
   22cec:	dc000015 	stw	r16,0(sp)
   22cf0:	009ffc34 	movhi	r2,32752
   22cf4:	2021883a 	mov	r16,r4
   22cf8:	291ffc2c 	andhi	r4,r5,32752
   22cfc:	dc400115 	stw	r17,4(sp)
   22d00:	dfc00215 	stw	ra,8(sp)
   22d04:	2823883a 	mov	r17,r5
   22d08:	280f883a 	mov	r7,r5
   22d0c:	2807883a 	mov	r3,r5
   22d10:	8011883a 	mov	r8,r16
   22d14:	20807d26 	beq	r4,r2,22f0c <__ieee754_sqrt+0x224>
   22d18:	01408d0e 	bge	zero,r5,22f50 <__ieee754_sqrt+0x268>
   22d1c:	380dd53a 	srai	r6,r7,20
   22d20:	3000131e 	bne	r6,zero,22d70 <__ieee754_sqrt+0x88>
   22d24:	1800041e 	bne	r3,zero,22d38 <__ieee754_sqrt+0x50>
   22d28:	400ed2fa 	srli	r7,r8,11
   22d2c:	31bffac4 	addi	r6,r6,-21
   22d30:	4010957a 	slli	r8,r8,21
   22d34:	383ffc26 	beq	r7,zero,22d28 <__ieee754_sqrt+0x40>
   22d38:	3880042c 	andhi	r2,r7,16
   22d3c:	1000991e 	bne	r2,zero,22fa4 <__ieee754_sqrt+0x2bc>
   22d40:	0009883a 	mov	r4,zero
   22d44:	39cf883a 	add	r7,r7,r7
   22d48:	3880042c 	andhi	r2,r7,16
   22d4c:	21000044 	addi	r4,r4,1
   22d50:	103ffc26 	beq	r2,zero,22d44 <__ieee754_sqrt+0x5c>
   22d54:	00800804 	movi	r2,32
   22d58:	1105c83a 	sub	r2,r2,r4
   22d5c:	4086d83a 	srl	r3,r8,r2
   22d60:	4110983a 	sll	r8,r8,r4
   22d64:	3105c83a 	sub	r2,r6,r4
   22d68:	38ceb03a 	or	r7,r7,r3
   22d6c:	11800044 	addi	r6,r2,1
   22d70:	31bf0044 	addi	r6,r6,-1023
   22d74:	30c0004c 	andi	r3,r6,1
   22d78:	00800434 	movhi	r2,16
   22d7c:	10bfffc4 	addi	r2,r2,-1
   22d80:	3884703a 	and	r2,r7,r2
   22d84:	1807003a 	cmpeq	r3,r3,zero
   22d88:	11000434 	orhi	r4,r2,16
   22d8c:	18005426 	beq	r3,zero,22ee0 <__ieee754_sqrt+0x1f8>
   22d90:	4004d7fa 	srli	r2,r8,31
   22d94:	4207883a 	add	r3,r8,r8
   22d98:	02800834 	movhi	r10,32
   22d9c:	1105883a 	add	r2,r2,r4
   22da0:	2089883a 	add	r4,r4,r2
   22da4:	0011883a 	mov	r8,zero
   22da8:	000b883a 	mov	r5,zero
   22dac:	0013883a 	mov	r9,zero
   22db0:	02c00584 	movi	r11,22
   22db4:	520f883a 	add	r7,r10,r8
   22db8:	1804d7fa 	srli	r2,r3,31
   22dbc:	4a400044 	addi	r9,r9,1
   22dc0:	18c7883a 	add	r3,r3,r3
   22dc4:	21c00316 	blt	r4,r7,22dd4 <__ieee754_sqrt+0xec>
   22dc8:	21c9c83a 	sub	r4,r4,r7
   22dcc:	2a8b883a 	add	r5,r5,r10
   22dd0:	51d1883a 	add	r8,r10,r7
   22dd4:	1105883a 	add	r2,r2,r4
   22dd8:	5014d07a 	srli	r10,r10,1
   22ddc:	2089883a 	add	r4,r4,r2
   22de0:	4afff41e 	bne	r9,r11,22db4 <__ieee754_sqrt+0xcc>
   22de4:	02600034 	movhi	r9,32768
   22de8:	0017883a 	mov	r11,zero
   22dec:	0019883a 	mov	r12,zero
   22df0:	0015883a 	mov	r10,zero
   22df4:	4821883a 	mov	r16,r9
   22df8:	03c00804 	movi	r15,32
   22dfc:	00000806 	br	22e20 <__ieee754_sqrt+0x138>
   22e00:	22003426 	beq	r4,r8,22ed4 <__ieee754_sqrt+0x1ec>
   22e04:	1804d7fa 	srli	r2,r3,31
   22e08:	52800044 	addi	r10,r10,1
   22e0c:	18c7883a 	add	r3,r3,r3
   22e10:	1105883a 	add	r2,r2,r4
   22e14:	2089883a 	add	r4,r4,r2
   22e18:	4812d07a 	srli	r9,r9,1
   22e1c:	53c01326 	beq	r10,r15,22e6c <__ieee754_sqrt+0x184>
   22e20:	4acf883a 	add	r7,r9,r11
   22e24:	413ff60e 	bge	r8,r4,22e00 <__ieee754_sqrt+0x118>
   22e28:	38a0002c 	andhi	r2,r7,32768
   22e2c:	3a57883a 	add	r11,r7,r9
   22e30:	14002426 	beq	r2,r16,22ec4 <__ieee754_sqrt+0x1dc>
   22e34:	4005883a 	mov	r2,r8
   22e38:	2209c83a 	sub	r4,r4,r8
   22e3c:	19c0012e 	bgeu	r3,r7,22e44 <__ieee754_sqrt+0x15c>
   22e40:	213fffc4 	addi	r4,r4,-1
   22e44:	19c7c83a 	sub	r3,r3,r7
   22e48:	1011883a 	mov	r8,r2
   22e4c:	1804d7fa 	srli	r2,r3,31
   22e50:	52800044 	addi	r10,r10,1
   22e54:	6259883a 	add	r12,r12,r9
   22e58:	1105883a 	add	r2,r2,r4
   22e5c:	18c7883a 	add	r3,r3,r3
   22e60:	2089883a 	add	r4,r4,r2
   22e64:	4812d07a 	srli	r9,r9,1
   22e68:	53ffed1e 	bne	r10,r15,22e20 <__ieee754_sqrt+0x138>
   22e6c:	20c4b03a 	or	r2,r4,r3
   22e70:	1000201e 	bne	r2,zero,22ef4 <__ieee754_sqrt+0x20c>
   22e74:	600ed07a 	srli	r7,r12,1
   22e78:	2880004c 	andi	r2,r5,1
   22e7c:	1005003a 	cmpeq	r2,r2,zero
   22e80:	1000011e 	bne	r2,zero,22e88 <__ieee754_sqrt+0x1a0>
   22e84:	39e00034 	orhi	r7,r7,32768
   22e88:	300dd07a 	srai	r6,r6,1
   22e8c:	280bd07a 	srai	r5,r5,1
   22e90:	010ff834 	movhi	r4,16352
   22e94:	300c953a 	slli	r6,r6,20
   22e98:	290b883a 	add	r5,r5,r4
   22e9c:	3821883a 	mov	r16,r7
   22ea0:	299d883a 	add	r14,r5,r6
   22ea4:	7023883a 	mov	r17,r14
   22ea8:	8005883a 	mov	r2,r16
   22eac:	8807883a 	mov	r3,r17
   22eb0:	dfc00217 	ldw	ra,8(sp)
   22eb4:	dc400117 	ldw	r17,4(sp)
   22eb8:	dc000017 	ldw	r16,0(sp)
   22ebc:	dec00304 	addi	sp,sp,12
   22ec0:	f800283a 	ret
   22ec4:	5884703a 	and	r2,r11,r2
   22ec8:	103fda1e 	bne	r2,zero,22e34 <__ieee754_sqrt+0x14c>
   22ecc:	40800044 	addi	r2,r8,1
   22ed0:	003fd906 	br	22e38 <__ieee754_sqrt+0x150>
   22ed4:	19ffd42e 	bgeu	r3,r7,22e28 <__ieee754_sqrt+0x140>
   22ed8:	2011883a 	mov	r8,r4
   22edc:	003fc906 	br	22e04 <__ieee754_sqrt+0x11c>
   22ee0:	4004d7fa 	srli	r2,r8,31
   22ee4:	4211883a 	add	r8,r8,r8
   22ee8:	1105883a 	add	r2,r2,r4
   22eec:	2089883a 	add	r4,r4,r2
   22ef0:	003fa706 	br	22d90 <__ieee754_sqrt+0xa8>
   22ef4:	00bfffc4 	movi	r2,-1
   22ef8:	60802726 	beq	r12,r2,22f98 <__ieee754_sqrt+0x2b0>
   22efc:	6080004c 	andi	r2,r12,1
   22f00:	6085883a 	add	r2,r12,r2
   22f04:	100ed07a 	srli	r7,r2,1
   22f08:	003fdb06 	br	22e78 <__ieee754_sqrt+0x190>
   22f0c:	8009883a 	mov	r4,r16
   22f10:	800d883a 	mov	r6,r16
   22f14:	0023d840 	call	23d84 <__muldf3>
   22f18:	180f883a 	mov	r7,r3
   22f1c:	880b883a 	mov	r5,r17
   22f20:	8009883a 	mov	r4,r16
   22f24:	100d883a 	mov	r6,r2
   22f28:	0023d100 	call	23d10 <__adddf3>
   22f2c:	1021883a 	mov	r16,r2
   22f30:	1823883a 	mov	r17,r3
   22f34:	8005883a 	mov	r2,r16
   22f38:	8807883a 	mov	r3,r17
   22f3c:	dfc00217 	ldw	ra,8(sp)
   22f40:	dc400117 	ldw	r17,4(sp)
   22f44:	dc000017 	ldw	r16,0(sp)
   22f48:	dec00304 	addi	sp,sp,12
   22f4c:	f800283a 	ret
   22f50:	00a00034 	movhi	r2,32768
   22f54:	10bfffc4 	addi	r2,r2,-1
   22f58:	2884703a 	and	r2,r5,r2
   22f5c:	8084b03a 	or	r2,r16,r2
   22f60:	103fd126 	beq	r2,zero,22ea8 <__ieee754_sqrt+0x1c0>
   22f64:	283f6d26 	beq	r5,zero,22d1c <__ieee754_sqrt+0x34>
   22f68:	280f883a 	mov	r7,r5
   22f6c:	8009883a 	mov	r4,r16
   22f70:	800d883a 	mov	r6,r16
   22f74:	0023c900 	call	23c90 <__subdf3>
   22f78:	1009883a 	mov	r4,r2
   22f7c:	180b883a 	mov	r5,r3
   22f80:	100d883a 	mov	r6,r2
   22f84:	180f883a 	mov	r7,r3
   22f88:	00241480 	call	24148 <__divdf3>
   22f8c:	1021883a 	mov	r16,r2
   22f90:	1823883a 	mov	r17,r3
   22f94:	003fc406 	br	22ea8 <__ieee754_sqrt+0x1c0>
   22f98:	29400044 	addi	r5,r5,1
   22f9c:	000f883a 	mov	r7,zero
   22fa0:	003fb506 	br	22e78 <__ieee754_sqrt+0x190>
   22fa4:	0009883a 	mov	r4,zero
   22fa8:	00800804 	movi	r2,32
   22fac:	003f6b06 	br	22d5c <__ieee754_sqrt+0x74>

00022fb0 <fabs>:
   22fb0:	01e00034 	movhi	r7,32768
   22fb4:	39ffffc4 	addi	r7,r7,-1
   22fb8:	394e703a 	and	r7,r7,r5
   22fbc:	2005883a 	mov	r2,r4
   22fc0:	3807883a 	mov	r3,r7
   22fc4:	f800283a 	ret

00022fc8 <finite>:
   22fc8:	00a00034 	movhi	r2,32768
   22fcc:	10bfffc4 	addi	r2,r2,-1
   22fd0:	2884703a 	and	r2,r5,r2
   22fd4:	01600434 	movhi	r5,32784
   22fd8:	1145883a 	add	r2,r2,r5
   22fdc:	1004d7fa 	srli	r2,r2,31
   22fe0:	f800283a 	ret

00022fe4 <__isnand>:
   22fe4:	200d883a 	mov	r6,r4
   22fe8:	0109c83a 	sub	r4,zero,r4
   22fec:	2188b03a 	or	r4,r4,r6
   22ff0:	2008d7fa 	srli	r4,r4,31
   22ff4:	00a00034 	movhi	r2,32768
   22ff8:	10bfffc4 	addi	r2,r2,-1
   22ffc:	1144703a 	and	r2,r2,r5
   23000:	2088b03a 	or	r4,r4,r2
   23004:	009ffc34 	movhi	r2,32752
   23008:	1105c83a 	sub	r2,r2,r4
   2300c:	1004d7fa 	srli	r2,r2,31
   23010:	f800283a 	ret

00023014 <matherr>:
   23014:	0005883a 	mov	r2,zero
   23018:	f800283a 	ret

0002301c <nan>:
   2301c:	015ffe34 	movhi	r5,32760
   23020:	0005883a 	mov	r2,zero
   23024:	2807883a 	mov	r3,r5
   23028:	f800283a 	ret

0002302c <rint>:
   2302c:	2015883a 	mov	r10,r4
   23030:	2809d53a 	srai	r4,r5,20
   23034:	defff904 	addi	sp,sp,-28
   23038:	034004c4 	movi	r13,19
   2303c:	2101ffcc 	andi	r4,r4,2047
   23040:	227f0044 	addi	r9,r4,-1023
   23044:	dc800415 	stw	r18,16(sp)
   23048:	dfc00615 	stw	ra,24(sp)
   2304c:	dcc00515 	stw	r19,20(sp)
   23050:	dc400315 	stw	r17,12(sp)
   23054:	dc000215 	stw	r16,8(sp)
   23058:	2817883a 	mov	r11,r5
   2305c:	500d883a 	mov	r6,r10
   23060:	2824d7fa 	srli	r18,r5,31
   23064:	6a403016 	blt	r13,r9,23128 <rint+0xfc>
   23068:	48004916 	blt	r9,zero,23190 <rint+0x164>
   2306c:	00800434 	movhi	r2,16
   23070:	10bfffc4 	addi	r2,r2,-1
   23074:	1247d83a 	sra	r3,r2,r9
   23078:	2809883a 	mov	r4,r5
   2307c:	1944703a 	and	r2,r3,r5
   23080:	5084b03a 	or	r2,r10,r2
   23084:	10001f26 	beq	r2,zero,23104 <rint+0xd8>
   23088:	180ad07a 	srli	r5,r3,1
   2308c:	5944703a 	and	r2,r11,r5
   23090:	5084b03a 	or	r2,r10,r2
   23094:	10000626 	beq	r2,zero,230b0 <rint+0x84>
   23098:	4b406626 	beq	r9,r13,23234 <rint+0x208>
   2309c:	00c000b4 	movhi	r3,2
   230a0:	1a47d83a 	sra	r3,r3,r9
   230a4:	0144303a 	nor	r2,zero,r5
   230a8:	5884703a 	and	r2,r11,r2
   230ac:	10c8b03a 	or	r4,r2,r3
   230b0:	900690fa 	slli	r3,r18,3
   230b4:	008000f4 	movhi	r2,3
   230b8:	10bf3f04 	addi	r2,r2,-772
   230bc:	200f883a 	mov	r7,r4
   230c0:	1887883a 	add	r3,r3,r2
   230c4:	1c000017 	ldw	r16,0(r3)
   230c8:	1c400117 	ldw	r17,4(r3)
   230cc:	8009883a 	mov	r4,r16
   230d0:	880b883a 	mov	r5,r17
   230d4:	0023d100 	call	23d10 <__adddf3>
   230d8:	d8800015 	stw	r2,0(sp)
   230dc:	d8c00115 	stw	r3,4(sp)
   230e0:	d8800017 	ldw	r2,0(sp)
   230e4:	d8c00117 	ldw	r3,4(sp)
   230e8:	880f883a 	mov	r7,r17
   230ec:	800d883a 	mov	r6,r16
   230f0:	180b883a 	mov	r5,r3
   230f4:	1009883a 	mov	r4,r2
   230f8:	0023c900 	call	23c90 <__subdf3>
   230fc:	1015883a 	mov	r10,r2
   23100:	1817883a 	mov	r11,r3
   23104:	5005883a 	mov	r2,r10
   23108:	5807883a 	mov	r3,r11
   2310c:	dfc00617 	ldw	ra,24(sp)
   23110:	dcc00517 	ldw	r19,20(sp)
   23114:	dc800417 	ldw	r18,16(sp)
   23118:	dc400317 	ldw	r17,12(sp)
   2311c:	dc000217 	ldw	r16,8(sp)
   23120:	dec00704 	addi	sp,sp,28
   23124:	f800283a 	ret
   23128:	00800cc4 	movi	r2,51
   2312c:	12400f16 	blt	r2,r9,2316c <rint+0x140>
   23130:	213efb44 	addi	r4,r4,-1043
   23134:	00bfffc4 	movi	r2,-1
   23138:	1104d83a 	srl	r2,r2,r4
   2313c:	5086703a 	and	r3,r10,r2
   23140:	183ff026 	beq	r3,zero,23104 <rint+0xd8>
   23144:	100ad07a 	srli	r5,r2,1
   23148:	5144703a 	and	r2,r10,r5
   2314c:	10000526 	beq	r2,zero,23164 <rint+0x138>
   23150:	00d00034 	movhi	r3,16384
   23154:	1907d83a 	sra	r3,r3,r4
   23158:	0144303a 	nor	r2,zero,r5
   2315c:	5084703a 	and	r2,r10,r2
   23160:	10ccb03a 	or	r6,r2,r3
   23164:	5809883a 	mov	r4,r11
   23168:	003fd106 	br	230b0 <rint+0x84>
   2316c:	00810004 	movi	r2,1024
   23170:	48bfe41e 	bne	r9,r2,23104 <rint+0xd8>
   23174:	5009883a 	mov	r4,r10
   23178:	500d883a 	mov	r6,r10
   2317c:	280f883a 	mov	r7,r5
   23180:	0023d100 	call	23d10 <__adddf3>
   23184:	1015883a 	mov	r10,r2
   23188:	1817883a 	mov	r11,r3
   2318c:	003fdd06 	br	23104 <rint+0xd8>
   23190:	04e00034 	movhi	r19,32768
   23194:	9cffffc4 	addi	r19,r19,-1
   23198:	2cc4703a 	and	r2,r5,r19
   2319c:	5084b03a 	or	r2,r10,r2
   231a0:	103fd826 	beq	r2,zero,23104 <rint+0xd8>
   231a4:	00c00434 	movhi	r3,16
   231a8:	18ffffc4 	addi	r3,r3,-1
   231ac:	28c6703a 	and	r3,r5,r3
   231b0:	50c6b03a 	or	r3,r10,r3
   231b4:	00cdc83a 	sub	r6,zero,r3
   231b8:	900a90fa 	slli	r5,r18,3
   231bc:	1986b03a 	or	r3,r3,r6
   231c0:	010000f4 	movhi	r4,3
   231c4:	213f3f04 	addi	r4,r4,-772
   231c8:	1806d33a 	srli	r3,r3,12
   231cc:	290b883a 	add	r5,r5,r4
   231d0:	2c000017 	ldw	r16,0(r5)
   231d4:	2c400117 	ldw	r17,4(r5)
   231d8:	593fffac 	andhi	r4,r11,65534
   231dc:	18c0022c 	andhi	r3,r3,8
   231e0:	1906b03a 	or	r3,r3,r4
   231e4:	500d883a 	mov	r6,r10
   231e8:	180f883a 	mov	r7,r3
   231ec:	8009883a 	mov	r4,r16
   231f0:	880b883a 	mov	r5,r17
   231f4:	0023d100 	call	23d10 <__adddf3>
   231f8:	d8800015 	stw	r2,0(sp)
   231fc:	d8c00115 	stw	r3,4(sp)
   23200:	d8800017 	ldw	r2,0(sp)
   23204:	d8c00117 	ldw	r3,4(sp)
   23208:	880f883a 	mov	r7,r17
   2320c:	800d883a 	mov	r6,r16
   23210:	180b883a 	mov	r5,r3
   23214:	1009883a 	mov	r4,r2
   23218:	0023c900 	call	23c90 <__subdf3>
   2321c:	901297fa 	slli	r9,r18,31
   23220:	98d0703a 	and	r8,r19,r3
   23224:	1015883a 	mov	r10,r2
   23228:	4250b03a 	or	r8,r8,r9
   2322c:	4017883a 	mov	r11,r8
   23230:	003fb406 	br	23104 <rint+0xd8>
   23234:	01900034 	movhi	r6,16384
   23238:	003f9d06 	br	230b0 <rint+0x84>

0002323c <scalbn>:
   2323c:	2011883a 	mov	r8,r4
   23240:	291ffc2c 	andhi	r4,r5,32752
   23244:	2009d53a 	srai	r4,r4,20
   23248:	defffd04 	addi	sp,sp,-12
   2324c:	dc000015 	stw	r16,0(sp)
   23250:	dfc00215 	stw	ra,8(sp)
   23254:	dc400115 	stw	r17,4(sp)
   23258:	2813883a 	mov	r9,r5
   2325c:	2815883a 	mov	r10,r5
   23260:	3021883a 	mov	r16,r6
   23264:	2000281e 	bne	r4,zero,23308 <scalbn+0xcc>
   23268:	00a00034 	movhi	r2,32768
   2326c:	10bfffc4 	addi	r2,r2,-1
   23270:	2884703a 	and	r2,r5,r2
   23274:	4084b03a 	or	r2,r8,r2
   23278:	10001826 	beq	r2,zero,232dc <scalbn+0xa0>
   2327c:	0005883a 	mov	r2,zero
   23280:	00d0d434 	movhi	r3,17232
   23284:	4009883a 	mov	r4,r8
   23288:	100d883a 	mov	r6,r2
   2328c:	180f883a 	mov	r7,r3
   23290:	0023d840 	call	23d84 <__muldf3>
   23294:	100b883a 	mov	r5,r2
   23298:	1011883a 	mov	r8,r2
   2329c:	00bffff4 	movhi	r2,65535
   232a0:	108f2c04 	addi	r2,r2,15536
   232a4:	180d883a 	mov	r6,r3
   232a8:	1813883a 	mov	r9,r3
   232ac:	8080120e 	bge	r16,r2,232f8 <scalbn+0xbc>
   232b0:	00b0be74 	movhi	r2,49913
   232b4:	10bcd644 	addi	r2,r2,-3239
   232b8:	00c06974 	movhi	r3,421
   232bc:	18db87c4 	addi	r3,r3,28191
   232c0:	2809883a 	mov	r4,r5
   232c4:	180f883a 	mov	r7,r3
   232c8:	300b883a 	mov	r5,r6
   232cc:	100d883a 	mov	r6,r2
   232d0:	0023d840 	call	23d84 <__muldf3>
   232d4:	1011883a 	mov	r8,r2
   232d8:	1813883a 	mov	r9,r3
   232dc:	4005883a 	mov	r2,r8
   232e0:	4807883a 	mov	r3,r9
   232e4:	dfc00217 	ldw	ra,8(sp)
   232e8:	dc400117 	ldw	r17,4(sp)
   232ec:	dc000017 	ldw	r16,0(sp)
   232f0:	dec00304 	addi	sp,sp,12
   232f4:	f800283a 	ret
   232f8:	189ffc2c 	andhi	r2,r3,32752
   232fc:	1005d53a 	srai	r2,r2,20
   23300:	1815883a 	mov	r10,r3
   23304:	113ff284 	addi	r4,r2,-54
   23308:	0081ffc4 	movi	r2,2047
   2330c:	20801126 	beq	r4,r2,23354 <scalbn+0x118>
   23310:	2409883a 	add	r4,r4,r16
   23314:	0081ff84 	movi	r2,2046
   23318:	11001c16 	blt	r2,r4,2338c <scalbn+0x150>
   2331c:	0100290e 	bge	zero,r4,233c4 <scalbn+0x188>
   23320:	200a953a 	slli	r5,r4,20
   23324:	01200434 	movhi	r4,32784
   23328:	213fffc4 	addi	r4,r4,-1
   2332c:	5108703a 	and	r4,r10,r4
   23330:	2148b03a 	or	r4,r4,r5
   23334:	2013883a 	mov	r9,r4
   23338:	4005883a 	mov	r2,r8
   2333c:	4807883a 	mov	r3,r9
   23340:	dfc00217 	ldw	ra,8(sp)
   23344:	dc400117 	ldw	r17,4(sp)
   23348:	dc000017 	ldw	r16,0(sp)
   2334c:	dec00304 	addi	sp,sp,12
   23350:	f800283a 	ret
   23354:	480f883a 	mov	r7,r9
   23358:	4009883a 	mov	r4,r8
   2335c:	480b883a 	mov	r5,r9
   23360:	400d883a 	mov	r6,r8
   23364:	0023d100 	call	23d10 <__adddf3>
   23368:	1011883a 	mov	r8,r2
   2336c:	1813883a 	mov	r9,r3
   23370:	4005883a 	mov	r2,r8
   23374:	4807883a 	mov	r3,r9
   23378:	dfc00217 	ldw	ra,8(sp)
   2337c:	dc400117 	ldw	r17,4(sp)
   23380:	dc000017 	ldw	r16,0(sp)
   23384:	dec00304 	addi	sp,sp,12
   23388:	f800283a 	ret
   2338c:	04220034 	movhi	r16,34816
   23390:	841d6704 	addi	r16,r16,30108
   23394:	045f8e34 	movhi	r17,32312
   23398:	8c790f04 	addi	r17,r17,-7108
   2339c:	480f883a 	mov	r7,r9
   233a0:	400d883a 	mov	r6,r8
   233a4:	8009883a 	mov	r4,r16
   233a8:	880b883a 	mov	r5,r17
   233ac:	002341c0 	call	2341c <copysign>
   233b0:	180b883a 	mov	r5,r3
   233b4:	800d883a 	mov	r6,r16
   233b8:	880f883a 	mov	r7,r17
   233bc:	1009883a 	mov	r4,r2
   233c0:	003fc306 	br	232d0 <scalbn+0x94>
   233c4:	00bff284 	movi	r2,-54
   233c8:	11000716 	blt	r2,r4,233e8 <scalbn+0x1ac>
   233cc:	00b0d414 	movui	r2,50000
   233d0:	143fee16 	blt	r2,r16,2338c <scalbn+0x150>
   233d4:	0430be74 	movhi	r16,49913
   233d8:	843cd644 	addi	r16,r16,-3239
   233dc:	04406974 	movhi	r17,421
   233e0:	8c5b87c4 	addi	r17,r17,28191
   233e4:	003fed06 	br	2339c <scalbn+0x160>
   233e8:	21000d84 	addi	r4,r4,54
   233ec:	2008953a 	slli	r4,r4,20
   233f0:	01e00434 	movhi	r7,32784
   233f4:	39ffffc4 	addi	r7,r7,-1
   233f8:	51ce703a 	and	r7,r10,r7
   233fc:	390eb03a 	or	r7,r7,r4
   23400:	024f2434 	movhi	r9,15504
   23404:	4009883a 	mov	r4,r8
   23408:	0011883a 	mov	r8,zero
   2340c:	380b883a 	mov	r5,r7
   23410:	400d883a 	mov	r6,r8
   23414:	480f883a 	mov	r7,r9
   23418:	003fad06 	br	232d0 <scalbn+0x94>

0002341c <copysign>:
   2341c:	3813883a 	mov	r9,r7
   23420:	01e00034 	movhi	r7,32768
   23424:	39ffffc4 	addi	r7,r7,-1
   23428:	394e703a 	and	r7,r7,r5
   2342c:	4aa0002c 	andhi	r10,r9,32768
   23430:	3a8eb03a 	or	r7,r7,r10
   23434:	2005883a 	mov	r2,r4
   23438:	3807883a 	mov	r3,r7
   2343c:	f800283a 	ret

00023440 <__mulsf3>:
   23440:	deffef04 	addi	sp,sp,-68
   23444:	dc400f15 	stw	r17,60(sp)
   23448:	dc400204 	addi	r17,sp,8
   2344c:	dc000e15 	stw	r16,56(sp)
   23450:	d9000015 	stw	r4,0(sp)
   23454:	d9400115 	stw	r5,4(sp)
   23458:	d809883a 	mov	r4,sp
   2345c:	880b883a 	mov	r5,r17
   23460:	dc000604 	addi	r16,sp,24
   23464:	dfc01015 	stw	ra,64(sp)
   23468:	0024bc40 	call	24bc4 <__unpack_f>
   2346c:	d9000104 	addi	r4,sp,4
   23470:	800b883a 	mov	r5,r16
   23474:	0024bc40 	call	24bc4 <__unpack_f>
   23478:	d9000217 	ldw	r4,8(sp)
   2347c:	00800044 	movi	r2,1
   23480:	01400104 	movi	r5,4
   23484:	1100142e 	bgeu	r2,r4,234d8 <__mulsf3+0x98>
   23488:	d8c00617 	ldw	r3,24(sp)
   2348c:	10c0052e 	bgeu	r2,r3,234a4 <__mulsf3+0x64>
   23490:	21400f26 	beq	r4,r5,234d0 <__mulsf3+0x90>
   23494:	19405d26 	beq	r3,r5,2360c <__mulsf3+0x1cc>
   23498:	00800084 	movi	r2,2
   2349c:	20800e26 	beq	r4,r2,234d8 <__mulsf3+0x98>
   234a0:	1880181e 	bne	r3,r2,23504 <__mulsf3+0xc4>
   234a4:	d8c00717 	ldw	r3,28(sp)
   234a8:	d8800317 	ldw	r2,12(sp)
   234ac:	8009883a 	mov	r4,r16
   234b0:	10c4c03a 	cmpne	r2,r2,r3
   234b4:	d8800715 	stw	r2,28(sp)
   234b8:	0024a640 	call	24a64 <__pack_f>
   234bc:	dfc01017 	ldw	ra,64(sp)
   234c0:	dc400f17 	ldw	r17,60(sp)
   234c4:	dc000e17 	ldw	r16,56(sp)
   234c8:	dec01104 	addi	sp,sp,68
   234cc:	f800283a 	ret
   234d0:	00800084 	movi	r2,2
   234d4:	18804f26 	beq	r3,r2,23614 <__mulsf3+0x1d4>
   234d8:	d8800317 	ldw	r2,12(sp)
   234dc:	d8c00717 	ldw	r3,28(sp)
   234e0:	8809883a 	mov	r4,r17
   234e4:	10c4c03a 	cmpne	r2,r2,r3
   234e8:	d8800315 	stw	r2,12(sp)
   234ec:	0024a640 	call	24a64 <__pack_f>
   234f0:	dfc01017 	ldw	ra,64(sp)
   234f4:	dc400f17 	ldw	r17,60(sp)
   234f8:	dc000e17 	ldw	r16,56(sp)
   234fc:	dec01104 	addi	sp,sp,68
   23500:	f800283a 	ret
   23504:	d8800517 	ldw	r2,20(sp)
   23508:	da000917 	ldw	r8,36(sp)
   2350c:	0013883a 	mov	r9,zero
   23510:	0007883a 	mov	r3,zero
   23514:	480f883a 	mov	r7,r9
   23518:	180b883a 	mov	r5,r3
   2351c:	400d883a 	mov	r6,r8
   23520:	1009883a 	mov	r4,r2
   23524:	002494c0 	call	2494c <__muldi3>
   23528:	da800417 	ldw	r10,16(sp)
   2352c:	d9800817 	ldw	r6,32(sp)
   23530:	da400317 	ldw	r9,12(sp)
   23534:	52800084 	addi	r10,r10,2
   23538:	3295883a 	add	r10,r6,r10
   2353c:	d9800717 	ldw	r6,28(sp)
   23540:	180b883a 	mov	r5,r3
   23544:	180f883a 	mov	r7,r3
   23548:	4992c03a 	cmpne	r9,r9,r6
   2354c:	da400b15 	stw	r9,44(sp)
   23550:	1007883a 	mov	r3,r2
   23554:	da800c15 	stw	r10,48(sp)
   23558:	2800070e 	bge	r5,zero,23578 <__mulsf3+0x138>
   2355c:	2880004c 	andi	r2,r5,1
   23560:	1005003a 	cmpeq	r2,r2,zero
   23564:	500d883a 	mov	r6,r10
   23568:	10001e26 	beq	r2,zero,235e4 <__mulsf3+0x1a4>
   2356c:	380ed07a 	srli	r7,r7,1
   23570:	31800044 	addi	r6,r6,1
   23574:	d9800c15 	stw	r6,48(sp)
   23578:	01100034 	movhi	r4,16384
   2357c:	213fffc4 	addi	r4,r4,-1
   23580:	21c00b36 	bltu	r4,r7,235b0 <__mulsf3+0x170>
   23584:	d8800c17 	ldw	r2,48(sp)
   23588:	00000206 	br	23594 <__mulsf3+0x154>
   2358c:	18c7883a 	add	r3,r3,r3
   23590:	21c00636 	bltu	r4,r7,235ac <__mulsf3+0x16c>
   23594:	10bfffc4 	addi	r2,r2,-1
   23598:	39cf883a 	add	r7,r7,r7
   2359c:	183ffb0e 	bge	r3,zero,2358c <__mulsf3+0x14c>
   235a0:	39c00054 	ori	r7,r7,1
   235a4:	18c7883a 	add	r3,r3,r3
   235a8:	21fffa2e 	bgeu	r4,r7,23594 <__mulsf3+0x154>
   235ac:	d8800c15 	stw	r2,48(sp)
   235b0:	39001fcc 	andi	r4,r7,127
   235b4:	00801004 	movi	r2,64
   235b8:	20800d26 	beq	r4,r2,235f0 <__mulsf3+0x1b0>
   235bc:	008000c4 	movi	r2,3
   235c0:	d9000a04 	addi	r4,sp,40
   235c4:	d9c00d15 	stw	r7,52(sp)
   235c8:	d8800a15 	stw	r2,40(sp)
   235cc:	0024a640 	call	24a64 <__pack_f>
   235d0:	dfc01017 	ldw	ra,64(sp)
   235d4:	dc400f17 	ldw	r17,60(sp)
   235d8:	dc000e17 	ldw	r16,56(sp)
   235dc:	dec01104 	addi	sp,sp,68
   235e0:	f800283a 	ret
   235e4:	1804d07a 	srli	r2,r3,1
   235e8:	10e00034 	orhi	r3,r2,32768
   235ec:	003fdf06 	br	2356c <__mulsf3+0x12c>
   235f0:	3880200c 	andi	r2,r7,128
   235f4:	103ff11e 	bne	r2,zero,235bc <__mulsf3+0x17c>
   235f8:	183ff026 	beq	r3,zero,235bc <__mulsf3+0x17c>
   235fc:	3907883a 	add	r3,r7,r4
   23600:	00bfe004 	movi	r2,-128
   23604:	188e703a 	and	r7,r3,r2
   23608:	003fec06 	br	235bc <__mulsf3+0x17c>
   2360c:	00800084 	movi	r2,2
   23610:	20bfa41e 	bne	r4,r2,234a4 <__mulsf3+0x64>
   23614:	010000f4 	movhi	r4,3
   23618:	213f4304 	addi	r4,r4,-756
   2361c:	003fb306 	br	234ec <__mulsf3+0xac>

00023620 <__divsf3>:
   23620:	defff304 	addi	sp,sp,-52
   23624:	dc400b15 	stw	r17,44(sp)
   23628:	dc400204 	addi	r17,sp,8
   2362c:	dc000a15 	stw	r16,40(sp)
   23630:	d9000015 	stw	r4,0(sp)
   23634:	d9400115 	stw	r5,4(sp)
   23638:	d809883a 	mov	r4,sp
   2363c:	880b883a 	mov	r5,r17
   23640:	dc000604 	addi	r16,sp,24
   23644:	dfc00c15 	stw	ra,48(sp)
   23648:	0024bc40 	call	24bc4 <__unpack_f>
   2364c:	d9000104 	addi	r4,sp,4
   23650:	800b883a 	mov	r5,r16
   23654:	0024bc40 	call	24bc4 <__unpack_f>
   23658:	d9000217 	ldw	r4,8(sp)
   2365c:	00800044 	movi	r2,1
   23660:	01800104 	movi	r6,4
   23664:	11000a2e 	bgeu	r2,r4,23690 <__divsf3+0x70>
   23668:	d9400617 	ldw	r5,24(sp)
   2366c:	1140432e 	bgeu	r2,r5,2377c <__divsf3+0x15c>
   23670:	d8800317 	ldw	r2,12(sp)
   23674:	d8c00717 	ldw	r3,28(sp)
   23678:	10c4f03a 	xor	r2,r2,r3
   2367c:	d8800315 	stw	r2,12(sp)
   23680:	21800226 	beq	r4,r6,2368c <__divsf3+0x6c>
   23684:	00800084 	movi	r2,2
   23688:	2080101e 	bne	r4,r2,236cc <__divsf3+0xac>
   2368c:	29000726 	beq	r5,r4,236ac <__divsf3+0x8c>
   23690:	8809883a 	mov	r4,r17
   23694:	0024a640 	call	24a64 <__pack_f>
   23698:	dfc00c17 	ldw	ra,48(sp)
   2369c:	dc400b17 	ldw	r17,44(sp)
   236a0:	dc000a17 	ldw	r16,40(sp)
   236a4:	dec00d04 	addi	sp,sp,52
   236a8:	f800283a 	ret
   236ac:	010000f4 	movhi	r4,3
   236b0:	213f4304 	addi	r4,r4,-756
   236b4:	0024a640 	call	24a64 <__pack_f>
   236b8:	dfc00c17 	ldw	ra,48(sp)
   236bc:	dc400b17 	ldw	r17,44(sp)
   236c0:	dc000a17 	ldw	r16,40(sp)
   236c4:	dec00d04 	addi	sp,sp,52
   236c8:	f800283a 	ret
   236cc:	29802d26 	beq	r5,r6,23784 <__divsf3+0x164>
   236d0:	28801a26 	beq	r5,r2,2373c <__divsf3+0x11c>
   236d4:	d8c00417 	ldw	r3,16(sp)
   236d8:	d8800817 	ldw	r2,32(sp)
   236dc:	d9000517 	ldw	r4,20(sp)
   236e0:	d9800917 	ldw	r6,36(sp)
   236e4:	1885c83a 	sub	r2,r3,r2
   236e8:	d8800415 	stw	r2,16(sp)
   236ec:	2180032e 	bgeu	r4,r6,236fc <__divsf3+0xdc>
   236f0:	10bfffc4 	addi	r2,r2,-1
   236f4:	d8800415 	stw	r2,16(sp)
   236f8:	2109883a 	add	r4,r4,r4
   236fc:	01500034 	movhi	r5,16384
   23700:	0007883a 	mov	r3,zero
   23704:	0005883a 	mov	r2,zero
   23708:	01c007c4 	movi	r7,31
   2370c:	10800044 	addi	r2,r2,1
   23710:	21800236 	bltu	r4,r6,2371c <__divsf3+0xfc>
   23714:	1946b03a 	or	r3,r3,r5
   23718:	2189c83a 	sub	r4,r4,r6
   2371c:	280ad07a 	srli	r5,r5,1
   23720:	2109883a 	add	r4,r4,r4
   23724:	11fff91e 	bne	r2,r7,2370c <__divsf3+0xec>
   23728:	19401fcc 	andi	r5,r3,127
   2372c:	00801004 	movi	r2,64
   23730:	28800a26 	beq	r5,r2,2375c <__divsf3+0x13c>
   23734:	d8c00515 	stw	r3,20(sp)
   23738:	003fd506 	br	23690 <__divsf3+0x70>
   2373c:	8809883a 	mov	r4,r17
   23740:	d9800215 	stw	r6,8(sp)
   23744:	0024a640 	call	24a64 <__pack_f>
   23748:	dfc00c17 	ldw	ra,48(sp)
   2374c:	dc400b17 	ldw	r17,44(sp)
   23750:	dc000a17 	ldw	r16,40(sp)
   23754:	dec00d04 	addi	sp,sp,52
   23758:	f800283a 	ret
   2375c:	1880200c 	andi	r2,r3,128
   23760:	103ff41e 	bne	r2,zero,23734 <__divsf3+0x114>
   23764:	203ff326 	beq	r4,zero,23734 <__divsf3+0x114>
   23768:	1947883a 	add	r3,r3,r5
   2376c:	00bfe004 	movi	r2,-128
   23770:	1886703a 	and	r3,r3,r2
   23774:	d8c00515 	stw	r3,20(sp)
   23778:	003fc506 	br	23690 <__divsf3+0x70>
   2377c:	8009883a 	mov	r4,r16
   23780:	003fc406 	br	23694 <__divsf3+0x74>
   23784:	8809883a 	mov	r4,r17
   23788:	d8000515 	stw	zero,20(sp)
   2378c:	d8000415 	stw	zero,16(sp)
   23790:	003fc006 	br	23694 <__divsf3+0x74>

00023794 <__floatsisf>:
   23794:	2006d7fa 	srli	r3,r4,31
   23798:	defffa04 	addi	sp,sp,-24
   2379c:	008000c4 	movi	r2,3
   237a0:	dfc00515 	stw	ra,20(sp)
   237a4:	dc000415 	stw	r16,16(sp)
   237a8:	d8800015 	stw	r2,0(sp)
   237ac:	d8c00115 	stw	r3,4(sp)
   237b0:	2000081e 	bne	r4,zero,237d4 <__floatsisf+0x40>
   237b4:	00800084 	movi	r2,2
   237b8:	d8800015 	stw	r2,0(sp)
   237bc:	d809883a 	mov	r4,sp
   237c0:	0024a640 	call	24a64 <__pack_f>
   237c4:	dfc00517 	ldw	ra,20(sp)
   237c8:	dc000417 	ldw	r16,16(sp)
   237cc:	dec00604 	addi	sp,sp,24
   237d0:	f800283a 	ret
   237d4:	00800784 	movi	r2,30
   237d8:	1807003a 	cmpeq	r3,r3,zero
   237dc:	d8800215 	stw	r2,8(sp)
   237e0:	18000e1e 	bne	r3,zero,2381c <__floatsisf+0x88>
   237e4:	00a00034 	movhi	r2,32768
   237e8:	20800e26 	beq	r4,r2,23824 <__floatsisf+0x90>
   237ec:	0121c83a 	sub	r16,zero,r4
   237f0:	8009883a 	mov	r4,r16
   237f4:	dc000315 	stw	r16,12(sp)
   237f8:	00249e40 	call	249e4 <__clzsi2>
   237fc:	117fffc4 	addi	r5,r2,-1
   23800:	017fee0e 	bge	zero,r5,237bc <__floatsisf+0x28>
   23804:	d8800217 	ldw	r2,8(sp)
   23808:	8146983a 	sll	r3,r16,r5
   2380c:	1145c83a 	sub	r2,r2,r5
   23810:	d8c00315 	stw	r3,12(sp)
   23814:	d8800215 	stw	r2,8(sp)
   23818:	003fe806 	br	237bc <__floatsisf+0x28>
   2381c:	2021883a 	mov	r16,r4
   23820:	003ff306 	br	237f0 <__floatsisf+0x5c>
   23824:	00b3c034 	movhi	r2,52992
   23828:	003fe606 	br	237c4 <__floatsisf+0x30>

0002382c <__extendsfdf2>:
   2382c:	defff904 	addi	sp,sp,-28
   23830:	d9000115 	stw	r4,4(sp)
   23834:	d9400204 	addi	r5,sp,8
   23838:	d9000104 	addi	r4,sp,4
   2383c:	dfc00615 	stw	ra,24(sp)
   23840:	0024bc40 	call	24bc4 <__unpack_f>
   23844:	d9c00517 	ldw	r7,20(sp)
   23848:	0011883a 	mov	r8,zero
   2384c:	400697ba 	slli	r3,r8,30
   23850:	3812d0ba 	srli	r9,r7,2
   23854:	380497ba 	slli	r2,r7,30
   23858:	d9000217 	ldw	r4,8(sp)
   2385c:	d9400317 	ldw	r5,12(sp)
   23860:	d9800417 	ldw	r6,16(sp)
   23864:	48c6b03a 	or	r3,r9,r3
   23868:	100f883a 	mov	r7,r2
   2386c:	d8c00015 	stw	r3,0(sp)
   23870:	00248a00 	call	248a0 <__make_dp>
   23874:	dfc00617 	ldw	ra,24(sp)
   23878:	dec00704 	addi	sp,sp,28
   2387c:	f800283a 	ret

00023880 <_fpadd_parts>:
   23880:	defff804 	addi	sp,sp,-32
   23884:	dcc00315 	stw	r19,12(sp)
   23888:	2027883a 	mov	r19,r4
   2388c:	21000017 	ldw	r4,0(r4)
   23890:	00c00044 	movi	r3,1
   23894:	dd400515 	stw	r21,20(sp)
   23898:	dd000415 	stw	r20,16(sp)
   2389c:	ddc00715 	stw	r23,28(sp)
   238a0:	dd800615 	stw	r22,24(sp)
   238a4:	dc800215 	stw	r18,8(sp)
   238a8:	dc400115 	stw	r17,4(sp)
   238ac:	dc000015 	stw	r16,0(sp)
   238b0:	282b883a 	mov	r21,r5
   238b4:	3029883a 	mov	r20,r6
   238b8:	1900632e 	bgeu	r3,r4,23a48 <_fpadd_parts+0x1c8>
   238bc:	28800017 	ldw	r2,0(r5)
   238c0:	1880812e 	bgeu	r3,r2,23ac8 <_fpadd_parts+0x248>
   238c4:	00c00104 	movi	r3,4
   238c8:	20c0dc26 	beq	r4,r3,23c3c <_fpadd_parts+0x3bc>
   238cc:	10c07e26 	beq	r2,r3,23ac8 <_fpadd_parts+0x248>
   238d0:	00c00084 	movi	r3,2
   238d4:	10c06726 	beq	r2,r3,23a74 <_fpadd_parts+0x1f4>
   238d8:	20c07b26 	beq	r4,r3,23ac8 <_fpadd_parts+0x248>
   238dc:	9dc00217 	ldw	r23,8(r19)
   238e0:	28c00217 	ldw	r3,8(r5)
   238e4:	9c400317 	ldw	r17,12(r19)
   238e8:	2bc00317 	ldw	r15,12(r5)
   238ec:	b8cdc83a 	sub	r6,r23,r3
   238f0:	9c800417 	ldw	r18,16(r19)
   238f4:	2c000417 	ldw	r16,16(r5)
   238f8:	3009883a 	mov	r4,r6
   238fc:	30009716 	blt	r6,zero,23b5c <_fpadd_parts+0x2dc>
   23900:	00800fc4 	movi	r2,63
   23904:	11806b16 	blt	r2,r6,23ab4 <_fpadd_parts+0x234>
   23908:	0100a40e 	bge	zero,r4,23b9c <_fpadd_parts+0x31c>
   2390c:	35bff804 	addi	r22,r6,-32
   23910:	b000bc16 	blt	r22,zero,23c04 <_fpadd_parts+0x384>
   23914:	8596d83a 	srl	r11,r16,r22
   23918:	0019883a 	mov	r12,zero
   2391c:	0013883a 	mov	r9,zero
   23920:	01000044 	movi	r4,1
   23924:	0015883a 	mov	r10,zero
   23928:	b000be16 	blt	r22,zero,23c24 <_fpadd_parts+0x3a4>
   2392c:	2590983a 	sll	r8,r4,r22
   23930:	000f883a 	mov	r7,zero
   23934:	00bfffc4 	movi	r2,-1
   23938:	3889883a 	add	r4,r7,r2
   2393c:	408b883a 	add	r5,r8,r2
   23940:	21cd803a 	cmpltu	r6,r4,r7
   23944:	314b883a 	add	r5,r6,r5
   23948:	7904703a 	and	r2,r15,r4
   2394c:	8146703a 	and	r3,r16,r5
   23950:	10c4b03a 	or	r2,r2,r3
   23954:	10000226 	beq	r2,zero,23960 <_fpadd_parts+0xe0>
   23958:	02400044 	movi	r9,1
   2395c:	0015883a 	mov	r10,zero
   23960:	5a5eb03a 	or	r15,r11,r9
   23964:	62a0b03a 	or	r16,r12,r10
   23968:	99400117 	ldw	r5,4(r19)
   2396c:	a8800117 	ldw	r2,4(r21)
   23970:	28806e26 	beq	r5,r2,23b2c <_fpadd_parts+0x2ac>
   23974:	28006626 	beq	r5,zero,23b10 <_fpadd_parts+0x290>
   23978:	7c45c83a 	sub	r2,r15,r17
   2397c:	7889803a 	cmpltu	r4,r15,r2
   23980:	8487c83a 	sub	r3,r16,r18
   23984:	1909c83a 	sub	r4,r3,r4
   23988:	100d883a 	mov	r6,r2
   2398c:	200f883a 	mov	r7,r4
   23990:	38007716 	blt	r7,zero,23b70 <_fpadd_parts+0x2f0>
   23994:	a5c00215 	stw	r23,8(r20)
   23998:	a1c00415 	stw	r7,16(r20)
   2399c:	a0000115 	stw	zero,4(r20)
   239a0:	a1800315 	stw	r6,12(r20)
   239a4:	a2000317 	ldw	r8,12(r20)
   239a8:	a2400417 	ldw	r9,16(r20)
   239ac:	00bfffc4 	movi	r2,-1
   239b0:	408b883a 	add	r5,r8,r2
   239b4:	2a09803a 	cmpltu	r4,r5,r8
   239b8:	488d883a 	add	r6,r9,r2
   239bc:	01c40034 	movhi	r7,4096
   239c0:	39ffffc4 	addi	r7,r7,-1
   239c4:	218d883a 	add	r6,r4,r6
   239c8:	39801736 	bltu	r7,r6,23a28 <_fpadd_parts+0x1a8>
   239cc:	31c06526 	beq	r6,r7,23b64 <_fpadd_parts+0x2e4>
   239d0:	a3000217 	ldw	r12,8(r20)
   239d4:	4209883a 	add	r4,r8,r8
   239d8:	00bfffc4 	movi	r2,-1
   239dc:	220f803a 	cmpltu	r7,r4,r8
   239e0:	4a4b883a 	add	r5,r9,r9
   239e4:	394f883a 	add	r7,r7,r5
   239e8:	2095883a 	add	r10,r4,r2
   239ec:	3897883a 	add	r11,r7,r2
   239f0:	510d803a 	cmpltu	r6,r10,r4
   239f4:	6099883a 	add	r12,r12,r2
   239f8:	32d7883a 	add	r11,r6,r11
   239fc:	00840034 	movhi	r2,4096
   23a00:	10bfffc4 	addi	r2,r2,-1
   23a04:	2011883a 	mov	r8,r4
   23a08:	3813883a 	mov	r9,r7
   23a0c:	a1000315 	stw	r4,12(r20)
   23a10:	a1c00415 	stw	r7,16(r20)
   23a14:	a3000215 	stw	r12,8(r20)
   23a18:	12c00336 	bltu	r2,r11,23a28 <_fpadd_parts+0x1a8>
   23a1c:	58bfed1e 	bne	r11,r2,239d4 <_fpadd_parts+0x154>
   23a20:	00bfff84 	movi	r2,-2
   23a24:	12bfeb2e 	bgeu	r2,r10,239d4 <_fpadd_parts+0x154>
   23a28:	a2800417 	ldw	r10,16(r20)
   23a2c:	008000c4 	movi	r2,3
   23a30:	00c80034 	movhi	r3,8192
   23a34:	18ffffc4 	addi	r3,r3,-1
   23a38:	a2400317 	ldw	r9,12(r20)
   23a3c:	a0800015 	stw	r2,0(r20)
   23a40:	1a802336 	bltu	r3,r10,23ad0 <_fpadd_parts+0x250>
   23a44:	a027883a 	mov	r19,r20
   23a48:	9805883a 	mov	r2,r19
   23a4c:	ddc00717 	ldw	r23,28(sp)
   23a50:	dd800617 	ldw	r22,24(sp)
   23a54:	dd400517 	ldw	r21,20(sp)
   23a58:	dd000417 	ldw	r20,16(sp)
   23a5c:	dcc00317 	ldw	r19,12(sp)
   23a60:	dc800217 	ldw	r18,8(sp)
   23a64:	dc400117 	ldw	r17,4(sp)
   23a68:	dc000017 	ldw	r16,0(sp)
   23a6c:	dec00804 	addi	sp,sp,32
   23a70:	f800283a 	ret
   23a74:	20fff41e 	bne	r4,r3,23a48 <_fpadd_parts+0x1c8>
   23a78:	31000015 	stw	r4,0(r6)
   23a7c:	98800117 	ldw	r2,4(r19)
   23a80:	30800115 	stw	r2,4(r6)
   23a84:	98c00217 	ldw	r3,8(r19)
   23a88:	30c00215 	stw	r3,8(r6)
   23a8c:	98800317 	ldw	r2,12(r19)
   23a90:	30800315 	stw	r2,12(r6)
   23a94:	98c00417 	ldw	r3,16(r19)
   23a98:	30c00415 	stw	r3,16(r6)
   23a9c:	98800117 	ldw	r2,4(r19)
   23aa0:	28c00117 	ldw	r3,4(r5)
   23aa4:	3027883a 	mov	r19,r6
   23aa8:	10c4703a 	and	r2,r2,r3
   23aac:	30800115 	stw	r2,4(r6)
   23ab0:	003fe506 	br	23a48 <_fpadd_parts+0x1c8>
   23ab4:	1dc02616 	blt	r3,r23,23b50 <_fpadd_parts+0x2d0>
   23ab8:	0023883a 	mov	r17,zero
   23abc:	182f883a 	mov	r23,r3
   23ac0:	0025883a 	mov	r18,zero
   23ac4:	003fa806 	br	23968 <_fpadd_parts+0xe8>
   23ac8:	a827883a 	mov	r19,r21
   23acc:	003fde06 	br	23a48 <_fpadd_parts+0x1c8>
   23ad0:	01800044 	movi	r6,1
   23ad4:	500497fa 	slli	r2,r10,31
   23ad8:	4808d07a 	srli	r4,r9,1
   23adc:	518ad83a 	srl	r5,r10,r6
   23ae0:	a2000217 	ldw	r8,8(r20)
   23ae4:	1108b03a 	or	r4,r2,r4
   23ae8:	0007883a 	mov	r3,zero
   23aec:	4984703a 	and	r2,r9,r6
   23af0:	208cb03a 	or	r6,r4,r2
   23af4:	28ceb03a 	or	r7,r5,r3
   23af8:	42000044 	addi	r8,r8,1
   23afc:	a027883a 	mov	r19,r20
   23b00:	a1c00415 	stw	r7,16(r20)
   23b04:	a2000215 	stw	r8,8(r20)
   23b08:	a1800315 	stw	r6,12(r20)
   23b0c:	003fce06 	br	23a48 <_fpadd_parts+0x1c8>
   23b10:	8bc5c83a 	sub	r2,r17,r15
   23b14:	8889803a 	cmpltu	r4,r17,r2
   23b18:	9407c83a 	sub	r3,r18,r16
   23b1c:	1909c83a 	sub	r4,r3,r4
   23b20:	100d883a 	mov	r6,r2
   23b24:	200f883a 	mov	r7,r4
   23b28:	003f9906 	br	23990 <_fpadd_parts+0x110>
   23b2c:	7c45883a 	add	r2,r15,r17
   23b30:	13c9803a 	cmpltu	r4,r2,r15
   23b34:	8487883a 	add	r3,r16,r18
   23b38:	20c9883a 	add	r4,r4,r3
   23b3c:	a1400115 	stw	r5,4(r20)
   23b40:	a5c00215 	stw	r23,8(r20)
   23b44:	a0800315 	stw	r2,12(r20)
   23b48:	a1000415 	stw	r4,16(r20)
   23b4c:	003fb606 	br	23a28 <_fpadd_parts+0x1a8>
   23b50:	001f883a 	mov	r15,zero
   23b54:	0021883a 	mov	r16,zero
   23b58:	003f8306 	br	23968 <_fpadd_parts+0xe8>
   23b5c:	018dc83a 	sub	r6,zero,r6
   23b60:	003f6706 	br	23900 <_fpadd_parts+0x80>
   23b64:	00bfff84 	movi	r2,-2
   23b68:	117faf36 	bltu	r2,r5,23a28 <_fpadd_parts+0x1a8>
   23b6c:	003f9806 	br	239d0 <_fpadd_parts+0x150>
   23b70:	0005883a 	mov	r2,zero
   23b74:	1189c83a 	sub	r4,r2,r6
   23b78:	1105803a 	cmpltu	r2,r2,r4
   23b7c:	01cbc83a 	sub	r5,zero,r7
   23b80:	2885c83a 	sub	r2,r5,r2
   23b84:	01800044 	movi	r6,1
   23b88:	a1800115 	stw	r6,4(r20)
   23b8c:	a5c00215 	stw	r23,8(r20)
   23b90:	a1000315 	stw	r4,12(r20)
   23b94:	a0800415 	stw	r2,16(r20)
   23b98:	003f8206 	br	239a4 <_fpadd_parts+0x124>
   23b9c:	203f7226 	beq	r4,zero,23968 <_fpadd_parts+0xe8>
   23ba0:	35bff804 	addi	r22,r6,-32
   23ba4:	b9af883a 	add	r23,r23,r6
   23ba8:	b0003116 	blt	r22,zero,23c70 <_fpadd_parts+0x3f0>
   23bac:	959ad83a 	srl	r13,r18,r22
   23bb0:	001d883a 	mov	r14,zero
   23bb4:	000f883a 	mov	r7,zero
   23bb8:	01000044 	movi	r4,1
   23bbc:	0011883a 	mov	r8,zero
   23bc0:	b0002516 	blt	r22,zero,23c58 <_fpadd_parts+0x3d8>
   23bc4:	2594983a 	sll	r10,r4,r22
   23bc8:	0013883a 	mov	r9,zero
   23bcc:	00bfffc4 	movi	r2,-1
   23bd0:	4889883a 	add	r4,r9,r2
   23bd4:	508b883a 	add	r5,r10,r2
   23bd8:	224d803a 	cmpltu	r6,r4,r9
   23bdc:	314b883a 	add	r5,r6,r5
   23be0:	8904703a 	and	r2,r17,r4
   23be4:	9146703a 	and	r3,r18,r5
   23be8:	10c4b03a 	or	r2,r2,r3
   23bec:	10000226 	beq	r2,zero,23bf8 <_fpadd_parts+0x378>
   23bf0:	01c00044 	movi	r7,1
   23bf4:	0011883a 	mov	r8,zero
   23bf8:	69e2b03a 	or	r17,r13,r7
   23bfc:	7224b03a 	or	r18,r14,r8
   23c00:	003f5906 	br	23968 <_fpadd_parts+0xe8>
   23c04:	8407883a 	add	r3,r16,r16
   23c08:	008007c4 	movi	r2,31
   23c0c:	1185c83a 	sub	r2,r2,r6
   23c10:	1886983a 	sll	r3,r3,r2
   23c14:	7996d83a 	srl	r11,r15,r6
   23c18:	8198d83a 	srl	r12,r16,r6
   23c1c:	1ad6b03a 	or	r11,r3,r11
   23c20:	003f3e06 	br	2391c <_fpadd_parts+0x9c>
   23c24:	2006d07a 	srli	r3,r4,1
   23c28:	008007c4 	movi	r2,31
   23c2c:	1185c83a 	sub	r2,r2,r6
   23c30:	1890d83a 	srl	r8,r3,r2
   23c34:	218e983a 	sll	r7,r4,r6
   23c38:	003f3e06 	br	23934 <_fpadd_parts+0xb4>
   23c3c:	113f821e 	bne	r2,r4,23a48 <_fpadd_parts+0x1c8>
   23c40:	28c00117 	ldw	r3,4(r5)
   23c44:	98800117 	ldw	r2,4(r19)
   23c48:	10ff7f26 	beq	r2,r3,23a48 <_fpadd_parts+0x1c8>
   23c4c:	04c000f4 	movhi	r19,3
   23c50:	9cff4704 	addi	r19,r19,-740
   23c54:	003f7c06 	br	23a48 <_fpadd_parts+0x1c8>
   23c58:	2006d07a 	srli	r3,r4,1
   23c5c:	008007c4 	movi	r2,31
   23c60:	1185c83a 	sub	r2,r2,r6
   23c64:	1894d83a 	srl	r10,r3,r2
   23c68:	2192983a 	sll	r9,r4,r6
   23c6c:	003fd706 	br	23bcc <_fpadd_parts+0x34c>
   23c70:	9487883a 	add	r3,r18,r18
   23c74:	008007c4 	movi	r2,31
   23c78:	1185c83a 	sub	r2,r2,r6
   23c7c:	1886983a 	sll	r3,r3,r2
   23c80:	899ad83a 	srl	r13,r17,r6
   23c84:	919cd83a 	srl	r14,r18,r6
   23c88:	1b5ab03a 	or	r13,r3,r13
   23c8c:	003fc906 	br	23bb4 <_fpadd_parts+0x334>

00023c90 <__subdf3>:
   23c90:	deffea04 	addi	sp,sp,-88
   23c94:	dcc01415 	stw	r19,80(sp)
   23c98:	dcc00404 	addi	r19,sp,16
   23c9c:	2011883a 	mov	r8,r4
   23ca0:	2813883a 	mov	r9,r5
   23ca4:	dc401315 	stw	r17,76(sp)
   23ca8:	d809883a 	mov	r4,sp
   23cac:	980b883a 	mov	r5,r19
   23cb0:	dc400904 	addi	r17,sp,36
   23cb4:	dfc01515 	stw	ra,84(sp)
   23cb8:	da400115 	stw	r9,4(sp)
   23cbc:	d9c00315 	stw	r7,12(sp)
   23cc0:	da000015 	stw	r8,0(sp)
   23cc4:	d9800215 	stw	r6,8(sp)
   23cc8:	0024fcc0 	call	24fcc <__unpack_d>
   23ccc:	d9000204 	addi	r4,sp,8
   23cd0:	880b883a 	mov	r5,r17
   23cd4:	0024fcc0 	call	24fcc <__unpack_d>
   23cd8:	d8800a17 	ldw	r2,40(sp)
   23cdc:	880b883a 	mov	r5,r17
   23ce0:	9809883a 	mov	r4,r19
   23ce4:	d9800e04 	addi	r6,sp,56
   23ce8:	1080005c 	xori	r2,r2,1
   23cec:	d8800a15 	stw	r2,40(sp)
   23cf0:	00238800 	call	23880 <_fpadd_parts>
   23cf4:	1009883a 	mov	r4,r2
   23cf8:	0024cb80 	call	24cb8 <__pack_d>
   23cfc:	dfc01517 	ldw	ra,84(sp)
   23d00:	dcc01417 	ldw	r19,80(sp)
   23d04:	dc401317 	ldw	r17,76(sp)
   23d08:	dec01604 	addi	sp,sp,88
   23d0c:	f800283a 	ret

00023d10 <__adddf3>:
   23d10:	deffea04 	addi	sp,sp,-88
   23d14:	dcc01415 	stw	r19,80(sp)
   23d18:	dcc00404 	addi	r19,sp,16
   23d1c:	2011883a 	mov	r8,r4
   23d20:	2813883a 	mov	r9,r5
   23d24:	dc401315 	stw	r17,76(sp)
   23d28:	d809883a 	mov	r4,sp
   23d2c:	980b883a 	mov	r5,r19
   23d30:	dc400904 	addi	r17,sp,36
   23d34:	dfc01515 	stw	ra,84(sp)
   23d38:	da400115 	stw	r9,4(sp)
   23d3c:	d9c00315 	stw	r7,12(sp)
   23d40:	da000015 	stw	r8,0(sp)
   23d44:	d9800215 	stw	r6,8(sp)
   23d48:	0024fcc0 	call	24fcc <__unpack_d>
   23d4c:	d9000204 	addi	r4,sp,8
   23d50:	880b883a 	mov	r5,r17
   23d54:	0024fcc0 	call	24fcc <__unpack_d>
   23d58:	d9800e04 	addi	r6,sp,56
   23d5c:	9809883a 	mov	r4,r19
   23d60:	880b883a 	mov	r5,r17
   23d64:	00238800 	call	23880 <_fpadd_parts>
   23d68:	1009883a 	mov	r4,r2
   23d6c:	0024cb80 	call	24cb8 <__pack_d>
   23d70:	dfc01517 	ldw	ra,84(sp)
   23d74:	dcc01417 	ldw	r19,80(sp)
   23d78:	dc401317 	ldw	r17,76(sp)
   23d7c:	dec01604 	addi	sp,sp,88
   23d80:	f800283a 	ret

00023d84 <__muldf3>:
   23d84:	deffe004 	addi	sp,sp,-128
   23d88:	dc401815 	stw	r17,96(sp)
   23d8c:	dc400404 	addi	r17,sp,16
   23d90:	2011883a 	mov	r8,r4
   23d94:	2813883a 	mov	r9,r5
   23d98:	dc001715 	stw	r16,92(sp)
   23d9c:	d809883a 	mov	r4,sp
   23da0:	880b883a 	mov	r5,r17
   23da4:	dc000904 	addi	r16,sp,36
   23da8:	dfc01f15 	stw	ra,124(sp)
   23dac:	da400115 	stw	r9,4(sp)
   23db0:	d9c00315 	stw	r7,12(sp)
   23db4:	da000015 	stw	r8,0(sp)
   23db8:	d9800215 	stw	r6,8(sp)
   23dbc:	ddc01e15 	stw	r23,120(sp)
   23dc0:	dd801d15 	stw	r22,116(sp)
   23dc4:	dd401c15 	stw	r21,112(sp)
   23dc8:	dd001b15 	stw	r20,108(sp)
   23dcc:	dcc01a15 	stw	r19,104(sp)
   23dd0:	dc801915 	stw	r18,100(sp)
   23dd4:	0024fcc0 	call	24fcc <__unpack_d>
   23dd8:	d9000204 	addi	r4,sp,8
   23ddc:	800b883a 	mov	r5,r16
   23de0:	0024fcc0 	call	24fcc <__unpack_d>
   23de4:	d9000417 	ldw	r4,16(sp)
   23de8:	00800044 	movi	r2,1
   23dec:	1100102e 	bgeu	r2,r4,23e30 <__muldf3+0xac>
   23df0:	d8c00917 	ldw	r3,36(sp)
   23df4:	10c0062e 	bgeu	r2,r3,23e10 <__muldf3+0x8c>
   23df8:	00800104 	movi	r2,4
   23dfc:	20800a26 	beq	r4,r2,23e28 <__muldf3+0xa4>
   23e00:	1880cc26 	beq	r3,r2,24134 <__muldf3+0x3b0>
   23e04:	00800084 	movi	r2,2
   23e08:	20800926 	beq	r4,r2,23e30 <__muldf3+0xac>
   23e0c:	1880191e 	bne	r3,r2,23e74 <__muldf3+0xf0>
   23e10:	d8c00a17 	ldw	r3,40(sp)
   23e14:	d8800517 	ldw	r2,20(sp)
   23e18:	8009883a 	mov	r4,r16
   23e1c:	10c4c03a 	cmpne	r2,r2,r3
   23e20:	d8800a15 	stw	r2,40(sp)
   23e24:	00000706 	br	23e44 <__muldf3+0xc0>
   23e28:	00800084 	movi	r2,2
   23e2c:	1880c326 	beq	r3,r2,2413c <__muldf3+0x3b8>
   23e30:	d8800517 	ldw	r2,20(sp)
   23e34:	d8c00a17 	ldw	r3,40(sp)
   23e38:	8809883a 	mov	r4,r17
   23e3c:	10c4c03a 	cmpne	r2,r2,r3
   23e40:	d8800515 	stw	r2,20(sp)
   23e44:	0024cb80 	call	24cb8 <__pack_d>
   23e48:	dfc01f17 	ldw	ra,124(sp)
   23e4c:	ddc01e17 	ldw	r23,120(sp)
   23e50:	dd801d17 	ldw	r22,116(sp)
   23e54:	dd401c17 	ldw	r21,112(sp)
   23e58:	dd001b17 	ldw	r20,108(sp)
   23e5c:	dcc01a17 	ldw	r19,104(sp)
   23e60:	dc801917 	ldw	r18,100(sp)
   23e64:	dc401817 	ldw	r17,96(sp)
   23e68:	dc001717 	ldw	r16,92(sp)
   23e6c:	dec02004 	addi	sp,sp,128
   23e70:	f800283a 	ret
   23e74:	dd800717 	ldw	r22,28(sp)
   23e78:	dc800c17 	ldw	r18,48(sp)
   23e7c:	002b883a 	mov	r21,zero
   23e80:	0023883a 	mov	r17,zero
   23e84:	a80b883a 	mov	r5,r21
   23e88:	b00d883a 	mov	r6,r22
   23e8c:	880f883a 	mov	r7,r17
   23e90:	ddc00817 	ldw	r23,32(sp)
   23e94:	dcc00d17 	ldw	r19,52(sp)
   23e98:	9009883a 	mov	r4,r18
   23e9c:	002494c0 	call	2494c <__muldi3>
   23ea0:	001b883a 	mov	r13,zero
   23ea4:	680f883a 	mov	r7,r13
   23ea8:	b009883a 	mov	r4,r22
   23eac:	000b883a 	mov	r5,zero
   23eb0:	980d883a 	mov	r6,r19
   23eb4:	b82d883a 	mov	r22,r23
   23eb8:	002f883a 	mov	r23,zero
   23ebc:	db401615 	stw	r13,88(sp)
   23ec0:	d8801315 	stw	r2,76(sp)
   23ec4:	d8c01415 	stw	r3,80(sp)
   23ec8:	dcc01515 	stw	r19,84(sp)
   23ecc:	002494c0 	call	2494c <__muldi3>
   23ed0:	b00d883a 	mov	r6,r22
   23ed4:	000b883a 	mov	r5,zero
   23ed8:	9009883a 	mov	r4,r18
   23edc:	b80f883a 	mov	r7,r23
   23ee0:	1021883a 	mov	r16,r2
   23ee4:	1823883a 	mov	r17,r3
   23ee8:	002494c0 	call	2494c <__muldi3>
   23eec:	8085883a 	add	r2,r16,r2
   23ef0:	140d803a 	cmpltu	r6,r2,r16
   23ef4:	88c7883a 	add	r3,r17,r3
   23ef8:	30cd883a 	add	r6,r6,r3
   23efc:	1029883a 	mov	r20,r2
   23f00:	302b883a 	mov	r21,r6
   23f04:	da801317 	ldw	r10,76(sp)
   23f08:	dac01417 	ldw	r11,80(sp)
   23f0c:	db001517 	ldw	r12,84(sp)
   23f10:	db401617 	ldw	r13,88(sp)
   23f14:	3440612e 	bgeu	r6,r17,2409c <__muldf3+0x318>
   23f18:	0009883a 	mov	r4,zero
   23f1c:	5105883a 	add	r2,r10,r4
   23f20:	128d803a 	cmpltu	r6,r2,r10
   23f24:	5d07883a 	add	r3,r11,r20
   23f28:	30cd883a 	add	r6,r6,r3
   23f2c:	0021883a 	mov	r16,zero
   23f30:	04400044 	movi	r17,1
   23f34:	1025883a 	mov	r18,r2
   23f38:	3027883a 	mov	r19,r6
   23f3c:	32c06236 	bltu	r6,r11,240c8 <__muldf3+0x344>
   23f40:	59807a26 	beq	r11,r6,2412c <__muldf3+0x3a8>
   23f44:	680b883a 	mov	r5,r13
   23f48:	b80f883a 	mov	r7,r23
   23f4c:	6009883a 	mov	r4,r12
   23f50:	b00d883a 	mov	r6,r22
   23f54:	002494c0 	call	2494c <__muldi3>
   23f58:	1009883a 	mov	r4,r2
   23f5c:	000f883a 	mov	r7,zero
   23f60:	1545883a 	add	r2,r2,r21
   23f64:	1111803a 	cmpltu	r8,r2,r4
   23f68:	19c7883a 	add	r3,r3,r7
   23f6c:	40c7883a 	add	r3,r8,r3
   23f70:	88cb883a 	add	r5,r17,r3
   23f74:	d8c00617 	ldw	r3,24(sp)
   23f78:	8089883a 	add	r4,r16,r2
   23f7c:	d8800b17 	ldw	r2,44(sp)
   23f80:	18c00104 	addi	r3,r3,4
   23f84:	240d803a 	cmpltu	r6,r4,r16
   23f88:	10c7883a 	add	r3,r2,r3
   23f8c:	2013883a 	mov	r9,r4
   23f90:	d8800a17 	ldw	r2,40(sp)
   23f94:	d9000517 	ldw	r4,20(sp)
   23f98:	314d883a 	add	r6,r6,r5
   23f9c:	3015883a 	mov	r10,r6
   23fa0:	2088c03a 	cmpne	r4,r4,r2
   23fa4:	00880034 	movhi	r2,8192
   23fa8:	10bfffc4 	addi	r2,r2,-1
   23fac:	d9000f15 	stw	r4,60(sp)
   23fb0:	d8c01015 	stw	r3,64(sp)
   23fb4:	1180162e 	bgeu	r2,r6,24010 <__muldf3+0x28c>
   23fb8:	1811883a 	mov	r8,r3
   23fbc:	101f883a 	mov	r15,r2
   23fc0:	980497fa 	slli	r2,r19,31
   23fc4:	9016d07a 	srli	r11,r18,1
   23fc8:	500697fa 	slli	r3,r10,31
   23fcc:	480cd07a 	srli	r6,r9,1
   23fd0:	500ed07a 	srli	r7,r10,1
   23fd4:	12d6b03a 	or	r11,r2,r11
   23fd8:	00800044 	movi	r2,1
   23fdc:	198cb03a 	or	r6,r3,r6
   23fe0:	4888703a 	and	r4,r9,r2
   23fe4:	9818d07a 	srli	r12,r19,1
   23fe8:	001b883a 	mov	r13,zero
   23fec:	03a00034 	movhi	r14,32768
   23ff0:	3013883a 	mov	r9,r6
   23ff4:	3815883a 	mov	r10,r7
   23ff8:	4091883a 	add	r8,r8,r2
   23ffc:	20000226 	beq	r4,zero,24008 <__muldf3+0x284>
   24000:	5b64b03a 	or	r18,r11,r13
   24004:	63a6b03a 	or	r19,r12,r14
   24008:	7abfed36 	bltu	r15,r10,23fc0 <__muldf3+0x23c>
   2400c:	da001015 	stw	r8,64(sp)
   24010:	00840034 	movhi	r2,4096
   24014:	10bfffc4 	addi	r2,r2,-1
   24018:	12801436 	bltu	r2,r10,2406c <__muldf3+0x2e8>
   2401c:	da001017 	ldw	r8,64(sp)
   24020:	101f883a 	mov	r15,r2
   24024:	4a45883a 	add	r2,r9,r9
   24028:	124d803a 	cmpltu	r6,r2,r9
   2402c:	5287883a 	add	r3,r10,r10
   24030:	9497883a 	add	r11,r18,r18
   24034:	5c8f803a 	cmpltu	r7,r11,r18
   24038:	9cd9883a 	add	r12,r19,r19
   2403c:	01000044 	movi	r4,1
   24040:	30cd883a 	add	r6,r6,r3
   24044:	3b0f883a 	add	r7,r7,r12
   24048:	423fffc4 	addi	r8,r8,-1
   2404c:	1013883a 	mov	r9,r2
   24050:	3015883a 	mov	r10,r6
   24054:	111ab03a 	or	r13,r2,r4
   24058:	98003016 	blt	r19,zero,2411c <__muldf3+0x398>
   2405c:	5825883a 	mov	r18,r11
   24060:	3827883a 	mov	r19,r7
   24064:	7abfef2e 	bgeu	r15,r10,24024 <__muldf3+0x2a0>
   24068:	da001015 	stw	r8,64(sp)
   2406c:	00803fc4 	movi	r2,255
   24070:	488e703a 	and	r7,r9,r2
   24074:	00802004 	movi	r2,128
   24078:	0007883a 	mov	r3,zero
   2407c:	0011883a 	mov	r8,zero
   24080:	38801826 	beq	r7,r2,240e4 <__muldf3+0x360>
   24084:	008000c4 	movi	r2,3
   24088:	d9000e04 	addi	r4,sp,56
   2408c:	da801215 	stw	r10,72(sp)
   24090:	d8800e15 	stw	r2,56(sp)
   24094:	da401115 	stw	r9,68(sp)
   24098:	003f6a06 	br	23e44 <__muldf3+0xc0>
   2409c:	89802126 	beq	r17,r6,24124 <__muldf3+0x3a0>
   240a0:	0009883a 	mov	r4,zero
   240a4:	5105883a 	add	r2,r10,r4
   240a8:	128d803a 	cmpltu	r6,r2,r10
   240ac:	5d07883a 	add	r3,r11,r20
   240b0:	30cd883a 	add	r6,r6,r3
   240b4:	0021883a 	mov	r16,zero
   240b8:	0023883a 	mov	r17,zero
   240bc:	1025883a 	mov	r18,r2
   240c0:	3027883a 	mov	r19,r6
   240c4:	32ff9e2e 	bgeu	r6,r11,23f40 <__muldf3+0x1bc>
   240c8:	00800044 	movi	r2,1
   240cc:	8089883a 	add	r4,r16,r2
   240d0:	240d803a 	cmpltu	r6,r4,r16
   240d4:	344d883a 	add	r6,r6,r17
   240d8:	2021883a 	mov	r16,r4
   240dc:	3023883a 	mov	r17,r6
   240e0:	003f9806 	br	23f44 <__muldf3+0x1c0>
   240e4:	403fe71e 	bne	r8,zero,24084 <__muldf3+0x300>
   240e8:	01004004 	movi	r4,256
   240ec:	4904703a 	and	r2,r9,r4
   240f0:	10c4b03a 	or	r2,r2,r3
   240f4:	103fe31e 	bne	r2,zero,24084 <__muldf3+0x300>
   240f8:	94c4b03a 	or	r2,r18,r19
   240fc:	103fe126 	beq	r2,zero,24084 <__muldf3+0x300>
   24100:	49c5883a 	add	r2,r9,r7
   24104:	1251803a 	cmpltu	r8,r2,r9
   24108:	4291883a 	add	r8,r8,r10
   2410c:	013fc004 	movi	r4,-256
   24110:	1112703a 	and	r9,r2,r4
   24114:	4015883a 	mov	r10,r8
   24118:	003fda06 	br	24084 <__muldf3+0x300>
   2411c:	6813883a 	mov	r9,r13
   24120:	003fce06 	br	2405c <__muldf3+0x2d8>
   24124:	143f7c36 	bltu	r2,r16,23f18 <__muldf3+0x194>
   24128:	003fdd06 	br	240a0 <__muldf3+0x31c>
   2412c:	12bf852e 	bgeu	r2,r10,23f44 <__muldf3+0x1c0>
   24130:	003fe506 	br	240c8 <__muldf3+0x344>
   24134:	00800084 	movi	r2,2
   24138:	20bf351e 	bne	r4,r2,23e10 <__muldf3+0x8c>
   2413c:	010000f4 	movhi	r4,3
   24140:	213f4704 	addi	r4,r4,-740
   24144:	003f3f06 	br	23e44 <__muldf3+0xc0>

00024148 <__divdf3>:
   24148:	deffed04 	addi	sp,sp,-76
   2414c:	dcc01115 	stw	r19,68(sp)
   24150:	dcc00404 	addi	r19,sp,16
   24154:	2011883a 	mov	r8,r4
   24158:	2813883a 	mov	r9,r5
   2415c:	dc000e15 	stw	r16,56(sp)
   24160:	d809883a 	mov	r4,sp
   24164:	980b883a 	mov	r5,r19
   24168:	dc000904 	addi	r16,sp,36
   2416c:	dfc01215 	stw	ra,72(sp)
   24170:	da400115 	stw	r9,4(sp)
   24174:	d9c00315 	stw	r7,12(sp)
   24178:	da000015 	stw	r8,0(sp)
   2417c:	d9800215 	stw	r6,8(sp)
   24180:	dc801015 	stw	r18,64(sp)
   24184:	dc400f15 	stw	r17,60(sp)
   24188:	0024fcc0 	call	24fcc <__unpack_d>
   2418c:	d9000204 	addi	r4,sp,8
   24190:	800b883a 	mov	r5,r16
   24194:	0024fcc0 	call	24fcc <__unpack_d>
   24198:	d9000417 	ldw	r4,16(sp)
   2419c:	00800044 	movi	r2,1
   241a0:	11000b2e 	bgeu	r2,r4,241d0 <__divdf3+0x88>
   241a4:	d9400917 	ldw	r5,36(sp)
   241a8:	1140762e 	bgeu	r2,r5,24384 <__divdf3+0x23c>
   241ac:	d8800517 	ldw	r2,20(sp)
   241b0:	d8c00a17 	ldw	r3,40(sp)
   241b4:	01800104 	movi	r6,4
   241b8:	10c4f03a 	xor	r2,r2,r3
   241bc:	d8800515 	stw	r2,20(sp)
   241c0:	21800226 	beq	r4,r6,241cc <__divdf3+0x84>
   241c4:	00800084 	movi	r2,2
   241c8:	2080141e 	bne	r4,r2,2421c <__divdf3+0xd4>
   241cc:	29000926 	beq	r5,r4,241f4 <__divdf3+0xac>
   241d0:	9809883a 	mov	r4,r19
   241d4:	0024cb80 	call	24cb8 <__pack_d>
   241d8:	dfc01217 	ldw	ra,72(sp)
   241dc:	dcc01117 	ldw	r19,68(sp)
   241e0:	dc801017 	ldw	r18,64(sp)
   241e4:	dc400f17 	ldw	r17,60(sp)
   241e8:	dc000e17 	ldw	r16,56(sp)
   241ec:	dec01304 	addi	sp,sp,76
   241f0:	f800283a 	ret
   241f4:	010000f4 	movhi	r4,3
   241f8:	213f4704 	addi	r4,r4,-740
   241fc:	0024cb80 	call	24cb8 <__pack_d>
   24200:	dfc01217 	ldw	ra,72(sp)
   24204:	dcc01117 	ldw	r19,68(sp)
   24208:	dc801017 	ldw	r18,64(sp)
   2420c:	dc400f17 	ldw	r17,60(sp)
   24210:	dc000e17 	ldw	r16,56(sp)
   24214:	dec01304 	addi	sp,sp,76
   24218:	f800283a 	ret
   2421c:	29805b26 	beq	r5,r6,2438c <__divdf3+0x244>
   24220:	28802d26 	beq	r5,r2,242d8 <__divdf3+0x190>
   24224:	d8c00617 	ldw	r3,24(sp)
   24228:	d8800b17 	ldw	r2,44(sp)
   2422c:	d9c00817 	ldw	r7,32(sp)
   24230:	dc400d17 	ldw	r17,52(sp)
   24234:	188bc83a 	sub	r5,r3,r2
   24238:	d9800717 	ldw	r6,28(sp)
   2423c:	dc000c17 	ldw	r16,48(sp)
   24240:	d9400615 	stw	r5,24(sp)
   24244:	3c403836 	bltu	r7,r17,24328 <__divdf3+0x1e0>
   24248:	89c03626 	beq	r17,r7,24324 <__divdf3+0x1dc>
   2424c:	0015883a 	mov	r10,zero
   24250:	001d883a 	mov	r14,zero
   24254:	02c40034 	movhi	r11,4096
   24258:	001f883a 	mov	r15,zero
   2425c:	003f883a 	mov	ra,zero
   24260:	04800f44 	movi	r18,61
   24264:	00000f06 	br	242a4 <__divdf3+0x15c>
   24268:	601d883a 	mov	r14,r12
   2426c:	681f883a 	mov	r15,r13
   24270:	400d883a 	mov	r6,r8
   24274:	100f883a 	mov	r7,r2
   24278:	3191883a 	add	r8,r6,r6
   2427c:	5808d07a 	srli	r4,r11,1
   24280:	4185803a 	cmpltu	r2,r8,r6
   24284:	39d3883a 	add	r9,r7,r7
   24288:	28c6b03a 	or	r3,r5,r3
   2428c:	1245883a 	add	r2,r2,r9
   24290:	1815883a 	mov	r10,r3
   24294:	2017883a 	mov	r11,r4
   24298:	400d883a 	mov	r6,r8
   2429c:	100f883a 	mov	r7,r2
   242a0:	fc801726 	beq	ra,r18,24300 <__divdf3+0x1b8>
   242a4:	580a97fa 	slli	r5,r11,31
   242a8:	5006d07a 	srli	r3,r10,1
   242ac:	ffc00044 	addi	ra,ra,1
   242b0:	3c7ff136 	bltu	r7,r17,24278 <__divdf3+0x130>
   242b4:	3411c83a 	sub	r8,r6,r16
   242b8:	3205803a 	cmpltu	r2,r6,r8
   242bc:	3c53c83a 	sub	r9,r7,r17
   242c0:	7298b03a 	or	r12,r14,r10
   242c4:	7adab03a 	or	r13,r15,r11
   242c8:	4885c83a 	sub	r2,r9,r2
   242cc:	89ffe61e 	bne	r17,r7,24268 <__divdf3+0x120>
   242d0:	343fe936 	bltu	r6,r16,24278 <__divdf3+0x130>
   242d4:	003fe406 	br	24268 <__divdf3+0x120>
   242d8:	9809883a 	mov	r4,r19
   242dc:	d9800415 	stw	r6,16(sp)
   242e0:	0024cb80 	call	24cb8 <__pack_d>
   242e4:	dfc01217 	ldw	ra,72(sp)
   242e8:	dcc01117 	ldw	r19,68(sp)
   242ec:	dc801017 	ldw	r18,64(sp)
   242f0:	dc400f17 	ldw	r17,60(sp)
   242f4:	dc000e17 	ldw	r16,56(sp)
   242f8:	dec01304 	addi	sp,sp,76
   242fc:	f800283a 	ret
   24300:	00803fc4 	movi	r2,255
   24304:	7090703a 	and	r8,r14,r2
   24308:	00802004 	movi	r2,128
   2430c:	0007883a 	mov	r3,zero
   24310:	0013883a 	mov	r9,zero
   24314:	40800d26 	beq	r8,r2,2434c <__divdf3+0x204>
   24318:	dbc00815 	stw	r15,32(sp)
   2431c:	db800715 	stw	r14,28(sp)
   24320:	003fab06 	br	241d0 <__divdf3+0x88>
   24324:	343fc92e 	bgeu	r6,r16,2424c <__divdf3+0x104>
   24328:	3185883a 	add	r2,r6,r6
   2432c:	1189803a 	cmpltu	r4,r2,r6
   24330:	39c7883a 	add	r3,r7,r7
   24334:	20c9883a 	add	r4,r4,r3
   24338:	297fffc4 	addi	r5,r5,-1
   2433c:	100d883a 	mov	r6,r2
   24340:	200f883a 	mov	r7,r4
   24344:	d9400615 	stw	r5,24(sp)
   24348:	003fc006 	br	2424c <__divdf3+0x104>
   2434c:	483ff21e 	bne	r9,zero,24318 <__divdf3+0x1d0>
   24350:	01004004 	movi	r4,256
   24354:	7104703a 	and	r2,r14,r4
   24358:	10c4b03a 	or	r2,r2,r3
   2435c:	103fee1e 	bne	r2,zero,24318 <__divdf3+0x1d0>
   24360:	31c4b03a 	or	r2,r6,r7
   24364:	103fec26 	beq	r2,zero,24318 <__divdf3+0x1d0>
   24368:	7205883a 	add	r2,r14,r8
   2436c:	1391803a 	cmpltu	r8,r2,r14
   24370:	43d1883a 	add	r8,r8,r15
   24374:	013fc004 	movi	r4,-256
   24378:	111c703a 	and	r14,r2,r4
   2437c:	401f883a 	mov	r15,r8
   24380:	003fe506 	br	24318 <__divdf3+0x1d0>
   24384:	8009883a 	mov	r4,r16
   24388:	003f9206 	br	241d4 <__divdf3+0x8c>
   2438c:	9809883a 	mov	r4,r19
   24390:	d8000715 	stw	zero,28(sp)
   24394:	d8000815 	stw	zero,32(sp)
   24398:	d8000615 	stw	zero,24(sp)
   2439c:	003f8d06 	br	241d4 <__divdf3+0x8c>

000243a0 <__eqdf2>:
   243a0:	deffef04 	addi	sp,sp,-68
   243a4:	dc400f15 	stw	r17,60(sp)
   243a8:	dc400404 	addi	r17,sp,16
   243ac:	2005883a 	mov	r2,r4
   243b0:	2807883a 	mov	r3,r5
   243b4:	dc000e15 	stw	r16,56(sp)
   243b8:	d809883a 	mov	r4,sp
   243bc:	880b883a 	mov	r5,r17
   243c0:	dc000904 	addi	r16,sp,36
   243c4:	d8c00115 	stw	r3,4(sp)
   243c8:	d8800015 	stw	r2,0(sp)
   243cc:	d9800215 	stw	r6,8(sp)
   243d0:	dfc01015 	stw	ra,64(sp)
   243d4:	d9c00315 	stw	r7,12(sp)
   243d8:	0024fcc0 	call	24fcc <__unpack_d>
   243dc:	d9000204 	addi	r4,sp,8
   243e0:	800b883a 	mov	r5,r16
   243e4:	0024fcc0 	call	24fcc <__unpack_d>
   243e8:	d8800417 	ldw	r2,16(sp)
   243ec:	00c00044 	movi	r3,1
   243f0:	180d883a 	mov	r6,r3
   243f4:	1880062e 	bgeu	r3,r2,24410 <__eqdf2+0x70>
   243f8:	d8800917 	ldw	r2,36(sp)
   243fc:	8809883a 	mov	r4,r17
   24400:	800b883a 	mov	r5,r16
   24404:	1880022e 	bgeu	r3,r2,24410 <__eqdf2+0x70>
   24408:	00251040 	call	25104 <__fpcmp_parts_d>
   2440c:	100d883a 	mov	r6,r2
   24410:	3005883a 	mov	r2,r6
   24414:	dfc01017 	ldw	ra,64(sp)
   24418:	dc400f17 	ldw	r17,60(sp)
   2441c:	dc000e17 	ldw	r16,56(sp)
   24420:	dec01104 	addi	sp,sp,68
   24424:	f800283a 	ret

00024428 <__nedf2>:
   24428:	deffef04 	addi	sp,sp,-68
   2442c:	dc400f15 	stw	r17,60(sp)
   24430:	dc400404 	addi	r17,sp,16
   24434:	2005883a 	mov	r2,r4
   24438:	2807883a 	mov	r3,r5
   2443c:	dc000e15 	stw	r16,56(sp)
   24440:	d809883a 	mov	r4,sp
   24444:	880b883a 	mov	r5,r17
   24448:	dc000904 	addi	r16,sp,36
   2444c:	d8c00115 	stw	r3,4(sp)
   24450:	d8800015 	stw	r2,0(sp)
   24454:	d9800215 	stw	r6,8(sp)
   24458:	dfc01015 	stw	ra,64(sp)
   2445c:	d9c00315 	stw	r7,12(sp)
   24460:	0024fcc0 	call	24fcc <__unpack_d>
   24464:	d9000204 	addi	r4,sp,8
   24468:	800b883a 	mov	r5,r16
   2446c:	0024fcc0 	call	24fcc <__unpack_d>
   24470:	d8800417 	ldw	r2,16(sp)
   24474:	00c00044 	movi	r3,1
   24478:	180d883a 	mov	r6,r3
   2447c:	1880062e 	bgeu	r3,r2,24498 <__nedf2+0x70>
   24480:	d8800917 	ldw	r2,36(sp)
   24484:	8809883a 	mov	r4,r17
   24488:	800b883a 	mov	r5,r16
   2448c:	1880022e 	bgeu	r3,r2,24498 <__nedf2+0x70>
   24490:	00251040 	call	25104 <__fpcmp_parts_d>
   24494:	100d883a 	mov	r6,r2
   24498:	3005883a 	mov	r2,r6
   2449c:	dfc01017 	ldw	ra,64(sp)
   244a0:	dc400f17 	ldw	r17,60(sp)
   244a4:	dc000e17 	ldw	r16,56(sp)
   244a8:	dec01104 	addi	sp,sp,68
   244ac:	f800283a 	ret

000244b0 <__gtdf2>:
   244b0:	deffef04 	addi	sp,sp,-68
   244b4:	dc400f15 	stw	r17,60(sp)
   244b8:	dc400404 	addi	r17,sp,16
   244bc:	2005883a 	mov	r2,r4
   244c0:	2807883a 	mov	r3,r5
   244c4:	dc000e15 	stw	r16,56(sp)
   244c8:	d809883a 	mov	r4,sp
   244cc:	880b883a 	mov	r5,r17
   244d0:	dc000904 	addi	r16,sp,36
   244d4:	d8c00115 	stw	r3,4(sp)
   244d8:	d8800015 	stw	r2,0(sp)
   244dc:	d9800215 	stw	r6,8(sp)
   244e0:	dfc01015 	stw	ra,64(sp)
   244e4:	d9c00315 	stw	r7,12(sp)
   244e8:	0024fcc0 	call	24fcc <__unpack_d>
   244ec:	d9000204 	addi	r4,sp,8
   244f0:	800b883a 	mov	r5,r16
   244f4:	0024fcc0 	call	24fcc <__unpack_d>
   244f8:	d8800417 	ldw	r2,16(sp)
   244fc:	00c00044 	movi	r3,1
   24500:	01bfffc4 	movi	r6,-1
   24504:	1880062e 	bgeu	r3,r2,24520 <__gtdf2+0x70>
   24508:	d8800917 	ldw	r2,36(sp)
   2450c:	8809883a 	mov	r4,r17
   24510:	800b883a 	mov	r5,r16
   24514:	1880022e 	bgeu	r3,r2,24520 <__gtdf2+0x70>
   24518:	00251040 	call	25104 <__fpcmp_parts_d>
   2451c:	100d883a 	mov	r6,r2
   24520:	3005883a 	mov	r2,r6
   24524:	dfc01017 	ldw	ra,64(sp)
   24528:	dc400f17 	ldw	r17,60(sp)
   2452c:	dc000e17 	ldw	r16,56(sp)
   24530:	dec01104 	addi	sp,sp,68
   24534:	f800283a 	ret

00024538 <__gedf2>:
   24538:	deffef04 	addi	sp,sp,-68
   2453c:	dc400f15 	stw	r17,60(sp)
   24540:	dc400404 	addi	r17,sp,16
   24544:	2005883a 	mov	r2,r4
   24548:	2807883a 	mov	r3,r5
   2454c:	dc000e15 	stw	r16,56(sp)
   24550:	d809883a 	mov	r4,sp
   24554:	880b883a 	mov	r5,r17
   24558:	dc000904 	addi	r16,sp,36
   2455c:	d8c00115 	stw	r3,4(sp)
   24560:	d8800015 	stw	r2,0(sp)
   24564:	d9800215 	stw	r6,8(sp)
   24568:	dfc01015 	stw	ra,64(sp)
   2456c:	d9c00315 	stw	r7,12(sp)
   24570:	0024fcc0 	call	24fcc <__unpack_d>
   24574:	d9000204 	addi	r4,sp,8
   24578:	800b883a 	mov	r5,r16
   2457c:	0024fcc0 	call	24fcc <__unpack_d>
   24580:	d8800417 	ldw	r2,16(sp)
   24584:	00c00044 	movi	r3,1
   24588:	01bfffc4 	movi	r6,-1
   2458c:	1880062e 	bgeu	r3,r2,245a8 <__gedf2+0x70>
   24590:	d8800917 	ldw	r2,36(sp)
   24594:	8809883a 	mov	r4,r17
   24598:	800b883a 	mov	r5,r16
   2459c:	1880022e 	bgeu	r3,r2,245a8 <__gedf2+0x70>
   245a0:	00251040 	call	25104 <__fpcmp_parts_d>
   245a4:	100d883a 	mov	r6,r2
   245a8:	3005883a 	mov	r2,r6
   245ac:	dfc01017 	ldw	ra,64(sp)
   245b0:	dc400f17 	ldw	r17,60(sp)
   245b4:	dc000e17 	ldw	r16,56(sp)
   245b8:	dec01104 	addi	sp,sp,68
   245bc:	f800283a 	ret

000245c0 <__ltdf2>:
   245c0:	deffef04 	addi	sp,sp,-68
   245c4:	dc400f15 	stw	r17,60(sp)
   245c8:	dc400404 	addi	r17,sp,16
   245cc:	2005883a 	mov	r2,r4
   245d0:	2807883a 	mov	r3,r5
   245d4:	dc000e15 	stw	r16,56(sp)
   245d8:	d809883a 	mov	r4,sp
   245dc:	880b883a 	mov	r5,r17
   245e0:	dc000904 	addi	r16,sp,36
   245e4:	d8c00115 	stw	r3,4(sp)
   245e8:	d8800015 	stw	r2,0(sp)
   245ec:	d9800215 	stw	r6,8(sp)
   245f0:	dfc01015 	stw	ra,64(sp)
   245f4:	d9c00315 	stw	r7,12(sp)
   245f8:	0024fcc0 	call	24fcc <__unpack_d>
   245fc:	d9000204 	addi	r4,sp,8
   24600:	800b883a 	mov	r5,r16
   24604:	0024fcc0 	call	24fcc <__unpack_d>
   24608:	d8800417 	ldw	r2,16(sp)
   2460c:	00c00044 	movi	r3,1
   24610:	180d883a 	mov	r6,r3
   24614:	1880062e 	bgeu	r3,r2,24630 <__ltdf2+0x70>
   24618:	d8800917 	ldw	r2,36(sp)
   2461c:	8809883a 	mov	r4,r17
   24620:	800b883a 	mov	r5,r16
   24624:	1880022e 	bgeu	r3,r2,24630 <__ltdf2+0x70>
   24628:	00251040 	call	25104 <__fpcmp_parts_d>
   2462c:	100d883a 	mov	r6,r2
   24630:	3005883a 	mov	r2,r6
   24634:	dfc01017 	ldw	ra,64(sp)
   24638:	dc400f17 	ldw	r17,60(sp)
   2463c:	dc000e17 	ldw	r16,56(sp)
   24640:	dec01104 	addi	sp,sp,68
   24644:	f800283a 	ret

00024648 <__ledf2>:
   24648:	deffef04 	addi	sp,sp,-68
   2464c:	dc400f15 	stw	r17,60(sp)
   24650:	dc400404 	addi	r17,sp,16
   24654:	2005883a 	mov	r2,r4
   24658:	2807883a 	mov	r3,r5
   2465c:	dc000e15 	stw	r16,56(sp)
   24660:	d809883a 	mov	r4,sp
   24664:	880b883a 	mov	r5,r17
   24668:	dc000904 	addi	r16,sp,36
   2466c:	d8c00115 	stw	r3,4(sp)
   24670:	d8800015 	stw	r2,0(sp)
   24674:	d9800215 	stw	r6,8(sp)
   24678:	dfc01015 	stw	ra,64(sp)
   2467c:	d9c00315 	stw	r7,12(sp)
   24680:	0024fcc0 	call	24fcc <__unpack_d>
   24684:	d9000204 	addi	r4,sp,8
   24688:	800b883a 	mov	r5,r16
   2468c:	0024fcc0 	call	24fcc <__unpack_d>
   24690:	d8800417 	ldw	r2,16(sp)
   24694:	00c00044 	movi	r3,1
   24698:	180d883a 	mov	r6,r3
   2469c:	1880062e 	bgeu	r3,r2,246b8 <__ledf2+0x70>
   246a0:	d8800917 	ldw	r2,36(sp)
   246a4:	8809883a 	mov	r4,r17
   246a8:	800b883a 	mov	r5,r16
   246ac:	1880022e 	bgeu	r3,r2,246b8 <__ledf2+0x70>
   246b0:	00251040 	call	25104 <__fpcmp_parts_d>
   246b4:	100d883a 	mov	r6,r2
   246b8:	3005883a 	mov	r2,r6
   246bc:	dfc01017 	ldw	ra,64(sp)
   246c0:	dc400f17 	ldw	r17,60(sp)
   246c4:	dc000e17 	ldw	r16,56(sp)
   246c8:	dec01104 	addi	sp,sp,68
   246cc:	f800283a 	ret

000246d0 <__floatsidf>:
   246d0:	2006d7fa 	srli	r3,r4,31
   246d4:	defff604 	addi	sp,sp,-40
   246d8:	008000c4 	movi	r2,3
   246dc:	dfc00915 	stw	ra,36(sp)
   246e0:	dcc00815 	stw	r19,32(sp)
   246e4:	dc800715 	stw	r18,28(sp)
   246e8:	dc400615 	stw	r17,24(sp)
   246ec:	dc000515 	stw	r16,20(sp)
   246f0:	d8800015 	stw	r2,0(sp)
   246f4:	d8c00115 	stw	r3,4(sp)
   246f8:	20000f1e 	bne	r4,zero,24738 <__floatsidf+0x68>
   246fc:	00800084 	movi	r2,2
   24700:	d8800015 	stw	r2,0(sp)
   24704:	d809883a 	mov	r4,sp
   24708:	0024cb80 	call	24cb8 <__pack_d>
   2470c:	1009883a 	mov	r4,r2
   24710:	180b883a 	mov	r5,r3
   24714:	2005883a 	mov	r2,r4
   24718:	2807883a 	mov	r3,r5
   2471c:	dfc00917 	ldw	ra,36(sp)
   24720:	dcc00817 	ldw	r19,32(sp)
   24724:	dc800717 	ldw	r18,28(sp)
   24728:	dc400617 	ldw	r17,24(sp)
   2472c:	dc000517 	ldw	r16,20(sp)
   24730:	dec00a04 	addi	sp,sp,40
   24734:	f800283a 	ret
   24738:	00800f04 	movi	r2,60
   2473c:	1807003a 	cmpeq	r3,r3,zero
   24740:	d8800215 	stw	r2,8(sp)
   24744:	18001126 	beq	r3,zero,2478c <__floatsidf+0xbc>
   24748:	0027883a 	mov	r19,zero
   2474c:	2025883a 	mov	r18,r4
   24750:	d9000315 	stw	r4,12(sp)
   24754:	dcc00415 	stw	r19,16(sp)
   24758:	00249e40 	call	249e4 <__clzsi2>
   2475c:	11000744 	addi	r4,r2,29
   24760:	013fe80e 	bge	zero,r4,24704 <__floatsidf+0x34>
   24764:	10bfff44 	addi	r2,r2,-3
   24768:	10000c16 	blt	r2,zero,2479c <__floatsidf+0xcc>
   2476c:	90a2983a 	sll	r17,r18,r2
   24770:	0021883a 	mov	r16,zero
   24774:	d8800217 	ldw	r2,8(sp)
   24778:	dc400415 	stw	r17,16(sp)
   2477c:	dc000315 	stw	r16,12(sp)
   24780:	1105c83a 	sub	r2,r2,r4
   24784:	d8800215 	stw	r2,8(sp)
   24788:	003fde06 	br	24704 <__floatsidf+0x34>
   2478c:	00a00034 	movhi	r2,32768
   24790:	20800a26 	beq	r4,r2,247bc <__floatsidf+0xec>
   24794:	0109c83a 	sub	r4,zero,r4
   24798:	003feb06 	br	24748 <__floatsidf+0x78>
   2479c:	9006d07a 	srli	r3,r18,1
   247a0:	008007c4 	movi	r2,31
   247a4:	1105c83a 	sub	r2,r2,r4
   247a8:	1886d83a 	srl	r3,r3,r2
   247ac:	9922983a 	sll	r17,r19,r4
   247b0:	9120983a 	sll	r16,r18,r4
   247b4:	1c62b03a 	or	r17,r3,r17
   247b8:	003fee06 	br	24774 <__floatsidf+0xa4>
   247bc:	0009883a 	mov	r4,zero
   247c0:	01707834 	movhi	r5,49632
   247c4:	003fd306 	br	24714 <__floatsidf+0x44>

000247c8 <__fixdfsi>:
   247c8:	defff804 	addi	sp,sp,-32
   247cc:	2005883a 	mov	r2,r4
   247d0:	2807883a 	mov	r3,r5
   247d4:	d809883a 	mov	r4,sp
   247d8:	d9400204 	addi	r5,sp,8
   247dc:	d8c00115 	stw	r3,4(sp)
   247e0:	d8800015 	stw	r2,0(sp)
   247e4:	dfc00715 	stw	ra,28(sp)
   247e8:	0024fcc0 	call	24fcc <__unpack_d>
   247ec:	d8c00217 	ldw	r3,8(sp)
   247f0:	00800084 	movi	r2,2
   247f4:	1880051e 	bne	r3,r2,2480c <__fixdfsi+0x44>
   247f8:	0007883a 	mov	r3,zero
   247fc:	1805883a 	mov	r2,r3
   24800:	dfc00717 	ldw	ra,28(sp)
   24804:	dec00804 	addi	sp,sp,32
   24808:	f800283a 	ret
   2480c:	00800044 	movi	r2,1
   24810:	10fff92e 	bgeu	r2,r3,247f8 <__fixdfsi+0x30>
   24814:	00800104 	movi	r2,4
   24818:	18800426 	beq	r3,r2,2482c <__fixdfsi+0x64>
   2481c:	d8c00417 	ldw	r3,16(sp)
   24820:	183ff516 	blt	r3,zero,247f8 <__fixdfsi+0x30>
   24824:	00800784 	movi	r2,30
   24828:	10c0080e 	bge	r2,r3,2484c <__fixdfsi+0x84>
   2482c:	d8800317 	ldw	r2,12(sp)
   24830:	1000121e 	bne	r2,zero,2487c <__fixdfsi+0xb4>
   24834:	00e00034 	movhi	r3,32768
   24838:	18ffffc4 	addi	r3,r3,-1
   2483c:	1805883a 	mov	r2,r3
   24840:	dfc00717 	ldw	ra,28(sp)
   24844:	dec00804 	addi	sp,sp,32
   24848:	f800283a 	ret
   2484c:	00800f04 	movi	r2,60
   24850:	10d1c83a 	sub	r8,r2,r3
   24854:	40bff804 	addi	r2,r8,-32
   24858:	d9800517 	ldw	r6,20(sp)
   2485c:	d9c00617 	ldw	r7,24(sp)
   24860:	10000816 	blt	r2,zero,24884 <__fixdfsi+0xbc>
   24864:	3888d83a 	srl	r4,r7,r2
   24868:	d8800317 	ldw	r2,12(sp)
   2486c:	2007883a 	mov	r3,r4
   24870:	103fe226 	beq	r2,zero,247fc <__fixdfsi+0x34>
   24874:	0107c83a 	sub	r3,zero,r4
   24878:	003fe006 	br	247fc <__fixdfsi+0x34>
   2487c:	00e00034 	movhi	r3,32768
   24880:	003fde06 	br	247fc <__fixdfsi+0x34>
   24884:	39c7883a 	add	r3,r7,r7
   24888:	008007c4 	movi	r2,31
   2488c:	1205c83a 	sub	r2,r2,r8
   24890:	1886983a 	sll	r3,r3,r2
   24894:	3208d83a 	srl	r4,r6,r8
   24898:	1908b03a 	or	r4,r3,r4
   2489c:	003ff206 	br	24868 <__fixdfsi+0xa0>

000248a0 <__make_dp>:
   248a0:	defff904 	addi	sp,sp,-28
   248a4:	d8c00717 	ldw	r3,28(sp)
   248a8:	d9000015 	stw	r4,0(sp)
   248ac:	d809883a 	mov	r4,sp
   248b0:	dfc00515 	stw	ra,20(sp)
   248b4:	d9c00615 	stw	r7,24(sp)
   248b8:	d9400115 	stw	r5,4(sp)
   248bc:	d9800215 	stw	r6,8(sp)
   248c0:	d8c00415 	stw	r3,16(sp)
   248c4:	d9c00315 	stw	r7,12(sp)
   248c8:	0024cb80 	call	24cb8 <__pack_d>
   248cc:	dfc00517 	ldw	ra,20(sp)
   248d0:	dec00704 	addi	sp,sp,28
   248d4:	f800283a 	ret

000248d8 <__truncdfsf2>:
   248d8:	defff804 	addi	sp,sp,-32
   248dc:	2005883a 	mov	r2,r4
   248e0:	2807883a 	mov	r3,r5
   248e4:	d809883a 	mov	r4,sp
   248e8:	d9400204 	addi	r5,sp,8
   248ec:	d8c00115 	stw	r3,4(sp)
   248f0:	d8800015 	stw	r2,0(sp)
   248f4:	dfc00715 	stw	ra,28(sp)
   248f8:	0024fcc0 	call	24fcc <__unpack_d>
   248fc:	d9c00517 	ldw	r7,20(sp)
   24900:	da000617 	ldw	r8,24(sp)
   24904:	02d00034 	movhi	r11,16384
   24908:	5affffc4 	addi	r11,r11,-1
   2490c:	3812d7ba 	srli	r9,r7,30
   24910:	401a90ba 	slli	r13,r8,2
   24914:	3ac4703a 	and	r2,r7,r11
   24918:	0007883a 	mov	r3,zero
   2491c:	6a52b03a 	or	r9,r13,r9
   24920:	10c4b03a 	or	r2,r2,r3
   24924:	d9000217 	ldw	r4,8(sp)
   24928:	d9400317 	ldw	r5,12(sp)
   2492c:	d9800417 	ldw	r6,16(sp)
   24930:	480f883a 	mov	r7,r9
   24934:	10000126 	beq	r2,zero,2493c <__truncdfsf2+0x64>
   24938:	49c00054 	ori	r7,r9,1
   2493c:	0024c8c0 	call	24c8c <__make_fp>
   24940:	dfc00717 	ldw	ra,28(sp)
   24944:	dec00804 	addi	sp,sp,32
   24948:	f800283a 	ret

0002494c <__muldi3>:
   2494c:	2011883a 	mov	r8,r4
   24950:	427fffcc 	andi	r9,r8,65535
   24954:	4018d43a 	srli	r12,r8,16
   24958:	32bfffcc 	andi	r10,r6,65535
   2495c:	3016d43a 	srli	r11,r6,16
   24960:	4a85383a 	mul	r2,r9,r10
   24964:	6295383a 	mul	r10,r12,r10
   24968:	4ad3383a 	mul	r9,r9,r11
   2496c:	113fffcc 	andi	r4,r2,65535
   24970:	1004d43a 	srli	r2,r2,16
   24974:	4a93883a 	add	r9,r9,r10
   24978:	3807883a 	mov	r3,r7
   2497c:	1245883a 	add	r2,r2,r9
   24980:	280f883a 	mov	r7,r5
   24984:	180b883a 	mov	r5,r3
   24988:	1006943a 	slli	r3,r2,16
   2498c:	defffd04 	addi	sp,sp,-12
   24990:	dc800215 	stw	r18,8(sp)
   24994:	1907883a 	add	r3,r3,r4
   24998:	dc400115 	stw	r17,4(sp)
   2499c:	dc000015 	stw	r16,0(sp)
   249a0:	4165383a 	mul	r18,r8,r5
   249a4:	31e3383a 	mul	r17,r6,r7
   249a8:	1012d43a 	srli	r9,r2,16
   249ac:	62d9383a 	mul	r12,r12,r11
   249b0:	181f883a 	mov	r15,r3
   249b4:	1280022e 	bgeu	r2,r10,249c0 <__muldi3+0x74>
   249b8:	00800074 	movhi	r2,1
   249bc:	6099883a 	add	r12,r12,r2
   249c0:	624d883a 	add	r6,r12,r9
   249c4:	9187883a 	add	r3,r18,r6
   249c8:	88c7883a 	add	r3,r17,r3
   249cc:	7805883a 	mov	r2,r15
   249d0:	dc800217 	ldw	r18,8(sp)
   249d4:	dc400117 	ldw	r17,4(sp)
   249d8:	dc000017 	ldw	r16,0(sp)
   249dc:	dec00304 	addi	sp,sp,12
   249e0:	f800283a 	ret

000249e4 <__clzsi2>:
   249e4:	00bfffd4 	movui	r2,65535
   249e8:	11000e36 	bltu	r2,r4,24a24 <__clzsi2+0x40>
   249ec:	00803fc4 	movi	r2,255
   249f0:	01400204 	movi	r5,8
   249f4:	0007883a 	mov	r3,zero
   249f8:	11001036 	bltu	r2,r4,24a3c <__clzsi2+0x58>
   249fc:	000b883a 	mov	r5,zero
   24a00:	20c6d83a 	srl	r3,r4,r3
   24a04:	008000f4 	movhi	r2,3
   24a08:	10bf4c04 	addi	r2,r2,-720
   24a0c:	1887883a 	add	r3,r3,r2
   24a10:	18800003 	ldbu	r2,0(r3)
   24a14:	00c00804 	movi	r3,32
   24a18:	2885883a 	add	r2,r5,r2
   24a1c:	1885c83a 	sub	r2,r3,r2
   24a20:	f800283a 	ret
   24a24:	01400404 	movi	r5,16
   24a28:	00804034 	movhi	r2,256
   24a2c:	10bfffc4 	addi	r2,r2,-1
   24a30:	2807883a 	mov	r3,r5
   24a34:	113ff22e 	bgeu	r2,r4,24a00 <__clzsi2+0x1c>
   24a38:	01400604 	movi	r5,24
   24a3c:	2807883a 	mov	r3,r5
   24a40:	20c6d83a 	srl	r3,r4,r3
   24a44:	008000f4 	movhi	r2,3
   24a48:	10bf4c04 	addi	r2,r2,-720
   24a4c:	1887883a 	add	r3,r3,r2
   24a50:	18800003 	ldbu	r2,0(r3)
   24a54:	00c00804 	movi	r3,32
   24a58:	2885883a 	add	r2,r5,r2
   24a5c:	1885c83a 	sub	r2,r3,r2
   24a60:	f800283a 	ret

00024a64 <__pack_f>:
   24a64:	20c00017 	ldw	r3,0(r4)
   24a68:	01c00044 	movi	r7,1
   24a6c:	21800317 	ldw	r6,12(r4)
   24a70:	21400117 	ldw	r5,4(r4)
   24a74:	38c02d2e 	bgeu	r7,r3,24b2c <__pack_f+0xc8>
   24a78:	00800104 	movi	r2,4
   24a7c:	18802826 	beq	r3,r2,24b20 <__pack_f+0xbc>
   24a80:	00800084 	movi	r2,2
   24a84:	18800126 	beq	r3,r2,24a8c <__pack_f+0x28>
   24a88:	3000101e 	bne	r6,zero,24acc <__pack_f+0x68>
   24a8c:	000d883a 	mov	r6,zero
   24a90:	0007883a 	mov	r3,zero
   24a94:	19003fcc 	andi	r4,r3,255
   24a98:	200895fa 	slli	r4,r4,23
   24a9c:	00c02034 	movhi	r3,128
   24aa0:	18ffffc4 	addi	r3,r3,-1
   24aa4:	30c6703a 	and	r3,r6,r3
   24aa8:	10a0002c 	andhi	r2,r2,32768
   24aac:	10c4b03a 	or	r2,r2,r3
   24ab0:	280a97fa 	slli	r5,r5,31
   24ab4:	1104b03a 	or	r2,r2,r4
   24ab8:	00e00034 	movhi	r3,32768
   24abc:	18ffffc4 	addi	r3,r3,-1
   24ac0:	10c4703a 	and	r2,r2,r3
   24ac4:	1144b03a 	or	r2,r2,r5
   24ac8:	f800283a 	ret
   24acc:	21000217 	ldw	r4,8(r4)
   24ad0:	00bfe084 	movi	r2,-126
   24ad4:	20801b16 	blt	r4,r2,24b44 <__pack_f+0xe0>
   24ad8:	00801fc4 	movi	r2,127
   24adc:	11001016 	blt	r2,r4,24b20 <__pack_f+0xbc>
   24ae0:	308e703a 	and	r7,r6,r2
   24ae4:	2087883a 	add	r3,r4,r2
   24ae8:	00801004 	movi	r2,64
   24aec:	38800526 	beq	r7,r2,24b04 <__pack_f+0xa0>
   24af0:	31800fc4 	addi	r6,r6,63
   24af4:	30000716 	blt	r6,zero,24b14 <__pack_f+0xb0>
   24af8:	300490ba 	slli	r2,r6,2
   24afc:	100cd27a 	srli	r6,r2,9
   24b00:	003fe406 	br	24a94 <__pack_f+0x30>
   24b04:	3080200c 	andi	r2,r6,128
   24b08:	103ffa26 	beq	r2,zero,24af4 <__pack_f+0x90>
   24b0c:	31cd883a 	add	r6,r6,r7
   24b10:	003ff806 	br	24af4 <__pack_f+0x90>
   24b14:	300cd07a 	srli	r6,r6,1
   24b18:	18c00044 	addi	r3,r3,1
   24b1c:	003ff606 	br	24af8 <__pack_f+0x94>
   24b20:	000d883a 	mov	r6,zero
   24b24:	00ffffc4 	movi	r3,-1
   24b28:	003fda06 	br	24a94 <__pack_f+0x30>
   24b2c:	31800434 	orhi	r6,r6,16
   24b30:	00802034 	movhi	r2,128
   24b34:	10bfffc4 	addi	r2,r2,-1
   24b38:	308c703a 	and	r6,r6,r2
   24b3c:	00ffffc4 	movi	r3,-1
   24b40:	003fd406 	br	24a94 <__pack_f+0x30>
   24b44:	1109c83a 	sub	r4,r2,r4
   24b48:	00800644 	movi	r2,25
   24b4c:	11001216 	blt	r2,r4,24b98 <__pack_f+0x134>
   24b50:	3904983a 	sll	r2,r7,r4
   24b54:	3106d83a 	srl	r3,r6,r4
   24b58:	10bfffc4 	addi	r2,r2,-1
   24b5c:	3084703a 	and	r2,r6,r2
   24b60:	1004c03a 	cmpne	r2,r2,zero
   24b64:	1886b03a 	or	r3,r3,r2
   24b68:	19001fcc 	andi	r4,r3,127
   24b6c:	00801004 	movi	r2,64
   24b70:	20800c26 	beq	r4,r2,24ba4 <__pack_f+0x140>
   24b74:	18c00fc4 	addi	r3,r3,63
   24b78:	00900034 	movhi	r2,16384
   24b7c:	10bfffc4 	addi	r2,r2,-1
   24b80:	180cd1fa 	srli	r6,r3,7
   24b84:	10c7803a 	cmpltu	r3,r2,r3
   24b88:	00802034 	movhi	r2,128
   24b8c:	10bfffc4 	addi	r2,r2,-1
   24b90:	308c703a 	and	r6,r6,r2
   24b94:	003fbf06 	br	24a94 <__pack_f+0x30>
   24b98:	0007883a 	mov	r3,zero
   24b9c:	000d883a 	mov	r6,zero
   24ba0:	003ff906 	br	24b88 <__pack_f+0x124>
   24ba4:	1880200c 	andi	r2,r3,128
   24ba8:	10000126 	beq	r2,zero,24bb0 <__pack_f+0x14c>
   24bac:	1907883a 	add	r3,r3,r4
   24bb0:	180cd1fa 	srli	r6,r3,7
   24bb4:	00900034 	movhi	r2,16384
   24bb8:	10bfffc4 	addi	r2,r2,-1
   24bbc:	10c7803a 	cmpltu	r3,r2,r3
   24bc0:	003ff106 	br	24b88 <__pack_f+0x124>

00024bc4 <__unpack_f>:
   24bc4:	21800017 	ldw	r6,0(r4)
   24bc8:	00c02034 	movhi	r3,128
   24bcc:	18ffffc4 	addi	r3,r3,-1
   24bd0:	3004d5fa 	srli	r2,r6,23
   24bd4:	3008d7fa 	srli	r4,r6,31
   24bd8:	30ce703a 	and	r7,r6,r3
   24bdc:	10c03fcc 	andi	r3,r2,255
   24be0:	29000115 	stw	r4,4(r5)
   24be4:	1800131e 	bne	r3,zero,24c34 <__unpack_f+0x70>
   24be8:	38000f26 	beq	r7,zero,24c28 <__unpack_f+0x64>
   24bec:	380691fa 	slli	r3,r7,7
   24bf0:	01bfe084 	movi	r6,-126
   24bf4:	008000c4 	movi	r2,3
   24bf8:	01100034 	movhi	r4,16384
   24bfc:	213fffc4 	addi	r4,r4,-1
   24c00:	28800015 	stw	r2,0(r5)
   24c04:	29800215 	stw	r6,8(r5)
   24c08:	20c00536 	bltu	r4,r3,24c20 <__unpack_f+0x5c>
   24c0c:	3005883a 	mov	r2,r6
   24c10:	18c7883a 	add	r3,r3,r3
   24c14:	10bfffc4 	addi	r2,r2,-1
   24c18:	20fffd2e 	bgeu	r4,r3,24c10 <__unpack_f+0x4c>
   24c1c:	28800215 	stw	r2,8(r5)
   24c20:	28c00315 	stw	r3,12(r5)
   24c24:	f800283a 	ret
   24c28:	00800084 	movi	r2,2
   24c2c:	28800015 	stw	r2,0(r5)
   24c30:	f800283a 	ret
   24c34:	00803fc4 	movi	r2,255
   24c38:	18800826 	beq	r3,r2,24c5c <__unpack_f+0x98>
   24c3c:	380491fa 	slli	r2,r7,7
   24c40:	18ffe044 	addi	r3,r3,-127
   24c44:	28c00215 	stw	r3,8(r5)
   24c48:	10900034 	orhi	r2,r2,16384
   24c4c:	28800315 	stw	r2,12(r5)
   24c50:	008000c4 	movi	r2,3
   24c54:	28800015 	stw	r2,0(r5)
   24c58:	f800283a 	ret
   24c5c:	3800031e 	bne	r7,zero,24c6c <__unpack_f+0xa8>
   24c60:	00800104 	movi	r2,4
   24c64:	28800015 	stw	r2,0(r5)
   24c68:	f800283a 	ret
   24c6c:	3080042c 	andhi	r2,r6,16
   24c70:	10000426 	beq	r2,zero,24c84 <__unpack_f+0xc0>
   24c74:	00800044 	movi	r2,1
   24c78:	28800015 	stw	r2,0(r5)
   24c7c:	29c00315 	stw	r7,12(r5)
   24c80:	f800283a 	ret
   24c84:	28000015 	stw	zero,0(r5)
   24c88:	003ffc06 	br	24c7c <__unpack_f+0xb8>

00024c8c <__make_fp>:
   24c8c:	defffb04 	addi	sp,sp,-20
   24c90:	d9000015 	stw	r4,0(sp)
   24c94:	d809883a 	mov	r4,sp
   24c98:	dfc00415 	stw	ra,16(sp)
   24c9c:	d9400115 	stw	r5,4(sp)
   24ca0:	d9800215 	stw	r6,8(sp)
   24ca4:	d9c00315 	stw	r7,12(sp)
   24ca8:	0024a640 	call	24a64 <__pack_f>
   24cac:	dfc00417 	ldw	ra,16(sp)
   24cb0:	dec00504 	addi	sp,sp,20
   24cb4:	f800283a 	ret

00024cb8 <__pack_d>:
   24cb8:	20c00017 	ldw	r3,0(r4)
   24cbc:	defffd04 	addi	sp,sp,-12
   24cc0:	dc000015 	stw	r16,0(sp)
   24cc4:	dc800215 	stw	r18,8(sp)
   24cc8:	dc400115 	stw	r17,4(sp)
   24ccc:	00800044 	movi	r2,1
   24cd0:	22000317 	ldw	r8,12(r4)
   24cd4:	001f883a 	mov	r15,zero
   24cd8:	22400417 	ldw	r9,16(r4)
   24cdc:	24000117 	ldw	r16,4(r4)
   24ce0:	10c0552e 	bgeu	r2,r3,24e38 <__pack_d+0x180>
   24ce4:	00800104 	movi	r2,4
   24ce8:	18804f26 	beq	r3,r2,24e28 <__pack_d+0x170>
   24cec:	00800084 	movi	r2,2
   24cf0:	18800226 	beq	r3,r2,24cfc <__pack_d+0x44>
   24cf4:	4244b03a 	or	r2,r8,r9
   24cf8:	10001a1e 	bne	r2,zero,24d64 <__pack_d+0xac>
   24cfc:	000d883a 	mov	r6,zero
   24d00:	000f883a 	mov	r7,zero
   24d04:	0011883a 	mov	r8,zero
   24d08:	00800434 	movhi	r2,16
   24d0c:	10bfffc4 	addi	r2,r2,-1
   24d10:	301d883a 	mov	r14,r6
   24d14:	3884703a 	and	r2,r7,r2
   24d18:	400a953a 	slli	r5,r8,20
   24d1c:	79bffc2c 	andhi	r6,r15,65520
   24d20:	308cb03a 	or	r6,r6,r2
   24d24:	00e00434 	movhi	r3,32784
   24d28:	18ffffc4 	addi	r3,r3,-1
   24d2c:	800497fa 	slli	r2,r16,31
   24d30:	30c6703a 	and	r3,r6,r3
   24d34:	1946b03a 	or	r3,r3,r5
   24d38:	01600034 	movhi	r5,32768
   24d3c:	297fffc4 	addi	r5,r5,-1
   24d40:	194a703a 	and	r5,r3,r5
   24d44:	288ab03a 	or	r5,r5,r2
   24d48:	2807883a 	mov	r3,r5
   24d4c:	7005883a 	mov	r2,r14
   24d50:	dc800217 	ldw	r18,8(sp)
   24d54:	dc400117 	ldw	r17,4(sp)
   24d58:	dc000017 	ldw	r16,0(sp)
   24d5c:	dec00304 	addi	sp,sp,12
   24d60:	f800283a 	ret
   24d64:	21000217 	ldw	r4,8(r4)
   24d68:	00bf0084 	movi	r2,-1022
   24d6c:	20803f16 	blt	r4,r2,24e6c <__pack_d+0x1b4>
   24d70:	0080ffc4 	movi	r2,1023
   24d74:	11002c16 	blt	r2,r4,24e28 <__pack_d+0x170>
   24d78:	00803fc4 	movi	r2,255
   24d7c:	408c703a 	and	r6,r8,r2
   24d80:	00802004 	movi	r2,128
   24d84:	0007883a 	mov	r3,zero
   24d88:	000f883a 	mov	r7,zero
   24d8c:	2280ffc4 	addi	r10,r4,1023
   24d90:	30801e26 	beq	r6,r2,24e0c <__pack_d+0x154>
   24d94:	00801fc4 	movi	r2,127
   24d98:	4089883a 	add	r4,r8,r2
   24d9c:	220d803a 	cmpltu	r6,r4,r8
   24da0:	324d883a 	add	r6,r6,r9
   24da4:	2011883a 	mov	r8,r4
   24da8:	3013883a 	mov	r9,r6
   24dac:	00880034 	movhi	r2,8192
   24db0:	10bfffc4 	addi	r2,r2,-1
   24db4:	12400d36 	bltu	r2,r9,24dec <__pack_d+0x134>
   24db8:	4804963a 	slli	r2,r9,24
   24dbc:	400cd23a 	srli	r6,r8,8
   24dc0:	480ed23a 	srli	r7,r9,8
   24dc4:	013fffc4 	movi	r4,-1
   24dc8:	118cb03a 	or	r6,r2,r6
   24dcc:	01400434 	movhi	r5,16
   24dd0:	297fffc4 	addi	r5,r5,-1
   24dd4:	3104703a 	and	r2,r6,r4
   24dd8:	3946703a 	and	r3,r7,r5
   24ddc:	5201ffcc 	andi	r8,r10,2047
   24de0:	100d883a 	mov	r6,r2
   24de4:	180f883a 	mov	r7,r3
   24de8:	003fc706 	br	24d08 <__pack_d+0x50>
   24dec:	480897fa 	slli	r4,r9,31
   24df0:	4004d07a 	srli	r2,r8,1
   24df4:	4806d07a 	srli	r3,r9,1
   24df8:	52800044 	addi	r10,r10,1
   24dfc:	2084b03a 	or	r2,r4,r2
   24e00:	1011883a 	mov	r8,r2
   24e04:	1813883a 	mov	r9,r3
   24e08:	003feb06 	br	24db8 <__pack_d+0x100>
   24e0c:	383fe11e 	bne	r7,zero,24d94 <__pack_d+0xdc>
   24e10:	01004004 	movi	r4,256
   24e14:	4104703a 	and	r2,r8,r4
   24e18:	10c4b03a 	or	r2,r2,r3
   24e1c:	103fe326 	beq	r2,zero,24dac <__pack_d+0xf4>
   24e20:	3005883a 	mov	r2,r6
   24e24:	003fdc06 	br	24d98 <__pack_d+0xe0>
   24e28:	000d883a 	mov	r6,zero
   24e2c:	000f883a 	mov	r7,zero
   24e30:	0201ffc4 	movi	r8,2047
   24e34:	003fb406 	br	24d08 <__pack_d+0x50>
   24e38:	0005883a 	mov	r2,zero
   24e3c:	00c00234 	movhi	r3,8
   24e40:	408cb03a 	or	r6,r8,r2
   24e44:	48ceb03a 	or	r7,r9,r3
   24e48:	013fffc4 	movi	r4,-1
   24e4c:	01400434 	movhi	r5,16
   24e50:	297fffc4 	addi	r5,r5,-1
   24e54:	3104703a 	and	r2,r6,r4
   24e58:	3946703a 	and	r3,r7,r5
   24e5c:	100d883a 	mov	r6,r2
   24e60:	180f883a 	mov	r7,r3
   24e64:	0201ffc4 	movi	r8,2047
   24e68:	003fa706 	br	24d08 <__pack_d+0x50>
   24e6c:	1109c83a 	sub	r4,r2,r4
   24e70:	00800e04 	movi	r2,56
   24e74:	11004316 	blt	r2,r4,24f84 <__pack_d+0x2cc>
   24e78:	21fff804 	addi	r7,r4,-32
   24e7c:	38004516 	blt	r7,zero,24f94 <__pack_d+0x2dc>
   24e80:	49d8d83a 	srl	r12,r9,r7
   24e84:	001b883a 	mov	r13,zero
   24e88:	0023883a 	mov	r17,zero
   24e8c:	01400044 	movi	r5,1
   24e90:	0025883a 	mov	r18,zero
   24e94:	38004716 	blt	r7,zero,24fb4 <__pack_d+0x2fc>
   24e98:	29d6983a 	sll	r11,r5,r7
   24e9c:	0015883a 	mov	r10,zero
   24ea0:	00bfffc4 	movi	r2,-1
   24ea4:	5089883a 	add	r4,r10,r2
   24ea8:	588b883a 	add	r5,r11,r2
   24eac:	228d803a 	cmpltu	r6,r4,r10
   24eb0:	314b883a 	add	r5,r6,r5
   24eb4:	4104703a 	and	r2,r8,r4
   24eb8:	4946703a 	and	r3,r9,r5
   24ebc:	10c4b03a 	or	r2,r2,r3
   24ec0:	10000226 	beq	r2,zero,24ecc <__pack_d+0x214>
   24ec4:	04400044 	movi	r17,1
   24ec8:	0025883a 	mov	r18,zero
   24ecc:	00803fc4 	movi	r2,255
   24ed0:	644eb03a 	or	r7,r12,r17
   24ed4:	3892703a 	and	r9,r7,r2
   24ed8:	00802004 	movi	r2,128
   24edc:	6c90b03a 	or	r8,r13,r18
   24ee0:	0015883a 	mov	r10,zero
   24ee4:	48801626 	beq	r9,r2,24f40 <__pack_d+0x288>
   24ee8:	01001fc4 	movi	r4,127
   24eec:	3905883a 	add	r2,r7,r4
   24ef0:	11cd803a 	cmpltu	r6,r2,r7
   24ef4:	320d883a 	add	r6,r6,r8
   24ef8:	100f883a 	mov	r7,r2
   24efc:	00840034 	movhi	r2,4096
   24f00:	10bfffc4 	addi	r2,r2,-1
   24f04:	3011883a 	mov	r8,r6
   24f08:	0007883a 	mov	r3,zero
   24f0c:	11801b36 	bltu	r2,r6,24f7c <__pack_d+0x2c4>
   24f10:	4004963a 	slli	r2,r8,24
   24f14:	3808d23a 	srli	r4,r7,8
   24f18:	400ad23a 	srli	r5,r8,8
   24f1c:	1813883a 	mov	r9,r3
   24f20:	1108b03a 	or	r4,r2,r4
   24f24:	00bfffc4 	movi	r2,-1
   24f28:	00c00434 	movhi	r3,16
   24f2c:	18ffffc4 	addi	r3,r3,-1
   24f30:	208c703a 	and	r6,r4,r2
   24f34:	28ce703a 	and	r7,r5,r3
   24f38:	4a01ffcc 	andi	r8,r9,2047
   24f3c:	003f7206 	br	24d08 <__pack_d+0x50>
   24f40:	503fe91e 	bne	r10,zero,24ee8 <__pack_d+0x230>
   24f44:	01004004 	movi	r4,256
   24f48:	3904703a 	and	r2,r7,r4
   24f4c:	0007883a 	mov	r3,zero
   24f50:	10c4b03a 	or	r2,r2,r3
   24f54:	10000626 	beq	r2,zero,24f70 <__pack_d+0x2b8>
   24f58:	3a45883a 	add	r2,r7,r9
   24f5c:	11cd803a 	cmpltu	r6,r2,r7
   24f60:	320d883a 	add	r6,r6,r8
   24f64:	100f883a 	mov	r7,r2
   24f68:	3011883a 	mov	r8,r6
   24f6c:	0007883a 	mov	r3,zero
   24f70:	00840034 	movhi	r2,4096
   24f74:	10bfffc4 	addi	r2,r2,-1
   24f78:	123fe52e 	bgeu	r2,r8,24f10 <__pack_d+0x258>
   24f7c:	00c00044 	movi	r3,1
   24f80:	003fe306 	br	24f10 <__pack_d+0x258>
   24f84:	0009883a 	mov	r4,zero
   24f88:	0013883a 	mov	r9,zero
   24f8c:	000b883a 	mov	r5,zero
   24f90:	003fe406 	br	24f24 <__pack_d+0x26c>
   24f94:	4a47883a 	add	r3,r9,r9
   24f98:	008007c4 	movi	r2,31
   24f9c:	1105c83a 	sub	r2,r2,r4
   24fa0:	1886983a 	sll	r3,r3,r2
   24fa4:	4118d83a 	srl	r12,r8,r4
   24fa8:	491ad83a 	srl	r13,r9,r4
   24fac:	1b18b03a 	or	r12,r3,r12
   24fb0:	003fb506 	br	24e88 <__pack_d+0x1d0>
   24fb4:	2806d07a 	srli	r3,r5,1
   24fb8:	008007c4 	movi	r2,31
   24fbc:	1105c83a 	sub	r2,r2,r4
   24fc0:	1896d83a 	srl	r11,r3,r2
   24fc4:	2914983a 	sll	r10,r5,r4
   24fc8:	003fb506 	br	24ea0 <__pack_d+0x1e8>

00024fcc <__unpack_d>:
   24fcc:	20c00117 	ldw	r3,4(r4)
   24fd0:	22400017 	ldw	r9,0(r4)
   24fd4:	00800434 	movhi	r2,16
   24fd8:	10bfffc4 	addi	r2,r2,-1
   24fdc:	1808d53a 	srli	r4,r3,20
   24fe0:	180cd7fa 	srli	r6,r3,31
   24fe4:	1894703a 	and	r10,r3,r2
   24fe8:	2201ffcc 	andi	r8,r4,2047
   24fec:	281b883a 	mov	r13,r5
   24ff0:	4817883a 	mov	r11,r9
   24ff4:	29800115 	stw	r6,4(r5)
   24ff8:	5019883a 	mov	r12,r10
   24ffc:	40001e1e 	bne	r8,zero,25078 <__unpack_d+0xac>
   25000:	4a84b03a 	or	r2,r9,r10
   25004:	10001926 	beq	r2,zero,2506c <__unpack_d+0xa0>
   25008:	4804d63a 	srli	r2,r9,24
   2500c:	500c923a 	slli	r6,r10,8
   25010:	013f0084 	movi	r4,-1022
   25014:	00c40034 	movhi	r3,4096
   25018:	18ffffc4 	addi	r3,r3,-1
   2501c:	118cb03a 	or	r6,r2,r6
   25020:	008000c4 	movi	r2,3
   25024:	480a923a 	slli	r5,r9,8
   25028:	68800015 	stw	r2,0(r13)
   2502c:	69000215 	stw	r4,8(r13)
   25030:	19800b36 	bltu	r3,r6,25060 <__unpack_d+0x94>
   25034:	200f883a 	mov	r7,r4
   25038:	1811883a 	mov	r8,r3
   2503c:	2945883a 	add	r2,r5,r5
   25040:	1149803a 	cmpltu	r4,r2,r5
   25044:	3187883a 	add	r3,r6,r6
   25048:	20c9883a 	add	r4,r4,r3
   2504c:	100b883a 	mov	r5,r2
   25050:	200d883a 	mov	r6,r4
   25054:	39ffffc4 	addi	r7,r7,-1
   25058:	413ff82e 	bgeu	r8,r4,2503c <__unpack_d+0x70>
   2505c:	69c00215 	stw	r7,8(r13)
   25060:	69800415 	stw	r6,16(r13)
   25064:	69400315 	stw	r5,12(r13)
   25068:	f800283a 	ret
   2506c:	00800084 	movi	r2,2
   25070:	28800015 	stw	r2,0(r5)
   25074:	f800283a 	ret
   25078:	0081ffc4 	movi	r2,2047
   2507c:	40800f26 	beq	r8,r2,250bc <__unpack_d+0xf0>
   25080:	480cd63a 	srli	r6,r9,24
   25084:	5006923a 	slli	r3,r10,8
   25088:	4804923a 	slli	r2,r9,8
   2508c:	0009883a 	mov	r4,zero
   25090:	30c6b03a 	or	r3,r6,r3
   25094:	01440034 	movhi	r5,4096
   25098:	110cb03a 	or	r6,r2,r4
   2509c:	423f0044 	addi	r8,r8,-1023
   250a0:	194eb03a 	or	r7,r3,r5
   250a4:	008000c4 	movi	r2,3
   250a8:	69c00415 	stw	r7,16(r13)
   250ac:	6a000215 	stw	r8,8(r13)
   250b0:	68800015 	stw	r2,0(r13)
   250b4:	69800315 	stw	r6,12(r13)
   250b8:	f800283a 	ret
   250bc:	4a84b03a 	or	r2,r9,r10
   250c0:	1000031e 	bne	r2,zero,250d0 <__unpack_d+0x104>
   250c4:	00800104 	movi	r2,4
   250c8:	28800015 	stw	r2,0(r5)
   250cc:	f800283a 	ret
   250d0:	0009883a 	mov	r4,zero
   250d4:	01400234 	movhi	r5,8
   250d8:	4904703a 	and	r2,r9,r4
   250dc:	5146703a 	and	r3,r10,r5
   250e0:	10c4b03a 	or	r2,r2,r3
   250e4:	10000526 	beq	r2,zero,250fc <__unpack_d+0x130>
   250e8:	00800044 	movi	r2,1
   250ec:	68800015 	stw	r2,0(r13)
   250f0:	6b000415 	stw	r12,16(r13)
   250f4:	6ac00315 	stw	r11,12(r13)
   250f8:	f800283a 	ret
   250fc:	68000015 	stw	zero,0(r13)
   25100:	003ffb06 	br	250f0 <__unpack_d+0x124>

00025104 <__fpcmp_parts_d>:
   25104:	21800017 	ldw	r6,0(r4)
   25108:	00c00044 	movi	r3,1
   2510c:	19800a2e 	bgeu	r3,r6,25138 <__fpcmp_parts_d+0x34>
   25110:	28800017 	ldw	r2,0(r5)
   25114:	1880082e 	bgeu	r3,r2,25138 <__fpcmp_parts_d+0x34>
   25118:	00c00104 	movi	r3,4
   2511c:	30c02626 	beq	r6,r3,251b8 <__fpcmp_parts_d+0xb4>
   25120:	10c02226 	beq	r2,r3,251ac <__fpcmp_parts_d+0xa8>
   25124:	00c00084 	movi	r3,2
   25128:	30c00526 	beq	r6,r3,25140 <__fpcmp_parts_d+0x3c>
   2512c:	10c0071e 	bne	r2,r3,2514c <__fpcmp_parts_d+0x48>
   25130:	20800117 	ldw	r2,4(r4)
   25134:	1000091e 	bne	r2,zero,2515c <__fpcmp_parts_d+0x58>
   25138:	00800044 	movi	r2,1
   2513c:	f800283a 	ret
   25140:	10c01a1e 	bne	r2,r3,251ac <__fpcmp_parts_d+0xa8>
   25144:	0005883a 	mov	r2,zero
   25148:	f800283a 	ret
   2514c:	22000117 	ldw	r8,4(r4)
   25150:	28800117 	ldw	r2,4(r5)
   25154:	40800326 	beq	r8,r2,25164 <__fpcmp_parts_d+0x60>
   25158:	403ff726 	beq	r8,zero,25138 <__fpcmp_parts_d+0x34>
   2515c:	00bfffc4 	movi	r2,-1
   25160:	f800283a 	ret
   25164:	20c00217 	ldw	r3,8(r4)
   25168:	28800217 	ldw	r2,8(r5)
   2516c:	10fffa16 	blt	r2,r3,25158 <__fpcmp_parts_d+0x54>
   25170:	18800916 	blt	r3,r2,25198 <__fpcmp_parts_d+0x94>
   25174:	21c00417 	ldw	r7,16(r4)
   25178:	28c00417 	ldw	r3,16(r5)
   2517c:	21800317 	ldw	r6,12(r4)
   25180:	28800317 	ldw	r2,12(r5)
   25184:	19fff436 	bltu	r3,r7,25158 <__fpcmp_parts_d+0x54>
   25188:	38c00526 	beq	r7,r3,251a0 <__fpcmp_parts_d+0x9c>
   2518c:	38c00236 	bltu	r7,r3,25198 <__fpcmp_parts_d+0x94>
   25190:	19ffec1e 	bne	r3,r7,25144 <__fpcmp_parts_d+0x40>
   25194:	30bfeb2e 	bgeu	r6,r2,25144 <__fpcmp_parts_d+0x40>
   25198:	403fe71e 	bne	r8,zero,25138 <__fpcmp_parts_d+0x34>
   2519c:	003fef06 	br	2515c <__fpcmp_parts_d+0x58>
   251a0:	11bffa2e 	bgeu	r2,r6,2518c <__fpcmp_parts_d+0x88>
   251a4:	403fe426 	beq	r8,zero,25138 <__fpcmp_parts_d+0x34>
   251a8:	003fec06 	br	2515c <__fpcmp_parts_d+0x58>
   251ac:	28800117 	ldw	r2,4(r5)
   251b0:	103fe11e 	bne	r2,zero,25138 <__fpcmp_parts_d+0x34>
   251b4:	003fe906 	br	2515c <__fpcmp_parts_d+0x58>
   251b8:	11bfdd1e 	bne	r2,r6,25130 <__fpcmp_parts_d+0x2c>
   251bc:	28c00117 	ldw	r3,4(r5)
   251c0:	20800117 	ldw	r2,4(r4)
   251c4:	1885c83a 	sub	r2,r3,r2
   251c8:	f800283a 	ret

000251cc <__errno>:
   251cc:	00c000f4 	movhi	r3,3
   251d0:	18c6af04 	addi	r3,r3,6844
   251d4:	18800017 	ldw	r2,0(r3)
   251d8:	f800283a 	ret

000251dc <printf>:
   251dc:	defffb04 	addi	sp,sp,-20
   251e0:	dfc00115 	stw	ra,4(sp)
   251e4:	d9400215 	stw	r5,8(sp)
   251e8:	d9800315 	stw	r6,12(sp)
   251ec:	d9c00415 	stw	r7,16(sp)
   251f0:	008000f4 	movhi	r2,3
   251f4:	1086af04 	addi	r2,r2,6844
   251f8:	10c00017 	ldw	r3,0(r2)
   251fc:	200b883a 	mov	r5,r4
   25200:	d8800204 	addi	r2,sp,8
   25204:	19000217 	ldw	r4,8(r3)
   25208:	100d883a 	mov	r6,r2
   2520c:	d8800015 	stw	r2,0(sp)
   25210:	00272800 	call	27280 <__vfprintf_internal>
   25214:	dfc00117 	ldw	ra,4(sp)
   25218:	dec00504 	addi	sp,sp,20
   2521c:	f800283a 	ret

00025220 <_printf_r>:
   25220:	defffc04 	addi	sp,sp,-16
   25224:	dfc00115 	stw	ra,4(sp)
   25228:	d9800215 	stw	r6,8(sp)
   2522c:	d9c00315 	stw	r7,12(sp)
   25230:	280d883a 	mov	r6,r5
   25234:	21400217 	ldw	r5,8(r4)
   25238:	d8c00204 	addi	r3,sp,8
   2523c:	180f883a 	mov	r7,r3
   25240:	d8c00015 	stw	r3,0(sp)
   25244:	00253d40 	call	253d4 <___vfprintf_internal_r>
   25248:	dfc00117 	ldw	ra,4(sp)
   2524c:	dec00404 	addi	sp,sp,16
   25250:	f800283a 	ret

00025254 <_puts_r>:
   25254:	defff604 	addi	sp,sp,-40
   25258:	dc400715 	stw	r17,28(sp)
   2525c:	2023883a 	mov	r17,r4
   25260:	2809883a 	mov	r4,r5
   25264:	dfc00915 	stw	ra,36(sp)
   25268:	dcc00815 	stw	r19,32(sp)
   2526c:	2827883a 	mov	r19,r5
   25270:	00253080 	call	25308 <strlen>
   25274:	89400217 	ldw	r5,8(r17)
   25278:	00c000f4 	movhi	r3,3
   2527c:	18ff8d04 	addi	r3,r3,-460
   25280:	01c00044 	movi	r7,1
   25284:	12000044 	addi	r8,r2,1
   25288:	d8c00515 	stw	r3,20(sp)
   2528c:	d9c00615 	stw	r7,24(sp)
   25290:	d8c00304 	addi	r3,sp,12
   25294:	01c00084 	movi	r7,2
   25298:	8809883a 	mov	r4,r17
   2529c:	d80d883a 	mov	r6,sp
   252a0:	d8c00015 	stw	r3,0(sp)
   252a4:	dcc00315 	stw	r19,12(sp)
   252a8:	da000215 	stw	r8,8(sp)
   252ac:	d9c00115 	stw	r7,4(sp)
   252b0:	d8800415 	stw	r2,16(sp)
   252b4:	00294dc0 	call	294dc <__sfvwrite_r>
   252b8:	00ffffc4 	movi	r3,-1
   252bc:	10000626 	beq	r2,zero,252d8 <_puts_r+0x84>
   252c0:	1805883a 	mov	r2,r3
   252c4:	dfc00917 	ldw	ra,36(sp)
   252c8:	dcc00817 	ldw	r19,32(sp)
   252cc:	dc400717 	ldw	r17,28(sp)
   252d0:	dec00a04 	addi	sp,sp,40
   252d4:	f800283a 	ret
   252d8:	00c00284 	movi	r3,10
   252dc:	1805883a 	mov	r2,r3
   252e0:	dfc00917 	ldw	ra,36(sp)
   252e4:	dcc00817 	ldw	r19,32(sp)
   252e8:	dc400717 	ldw	r17,28(sp)
   252ec:	dec00a04 	addi	sp,sp,40
   252f0:	f800283a 	ret

000252f4 <puts>:
   252f4:	008000f4 	movhi	r2,3
   252f8:	1086af04 	addi	r2,r2,6844
   252fc:	200b883a 	mov	r5,r4
   25300:	11000017 	ldw	r4,0(r2)
   25304:	00252541 	jmpi	25254 <_puts_r>

00025308 <strlen>:
   25308:	208000cc 	andi	r2,r4,3
   2530c:	2011883a 	mov	r8,r4
   25310:	1000161e 	bne	r2,zero,2536c <strlen+0x64>
   25314:	20c00017 	ldw	r3,0(r4)
   25318:	017fbff4 	movhi	r5,65279
   2531c:	297fbfc4 	addi	r5,r5,-257
   25320:	01e02074 	movhi	r7,32897
   25324:	39e02004 	addi	r7,r7,-32640
   25328:	1945883a 	add	r2,r3,r5
   2532c:	11c4703a 	and	r2,r2,r7
   25330:	00c6303a 	nor	r3,zero,r3
   25334:	1886703a 	and	r3,r3,r2
   25338:	18000c1e 	bne	r3,zero,2536c <strlen+0x64>
   2533c:	280d883a 	mov	r6,r5
   25340:	380b883a 	mov	r5,r7
   25344:	21000104 	addi	r4,r4,4
   25348:	20800017 	ldw	r2,0(r4)
   2534c:	1187883a 	add	r3,r2,r6
   25350:	1946703a 	and	r3,r3,r5
   25354:	0084303a 	nor	r2,zero,r2
   25358:	10c4703a 	and	r2,r2,r3
   2535c:	103ff926 	beq	r2,zero,25344 <strlen+0x3c>
   25360:	20800007 	ldb	r2,0(r4)
   25364:	10000326 	beq	r2,zero,25374 <strlen+0x6c>
   25368:	21000044 	addi	r4,r4,1
   2536c:	20800007 	ldb	r2,0(r4)
   25370:	103ffd1e 	bne	r2,zero,25368 <strlen+0x60>
   25374:	2205c83a 	sub	r2,r4,r8
   25378:	f800283a 	ret

0002537c <__sprint_r>:
   2537c:	30800217 	ldw	r2,8(r6)
   25380:	defffe04 	addi	sp,sp,-8
   25384:	dc000015 	stw	r16,0(sp)
   25388:	dfc00115 	stw	ra,4(sp)
   2538c:	3021883a 	mov	r16,r6
   25390:	0007883a 	mov	r3,zero
   25394:	1000061e 	bne	r2,zero,253b0 <__sprint_r+0x34>
   25398:	1805883a 	mov	r2,r3
   2539c:	30000115 	stw	zero,4(r6)
   253a0:	dfc00117 	ldw	ra,4(sp)
   253a4:	dc000017 	ldw	r16,0(sp)
   253a8:	dec00204 	addi	sp,sp,8
   253ac:	f800283a 	ret
   253b0:	00294dc0 	call	294dc <__sfvwrite_r>
   253b4:	1007883a 	mov	r3,r2
   253b8:	1805883a 	mov	r2,r3
   253bc:	80000115 	stw	zero,4(r16)
   253c0:	80000215 	stw	zero,8(r16)
   253c4:	dfc00117 	ldw	ra,4(sp)
   253c8:	dc000017 	ldw	r16,0(sp)
   253cc:	dec00204 	addi	sp,sp,8
   253d0:	f800283a 	ret

000253d4 <___vfprintf_internal_r>:
   253d4:	defea404 	addi	sp,sp,-1392
   253d8:	dd815815 	stw	r22,1376(sp)
   253dc:	dc015215 	stw	r16,1352(sp)
   253e0:	d9c15115 	stw	r7,1348(sp)
   253e4:	dfc15b15 	stw	ra,1388(sp)
   253e8:	df015a15 	stw	fp,1384(sp)
   253ec:	ddc15915 	stw	r23,1380(sp)
   253f0:	dd415715 	stw	r21,1372(sp)
   253f4:	dd015615 	stw	r20,1368(sp)
   253f8:	dcc15515 	stw	r19,1364(sp)
   253fc:	dc815415 	stw	r18,1360(sp)
   25400:	dc415315 	stw	r17,1356(sp)
   25404:	282d883a 	mov	r22,r5
   25408:	3021883a 	mov	r16,r6
   2540c:	d9014f15 	stw	r4,1340(sp)
   25410:	0029b000 	call	29b00 <_localeconv_r>
   25414:	10800017 	ldw	r2,0(r2)
   25418:	d9c15117 	ldw	r7,1348(sp)
   2541c:	d8814915 	stw	r2,1316(sp)
   25420:	d8814f17 	ldw	r2,1340(sp)
   25424:	10000226 	beq	r2,zero,25430 <___vfprintf_internal_r+0x5c>
   25428:	10800e17 	ldw	r2,56(r2)
   2542c:	10020d26 	beq	r2,zero,25c64 <___vfprintf_internal_r+0x890>
   25430:	b080030b 	ldhu	r2,12(r22)
   25434:	1080020c 	andi	r2,r2,8
   25438:	10020e26 	beq	r2,zero,25c74 <___vfprintf_internal_r+0x8a0>
   2543c:	b0800417 	ldw	r2,16(r22)
   25440:	10020c26 	beq	r2,zero,25c74 <___vfprintf_internal_r+0x8a0>
   25444:	b200030b 	ldhu	r8,12(r22)
   25448:	00800284 	movi	r2,10
   2544c:	40c0068c 	andi	r3,r8,26
   25450:	18802f1e 	bne	r3,r2,25510 <___vfprintf_internal_r+0x13c>
   25454:	b080038f 	ldh	r2,14(r22)
   25458:	10002d16 	blt	r2,zero,25510 <___vfprintf_internal_r+0x13c>
   2545c:	b240038b 	ldhu	r9,14(r22)
   25460:	b2800717 	ldw	r10,28(r22)
   25464:	b2c00917 	ldw	r11,36(r22)
   25468:	d9014f17 	ldw	r4,1340(sp)
   2546c:	dc402904 	addi	r17,sp,164
   25470:	d8804004 	addi	r2,sp,256
   25474:	00c10004 	movi	r3,1024
   25478:	423fff4c 	andi	r8,r8,65533
   2547c:	800d883a 	mov	r6,r16
   25480:	880b883a 	mov	r5,r17
   25484:	da002c0d 	sth	r8,176(sp)
   25488:	da402c8d 	sth	r9,178(sp)
   2548c:	da803015 	stw	r10,192(sp)
   25490:	dac03215 	stw	r11,200(sp)
   25494:	d8802d15 	stw	r2,180(sp)
   25498:	d8c02e15 	stw	r3,184(sp)
   2549c:	d8802915 	stw	r2,164(sp)
   254a0:	d8c02b15 	stw	r3,172(sp)
   254a4:	d8002f15 	stw	zero,188(sp)
   254a8:	00253d40 	call	253d4 <___vfprintf_internal_r>
   254ac:	d8814b15 	stw	r2,1324(sp)
   254b0:	10000416 	blt	r2,zero,254c4 <___vfprintf_internal_r+0xf0>
   254b4:	d9014f17 	ldw	r4,1340(sp)
   254b8:	880b883a 	mov	r5,r17
   254bc:	0028bac0 	call	28bac <_fflush_r>
   254c0:	1002321e 	bne	r2,zero,25d8c <___vfprintf_internal_r+0x9b8>
   254c4:	d8802c0b 	ldhu	r2,176(sp)
   254c8:	1080100c 	andi	r2,r2,64
   254cc:	10000326 	beq	r2,zero,254dc <___vfprintf_internal_r+0x108>
   254d0:	b080030b 	ldhu	r2,12(r22)
   254d4:	10801014 	ori	r2,r2,64
   254d8:	b080030d 	sth	r2,12(r22)
   254dc:	d8814b17 	ldw	r2,1324(sp)
   254e0:	dfc15b17 	ldw	ra,1388(sp)
   254e4:	df015a17 	ldw	fp,1384(sp)
   254e8:	ddc15917 	ldw	r23,1380(sp)
   254ec:	dd815817 	ldw	r22,1376(sp)
   254f0:	dd415717 	ldw	r21,1372(sp)
   254f4:	dd015617 	ldw	r20,1368(sp)
   254f8:	dcc15517 	ldw	r19,1364(sp)
   254fc:	dc815417 	ldw	r18,1360(sp)
   25500:	dc415317 	ldw	r17,1356(sp)
   25504:	dc015217 	ldw	r16,1352(sp)
   25508:	dec15c04 	addi	sp,sp,1392
   2550c:	f800283a 	ret
   25510:	0005883a 	mov	r2,zero
   25514:	0007883a 	mov	r3,zero
   25518:	dd401904 	addi	r21,sp,100
   2551c:	d8814215 	stw	r2,1288(sp)
   25520:	802f883a 	mov	r23,r16
   25524:	d8c14315 	stw	r3,1292(sp)
   25528:	d8014b15 	stw	zero,1324(sp)
   2552c:	d8014815 	stw	zero,1312(sp)
   25530:	d8014415 	stw	zero,1296(sp)
   25534:	d8014715 	stw	zero,1308(sp)
   25538:	dd400c15 	stw	r21,48(sp)
   2553c:	d8000e15 	stw	zero,56(sp)
   25540:	d8000d15 	stw	zero,52(sp)
   25544:	b8800007 	ldb	r2,0(r23)
   25548:	10001926 	beq	r2,zero,255b0 <___vfprintf_internal_r+0x1dc>
   2554c:	00c00944 	movi	r3,37
   25550:	10c01726 	beq	r2,r3,255b0 <___vfprintf_internal_r+0x1dc>
   25554:	b821883a 	mov	r16,r23
   25558:	00000106 	br	25560 <___vfprintf_internal_r+0x18c>
   2555c:	10c00326 	beq	r2,r3,2556c <___vfprintf_internal_r+0x198>
   25560:	84000044 	addi	r16,r16,1
   25564:	80800007 	ldb	r2,0(r16)
   25568:	103ffc1e 	bne	r2,zero,2555c <___vfprintf_internal_r+0x188>
   2556c:	85e7c83a 	sub	r19,r16,r23
   25570:	98000e26 	beq	r19,zero,255ac <___vfprintf_internal_r+0x1d8>
   25574:	dc800e17 	ldw	r18,56(sp)
   25578:	dc400d17 	ldw	r17,52(sp)
   2557c:	008001c4 	movi	r2,7
   25580:	94e5883a 	add	r18,r18,r19
   25584:	8c400044 	addi	r17,r17,1
   25588:	adc00015 	stw	r23,0(r21)
   2558c:	dc800e15 	stw	r18,56(sp)
   25590:	acc00115 	stw	r19,4(r21)
   25594:	dc400d15 	stw	r17,52(sp)
   25598:	14428b16 	blt	r2,r17,25fc8 <___vfprintf_internal_r+0xbf4>
   2559c:	ad400204 	addi	r21,r21,8
   255a0:	d9014b17 	ldw	r4,1324(sp)
   255a4:	24c9883a 	add	r4,r4,r19
   255a8:	d9014b15 	stw	r4,1324(sp)
   255ac:	802f883a 	mov	r23,r16
   255b0:	b8800007 	ldb	r2,0(r23)
   255b4:	10013c26 	beq	r2,zero,25aa8 <___vfprintf_internal_r+0x6d4>
   255b8:	bdc00044 	addi	r23,r23,1
   255bc:	d8000405 	stb	zero,16(sp)
   255c0:	b8c00007 	ldb	r3,0(r23)
   255c4:	04ffffc4 	movi	r19,-1
   255c8:	d8014c15 	stw	zero,1328(sp)
   255cc:	d8014a15 	stw	zero,1320(sp)
   255d0:	d8c14d15 	stw	r3,1332(sp)
   255d4:	bdc00044 	addi	r23,r23,1
   255d8:	d9414d17 	ldw	r5,1332(sp)
   255dc:	00801604 	movi	r2,88
   255e0:	28fff804 	addi	r3,r5,-32
   255e4:	10c06036 	bltu	r2,r3,25768 <___vfprintf_internal_r+0x394>
   255e8:	18c5883a 	add	r2,r3,r3
   255ec:	1085883a 	add	r2,r2,r2
   255f0:	00c000b4 	movhi	r3,2
   255f4:	18d58104 	addi	r3,r3,22020
   255f8:	10c5883a 	add	r2,r2,r3
   255fc:	11000017 	ldw	r4,0(r2)
   25600:	2000683a 	jmp	r4
   25604:	00026578 	rdprs	zero,zero,2453
   25608:	00025768 	cmpgeui	zero,zero,2397
   2560c:	00025768 	cmpgeui	zero,zero,2397
   25610:	00026564 	muli	zero,zero,2453
   25614:	00025768 	cmpgeui	zero,zero,2397
   25618:	00025768 	cmpgeui	zero,zero,2397
   2561c:	00025768 	cmpgeui	zero,zero,2397
   25620:	00025768 	cmpgeui	zero,zero,2397
   25624:	00025768 	cmpgeui	zero,zero,2397
   25628:	00025768 	cmpgeui	zero,zero,2397
   2562c:	00026344 	movi	zero,2445
   25630:	00026554 	movui	zero,2453
   25634:	00025768 	cmpgeui	zero,zero,2397
   25638:	0002635c 	xori	zero,zero,2445
   2563c:	000265f0 	cmpltui	zero,zero,2455
   25640:	00025768 	cmpgeui	zero,zero,2397
   25644:	000265dc 	xori	zero,zero,2455
   25648:	000265a4 	muli	zero,zero,2454
   2564c:	000265a4 	muli	zero,zero,2454
   25650:	000265a4 	muli	zero,zero,2454
   25654:	000265a4 	muli	zero,zero,2454
   25658:	000265a4 	muli	zero,zero,2454
   2565c:	000265a4 	muli	zero,zero,2454
   25660:	000265a4 	muli	zero,zero,2454
   25664:	000265a4 	muli	zero,zero,2454
   25668:	000265a4 	muli	zero,zero,2454
   2566c:	00025768 	cmpgeui	zero,zero,2397
   25670:	00025768 	cmpgeui	zero,zero,2397
   25674:	00025768 	cmpgeui	zero,zero,2397
   25678:	00025768 	cmpgeui	zero,zero,2397
   2567c:	00025768 	cmpgeui	zero,zero,2397
   25680:	00025768 	cmpgeui	zero,zero,2397
   25684:	00025768 	cmpgeui	zero,zero,2397
   25688:	00025768 	cmpgeui	zero,zero,2397
   2568c:	00025768 	cmpgeui	zero,zero,2397
   25690:	00025768 	cmpgeui	zero,zero,2397
   25694:	00025dc0 	call	25dc <__alt_mem_RAM-0x1da24>
   25698:	0002642c 	andhi	zero,zero,2448
   2569c:	00025768 	cmpgeui	zero,zero,2397
   256a0:	0002642c 	andhi	zero,zero,2448
   256a4:	00025768 	cmpgeui	zero,zero,2397
   256a8:	00025768 	cmpgeui	zero,zero,2397
   256ac:	00025768 	cmpgeui	zero,zero,2397
   256b0:	00025768 	cmpgeui	zero,zero,2397
   256b4:	00026590 	cmplti	zero,zero,2454
   256b8:	00025768 	cmpgeui	zero,zero,2397
   256bc:	00025768 	cmpgeui	zero,zero,2397
   256c0:	00025e74 	movhi	zero,2425
   256c4:	00025768 	cmpgeui	zero,zero,2397
   256c8:	00025768 	cmpgeui	zero,zero,2397
   256cc:	00025768 	cmpgeui	zero,zero,2397
   256d0:	00025768 	cmpgeui	zero,zero,2397
   256d4:	00025768 	cmpgeui	zero,zero,2397
   256d8:	00025ec0 	call	25ec <__alt_mem_RAM-0x1da14>
   256dc:	00025768 	cmpgeui	zero,zero,2397
   256e0:	00025768 	cmpgeui	zero,zero,2397
   256e4:	000264e0 	cmpeqi	zero,zero,2451
   256e8:	00025768 	cmpgeui	zero,zero,2397
   256ec:	00025768 	cmpgeui	zero,zero,2397
   256f0:	00025768 	cmpgeui	zero,zero,2397
   256f4:	00025768 	cmpgeui	zero,zero,2397
   256f8:	00025768 	cmpgeui	zero,zero,2397
   256fc:	00025768 	cmpgeui	zero,zero,2397
   25700:	00025768 	cmpgeui	zero,zero,2397
   25704:	00025768 	cmpgeui	zero,zero,2397
   25708:	00025768 	cmpgeui	zero,zero,2397
   2570c:	00025768 	cmpgeui	zero,zero,2397
   25710:	000264b4 	movhi	zero,2450
   25714:	00025dcc 	andi	zero,zero,2423
   25718:	0002642c 	andhi	zero,zero,2448
   2571c:	0002642c 	andhi	zero,zero,2448
   25720:	0002642c 	andhi	zero,zero,2448
   25724:	00026418 	cmpnei	zero,zero,2448
   25728:	00025dcc 	andi	zero,zero,2423
   2572c:	00025768 	cmpgeui	zero,zero,2397
   25730:	00025768 	cmpgeui	zero,zero,2397
   25734:	000263a0 	cmpeqi	zero,zero,2446
   25738:	00025768 	cmpgeui	zero,zero,2397
   2573c:	00026370 	cmpltui	zero,zero,2445
   25740:	00025e80 	call	25e8 <__alt_mem_RAM-0x1da18>
   25744:	000263d0 	cmplti	zero,zero,2447
   25748:	000263bc 	xorhi	zero,zero,2446
   2574c:	00025768 	cmpgeui	zero,zero,2397
   25750:	0002664c 	andi	zero,zero,2457
   25754:	00025768 	cmpgeui	zero,zero,2397
   25758:	00025ecc 	andi	zero,zero,2427
   2575c:	00025768 	cmpgeui	zero,zero,2397
   25760:	00025768 	cmpgeui	zero,zero,2397
   25764:	00026544 	movi	zero,2453
   25768:	d9014d17 	ldw	r4,1332(sp)
   2576c:	2000ce26 	beq	r4,zero,25aa8 <___vfprintf_internal_r+0x6d4>
   25770:	01400044 	movi	r5,1
   25774:	d9800f04 	addi	r6,sp,60
   25778:	d9c14015 	stw	r7,1280(sp)
   2577c:	d9414515 	stw	r5,1300(sp)
   25780:	d9814115 	stw	r6,1284(sp)
   25784:	280f883a 	mov	r7,r5
   25788:	d9000f05 	stb	r4,60(sp)
   2578c:	d8000405 	stb	zero,16(sp)
   25790:	d8014615 	stw	zero,1304(sp)
   25794:	d8c14c17 	ldw	r3,1328(sp)
   25798:	1880008c 	andi	r2,r3,2
   2579c:	1005003a 	cmpeq	r2,r2,zero
   257a0:	d8815015 	stw	r2,1344(sp)
   257a4:	1000031e 	bne	r2,zero,257b4 <___vfprintf_internal_r+0x3e0>
   257a8:	d9014517 	ldw	r4,1300(sp)
   257ac:	21000084 	addi	r4,r4,2
   257b0:	d9014515 	stw	r4,1300(sp)
   257b4:	d9414c17 	ldw	r5,1328(sp)
   257b8:	2940210c 	andi	r5,r5,132
   257bc:	d9414e15 	stw	r5,1336(sp)
   257c0:	28002d1e 	bne	r5,zero,25878 <___vfprintf_internal_r+0x4a4>
   257c4:	d9814a17 	ldw	r6,1320(sp)
   257c8:	d8814517 	ldw	r2,1300(sp)
   257cc:	30a1c83a 	sub	r16,r6,r2
   257d0:	0400290e 	bge	zero,r16,25878 <___vfprintf_internal_r+0x4a4>
   257d4:	00800404 	movi	r2,16
   257d8:	1404580e 	bge	r2,r16,2693c <___vfprintf_internal_r+0x1568>
   257dc:	dc800e17 	ldw	r18,56(sp)
   257e0:	dc400d17 	ldw	r17,52(sp)
   257e4:	1027883a 	mov	r19,r2
   257e8:	070000f4 	movhi	fp,3
   257ec:	e73fa984 	addi	fp,fp,-346
   257f0:	050001c4 	movi	r20,7
   257f4:	00000306 	br	25804 <___vfprintf_internal_r+0x430>
   257f8:	843ffc04 	addi	r16,r16,-16
   257fc:	ad400204 	addi	r21,r21,8
   25800:	9c00130e 	bge	r19,r16,25850 <___vfprintf_internal_r+0x47c>
   25804:	94800404 	addi	r18,r18,16
   25808:	8c400044 	addi	r17,r17,1
   2580c:	af000015 	stw	fp,0(r21)
   25810:	acc00115 	stw	r19,4(r21)
   25814:	dc800e15 	stw	r18,56(sp)
   25818:	dc400d15 	stw	r17,52(sp)
   2581c:	a47ff60e 	bge	r20,r17,257f8 <___vfprintf_internal_r+0x424>
   25820:	d9014f17 	ldw	r4,1340(sp)
   25824:	b00b883a 	mov	r5,r22
   25828:	d9800c04 	addi	r6,sp,48
   2582c:	d9c15115 	stw	r7,1348(sp)
   25830:	002537c0 	call	2537c <__sprint_r>
   25834:	d9c15117 	ldw	r7,1348(sp)
   25838:	10009e1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   2583c:	843ffc04 	addi	r16,r16,-16
   25840:	dc800e17 	ldw	r18,56(sp)
   25844:	dc400d17 	ldw	r17,52(sp)
   25848:	dd401904 	addi	r21,sp,100
   2584c:	9c3fed16 	blt	r19,r16,25804 <___vfprintf_internal_r+0x430>
   25850:	9425883a 	add	r18,r18,r16
   25854:	8c400044 	addi	r17,r17,1
   25858:	008001c4 	movi	r2,7
   2585c:	af000015 	stw	fp,0(r21)
   25860:	ac000115 	stw	r16,4(r21)
   25864:	dc800e15 	stw	r18,56(sp)
   25868:	dc400d15 	stw	r17,52(sp)
   2586c:	1441f516 	blt	r2,r17,26044 <___vfprintf_internal_r+0xc70>
   25870:	ad400204 	addi	r21,r21,8
   25874:	00000206 	br	25880 <___vfprintf_internal_r+0x4ac>
   25878:	dc800e17 	ldw	r18,56(sp)
   2587c:	dc400d17 	ldw	r17,52(sp)
   25880:	d8800407 	ldb	r2,16(sp)
   25884:	10000b26 	beq	r2,zero,258b4 <___vfprintf_internal_r+0x4e0>
   25888:	00800044 	movi	r2,1
   2588c:	94800044 	addi	r18,r18,1
   25890:	8c400044 	addi	r17,r17,1
   25894:	a8800115 	stw	r2,4(r21)
   25898:	d8c00404 	addi	r3,sp,16
   2589c:	008001c4 	movi	r2,7
   258a0:	a8c00015 	stw	r3,0(r21)
   258a4:	dc800e15 	stw	r18,56(sp)
   258a8:	dc400d15 	stw	r17,52(sp)
   258ac:	1441da16 	blt	r2,r17,26018 <___vfprintf_internal_r+0xc44>
   258b0:	ad400204 	addi	r21,r21,8
   258b4:	d9015017 	ldw	r4,1344(sp)
   258b8:	20000b1e 	bne	r4,zero,258e8 <___vfprintf_internal_r+0x514>
   258bc:	d8800444 	addi	r2,sp,17
   258c0:	94800084 	addi	r18,r18,2
   258c4:	8c400044 	addi	r17,r17,1
   258c8:	a8800015 	stw	r2,0(r21)
   258cc:	00c00084 	movi	r3,2
   258d0:	008001c4 	movi	r2,7
   258d4:	a8c00115 	stw	r3,4(r21)
   258d8:	dc800e15 	stw	r18,56(sp)
   258dc:	dc400d15 	stw	r17,52(sp)
   258e0:	1441c216 	blt	r2,r17,25fec <___vfprintf_internal_r+0xc18>
   258e4:	ad400204 	addi	r21,r21,8
   258e8:	d9414e17 	ldw	r5,1336(sp)
   258ec:	00802004 	movi	r2,128
   258f0:	2880b126 	beq	r5,r2,25bb8 <___vfprintf_internal_r+0x7e4>
   258f4:	d8c14617 	ldw	r3,1304(sp)
   258f8:	19e1c83a 	sub	r16,r3,r7
   258fc:	0400260e 	bge	zero,r16,25998 <___vfprintf_internal_r+0x5c4>
   25900:	00800404 	movi	r2,16
   25904:	1403c90e 	bge	r2,r16,2682c <___vfprintf_internal_r+0x1458>
   25908:	1027883a 	mov	r19,r2
   2590c:	070000f4 	movhi	fp,3
   25910:	e73fa584 	addi	fp,fp,-362
   25914:	050001c4 	movi	r20,7
   25918:	00000306 	br	25928 <___vfprintf_internal_r+0x554>
   2591c:	843ffc04 	addi	r16,r16,-16
   25920:	ad400204 	addi	r21,r21,8
   25924:	9c00130e 	bge	r19,r16,25974 <___vfprintf_internal_r+0x5a0>
   25928:	94800404 	addi	r18,r18,16
   2592c:	8c400044 	addi	r17,r17,1
   25930:	af000015 	stw	fp,0(r21)
   25934:	acc00115 	stw	r19,4(r21)
   25938:	dc800e15 	stw	r18,56(sp)
   2593c:	dc400d15 	stw	r17,52(sp)
   25940:	a47ff60e 	bge	r20,r17,2591c <___vfprintf_internal_r+0x548>
   25944:	d9014f17 	ldw	r4,1340(sp)
   25948:	b00b883a 	mov	r5,r22
   2594c:	d9800c04 	addi	r6,sp,48
   25950:	d9c15115 	stw	r7,1348(sp)
   25954:	002537c0 	call	2537c <__sprint_r>
   25958:	d9c15117 	ldw	r7,1348(sp)
   2595c:	1000551e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25960:	843ffc04 	addi	r16,r16,-16
   25964:	dc800e17 	ldw	r18,56(sp)
   25968:	dc400d17 	ldw	r17,52(sp)
   2596c:	dd401904 	addi	r21,sp,100
   25970:	9c3fed16 	blt	r19,r16,25928 <___vfprintf_internal_r+0x554>
   25974:	9425883a 	add	r18,r18,r16
   25978:	8c400044 	addi	r17,r17,1
   2597c:	008001c4 	movi	r2,7
   25980:	af000015 	stw	fp,0(r21)
   25984:	ac000115 	stw	r16,4(r21)
   25988:	dc800e15 	stw	r18,56(sp)
   2598c:	dc400d15 	stw	r17,52(sp)
   25990:	14418216 	blt	r2,r17,25f9c <___vfprintf_internal_r+0xbc8>
   25994:	ad400204 	addi	r21,r21,8
   25998:	d9014c17 	ldw	r4,1328(sp)
   2599c:	2080400c 	andi	r2,r4,256
   259a0:	10004a1e 	bne	r2,zero,25acc <___vfprintf_internal_r+0x6f8>
   259a4:	d9414117 	ldw	r5,1284(sp)
   259a8:	91e5883a 	add	r18,r18,r7
   259ac:	8c400044 	addi	r17,r17,1
   259b0:	008001c4 	movi	r2,7
   259b4:	a9400015 	stw	r5,0(r21)
   259b8:	a9c00115 	stw	r7,4(r21)
   259bc:	dc800e15 	stw	r18,56(sp)
   259c0:	dc400d15 	stw	r17,52(sp)
   259c4:	14416716 	blt	r2,r17,25f64 <___vfprintf_internal_r+0xb90>
   259c8:	a8c00204 	addi	r3,r21,8
   259cc:	d9814c17 	ldw	r6,1328(sp)
   259d0:	3080010c 	andi	r2,r6,4
   259d4:	10002826 	beq	r2,zero,25a78 <___vfprintf_internal_r+0x6a4>
   259d8:	d8814a17 	ldw	r2,1320(sp)
   259dc:	d9014517 	ldw	r4,1300(sp)
   259e0:	1121c83a 	sub	r16,r2,r4
   259e4:	0400240e 	bge	zero,r16,25a78 <___vfprintf_internal_r+0x6a4>
   259e8:	00800404 	movi	r2,16
   259ec:	14044f0e 	bge	r2,r16,26b2c <___vfprintf_internal_r+0x1758>
   259f0:	dc400d17 	ldw	r17,52(sp)
   259f4:	1027883a 	mov	r19,r2
   259f8:	070000f4 	movhi	fp,3
   259fc:	e73fa984 	addi	fp,fp,-346
   25a00:	050001c4 	movi	r20,7
   25a04:	00000306 	br	25a14 <___vfprintf_internal_r+0x640>
   25a08:	843ffc04 	addi	r16,r16,-16
   25a0c:	18c00204 	addi	r3,r3,8
   25a10:	9c00110e 	bge	r19,r16,25a58 <___vfprintf_internal_r+0x684>
   25a14:	94800404 	addi	r18,r18,16
   25a18:	8c400044 	addi	r17,r17,1
   25a1c:	1f000015 	stw	fp,0(r3)
   25a20:	1cc00115 	stw	r19,4(r3)
   25a24:	dc800e15 	stw	r18,56(sp)
   25a28:	dc400d15 	stw	r17,52(sp)
   25a2c:	a47ff60e 	bge	r20,r17,25a08 <___vfprintf_internal_r+0x634>
   25a30:	d9014f17 	ldw	r4,1340(sp)
   25a34:	b00b883a 	mov	r5,r22
   25a38:	d9800c04 	addi	r6,sp,48
   25a3c:	002537c0 	call	2537c <__sprint_r>
   25a40:	10001c1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25a44:	843ffc04 	addi	r16,r16,-16
   25a48:	dc800e17 	ldw	r18,56(sp)
   25a4c:	dc400d17 	ldw	r17,52(sp)
   25a50:	d8c01904 	addi	r3,sp,100
   25a54:	9c3fef16 	blt	r19,r16,25a14 <___vfprintf_internal_r+0x640>
   25a58:	9425883a 	add	r18,r18,r16
   25a5c:	8c400044 	addi	r17,r17,1
   25a60:	008001c4 	movi	r2,7
   25a64:	1f000015 	stw	fp,0(r3)
   25a68:	1c000115 	stw	r16,4(r3)
   25a6c:	dc800e15 	stw	r18,56(sp)
   25a70:	dc400d15 	stw	r17,52(sp)
   25a74:	1440cb16 	blt	r2,r17,25da4 <___vfprintf_internal_r+0x9d0>
   25a78:	d8814a17 	ldw	r2,1320(sp)
   25a7c:	d9414517 	ldw	r5,1300(sp)
   25a80:	1140010e 	bge	r2,r5,25a88 <___vfprintf_internal_r+0x6b4>
   25a84:	2805883a 	mov	r2,r5
   25a88:	d9814b17 	ldw	r6,1324(sp)
   25a8c:	308d883a 	add	r6,r6,r2
   25a90:	d9814b15 	stw	r6,1324(sp)
   25a94:	90013b1e 	bne	r18,zero,25f84 <___vfprintf_internal_r+0xbb0>
   25a98:	d9c14017 	ldw	r7,1280(sp)
   25a9c:	dd401904 	addi	r21,sp,100
   25aa0:	d8000d15 	stw	zero,52(sp)
   25aa4:	003ea706 	br	25544 <___vfprintf_internal_r+0x170>
   25aa8:	d8800e17 	ldw	r2,56(sp)
   25aac:	10053f1e 	bne	r2,zero,26fac <___vfprintf_internal_r+0x1bd8>
   25ab0:	d8000d15 	stw	zero,52(sp)
   25ab4:	b080030b 	ldhu	r2,12(r22)
   25ab8:	1080100c 	andi	r2,r2,64
   25abc:	103e8726 	beq	r2,zero,254dc <___vfprintf_internal_r+0x108>
   25ac0:	00bfffc4 	movi	r2,-1
   25ac4:	d8814b15 	stw	r2,1324(sp)
   25ac8:	003e8406 	br	254dc <___vfprintf_internal_r+0x108>
   25acc:	d9814d17 	ldw	r6,1332(sp)
   25ad0:	00801944 	movi	r2,101
   25ad4:	11806e16 	blt	r2,r6,25c90 <___vfprintf_internal_r+0x8bc>
   25ad8:	d9414717 	ldw	r5,1308(sp)
   25adc:	00c00044 	movi	r3,1
   25ae0:	1943430e 	bge	r3,r5,267f0 <___vfprintf_internal_r+0x141c>
   25ae4:	d8814117 	ldw	r2,1284(sp)
   25ae8:	94800044 	addi	r18,r18,1
   25aec:	8c400044 	addi	r17,r17,1
   25af0:	a8800015 	stw	r2,0(r21)
   25af4:	008001c4 	movi	r2,7
   25af8:	a8c00115 	stw	r3,4(r21)
   25afc:	dc800e15 	stw	r18,56(sp)
   25b00:	dc400d15 	stw	r17,52(sp)
   25b04:	1441ca16 	blt	r2,r17,26230 <___vfprintf_internal_r+0xe5c>
   25b08:	a8c00204 	addi	r3,r21,8
   25b0c:	d9014917 	ldw	r4,1316(sp)
   25b10:	00800044 	movi	r2,1
   25b14:	94800044 	addi	r18,r18,1
   25b18:	8c400044 	addi	r17,r17,1
   25b1c:	18800115 	stw	r2,4(r3)
   25b20:	008001c4 	movi	r2,7
   25b24:	19000015 	stw	r4,0(r3)
   25b28:	dc800e15 	stw	r18,56(sp)
   25b2c:	dc400d15 	stw	r17,52(sp)
   25b30:	1441b616 	blt	r2,r17,2620c <___vfprintf_internal_r+0xe38>
   25b34:	1cc00204 	addi	r19,r3,8
   25b38:	d9014217 	ldw	r4,1288(sp)
   25b3c:	d9414317 	ldw	r5,1292(sp)
   25b40:	000d883a 	mov	r6,zero
   25b44:	000f883a 	mov	r7,zero
   25b48:	00244280 	call	24428 <__nedf2>
   25b4c:	10017426 	beq	r2,zero,26120 <___vfprintf_internal_r+0xd4c>
   25b50:	d9414717 	ldw	r5,1308(sp)
   25b54:	d9814117 	ldw	r6,1284(sp)
   25b58:	8c400044 	addi	r17,r17,1
   25b5c:	2c85883a 	add	r2,r5,r18
   25b60:	14bfffc4 	addi	r18,r2,-1
   25b64:	28bfffc4 	addi	r2,r5,-1
   25b68:	30c00044 	addi	r3,r6,1
   25b6c:	98800115 	stw	r2,4(r19)
   25b70:	008001c4 	movi	r2,7
   25b74:	98c00015 	stw	r3,0(r19)
   25b78:	dc800e15 	stw	r18,56(sp)
   25b7c:	dc400d15 	stw	r17,52(sp)
   25b80:	14418e16 	blt	r2,r17,261bc <___vfprintf_internal_r+0xde8>
   25b84:	9cc00204 	addi	r19,r19,8
   25b88:	d9414817 	ldw	r5,1312(sp)
   25b8c:	d8800804 	addi	r2,sp,32
   25b90:	8c400044 	addi	r17,r17,1
   25b94:	9165883a 	add	r18,r18,r5
   25b98:	98800015 	stw	r2,0(r19)
   25b9c:	008001c4 	movi	r2,7
   25ba0:	99400115 	stw	r5,4(r19)
   25ba4:	dc800e15 	stw	r18,56(sp)
   25ba8:	dc400d15 	stw	r17,52(sp)
   25bac:	1440ed16 	blt	r2,r17,25f64 <___vfprintf_internal_r+0xb90>
   25bb0:	98c00204 	addi	r3,r19,8
   25bb4:	003f8506 	br	259cc <___vfprintf_internal_r+0x5f8>
   25bb8:	d9814a17 	ldw	r6,1320(sp)
   25bbc:	d8814517 	ldw	r2,1300(sp)
   25bc0:	30a1c83a 	sub	r16,r6,r2
   25bc4:	043f4b0e 	bge	zero,r16,258f4 <___vfprintf_internal_r+0x520>
   25bc8:	00800404 	movi	r2,16
   25bcc:	1404340e 	bge	r2,r16,26ca0 <___vfprintf_internal_r+0x18cc>
   25bd0:	1027883a 	mov	r19,r2
   25bd4:	070000f4 	movhi	fp,3
   25bd8:	e73fa584 	addi	fp,fp,-362
   25bdc:	050001c4 	movi	r20,7
   25be0:	00000306 	br	25bf0 <___vfprintf_internal_r+0x81c>
   25be4:	843ffc04 	addi	r16,r16,-16
   25be8:	ad400204 	addi	r21,r21,8
   25bec:	9c00130e 	bge	r19,r16,25c3c <___vfprintf_internal_r+0x868>
   25bf0:	94800404 	addi	r18,r18,16
   25bf4:	8c400044 	addi	r17,r17,1
   25bf8:	af000015 	stw	fp,0(r21)
   25bfc:	acc00115 	stw	r19,4(r21)
   25c00:	dc800e15 	stw	r18,56(sp)
   25c04:	dc400d15 	stw	r17,52(sp)
   25c08:	a47ff60e 	bge	r20,r17,25be4 <___vfprintf_internal_r+0x810>
   25c0c:	d9014f17 	ldw	r4,1340(sp)
   25c10:	b00b883a 	mov	r5,r22
   25c14:	d9800c04 	addi	r6,sp,48
   25c18:	d9c15115 	stw	r7,1348(sp)
   25c1c:	002537c0 	call	2537c <__sprint_r>
   25c20:	d9c15117 	ldw	r7,1348(sp)
   25c24:	103fa31e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25c28:	843ffc04 	addi	r16,r16,-16
   25c2c:	dc800e17 	ldw	r18,56(sp)
   25c30:	dc400d17 	ldw	r17,52(sp)
   25c34:	dd401904 	addi	r21,sp,100
   25c38:	9c3fed16 	blt	r19,r16,25bf0 <___vfprintf_internal_r+0x81c>
   25c3c:	9425883a 	add	r18,r18,r16
   25c40:	8c400044 	addi	r17,r17,1
   25c44:	008001c4 	movi	r2,7
   25c48:	af000015 	stw	fp,0(r21)
   25c4c:	ac000115 	stw	r16,4(r21)
   25c50:	dc800e15 	stw	r18,56(sp)
   25c54:	dc400d15 	stw	r17,52(sp)
   25c58:	14416116 	blt	r2,r17,261e0 <___vfprintf_internal_r+0xe0c>
   25c5c:	ad400204 	addi	r21,r21,8
   25c60:	003f2406 	br	258f4 <___vfprintf_internal_r+0x520>
   25c64:	d9014f17 	ldw	r4,1340(sp)
   25c68:	0028e440 	call	28e44 <__sinit>
   25c6c:	d9c15117 	ldw	r7,1348(sp)
   25c70:	003def06 	br	25430 <___vfprintf_internal_r+0x5c>
   25c74:	d9014f17 	ldw	r4,1340(sp)
   25c78:	b00b883a 	mov	r5,r22
   25c7c:	d9c15115 	stw	r7,1348(sp)
   25c80:	00272a40 	call	272a4 <__swsetup_r>
   25c84:	d9c15117 	ldw	r7,1348(sp)
   25c88:	103dee26 	beq	r2,zero,25444 <___vfprintf_internal_r+0x70>
   25c8c:	003f8c06 	br	25ac0 <___vfprintf_internal_r+0x6ec>
   25c90:	d9014217 	ldw	r4,1288(sp)
   25c94:	d9414317 	ldw	r5,1292(sp)
   25c98:	000d883a 	mov	r6,zero
   25c9c:	000f883a 	mov	r7,zero
   25ca0:	00243a00 	call	243a0 <__eqdf2>
   25ca4:	1000f21e 	bne	r2,zero,26070 <___vfprintf_internal_r+0xc9c>
   25ca8:	008000f4 	movhi	r2,3
   25cac:	10bfa504 	addi	r2,r2,-364
   25cb0:	94800044 	addi	r18,r18,1
   25cb4:	8c400044 	addi	r17,r17,1
   25cb8:	a8800015 	stw	r2,0(r21)
   25cbc:	00c00044 	movi	r3,1
   25cc0:	008001c4 	movi	r2,7
   25cc4:	a8c00115 	stw	r3,4(r21)
   25cc8:	dc800e15 	stw	r18,56(sp)
   25ccc:	dc400d15 	stw	r17,52(sp)
   25cd0:	1442fa16 	blt	r2,r17,268bc <___vfprintf_internal_r+0x14e8>
   25cd4:	a8c00204 	addi	r3,r21,8
   25cd8:	d8800517 	ldw	r2,20(sp)
   25cdc:	d9014717 	ldw	r4,1308(sp)
   25ce0:	11015c0e 	bge	r2,r4,26254 <___vfprintf_internal_r+0xe80>
   25ce4:	dc400d17 	ldw	r17,52(sp)
   25ce8:	d9814917 	ldw	r6,1316(sp)
   25cec:	00800044 	movi	r2,1
   25cf0:	94800044 	addi	r18,r18,1
   25cf4:	8c400044 	addi	r17,r17,1
   25cf8:	18800115 	stw	r2,4(r3)
   25cfc:	008001c4 	movi	r2,7
   25d00:	19800015 	stw	r6,0(r3)
   25d04:	dc800e15 	stw	r18,56(sp)
   25d08:	dc400d15 	stw	r17,52(sp)
   25d0c:	14431016 	blt	r2,r17,26950 <___vfprintf_internal_r+0x157c>
   25d10:	18c00204 	addi	r3,r3,8
   25d14:	d8814717 	ldw	r2,1308(sp)
   25d18:	143fffc4 	addi	r16,r2,-1
   25d1c:	043f2b0e 	bge	zero,r16,259cc <___vfprintf_internal_r+0x5f8>
   25d20:	00800404 	movi	r2,16
   25d24:	1402a20e 	bge	r2,r16,267b0 <___vfprintf_internal_r+0x13dc>
   25d28:	dc400d17 	ldw	r17,52(sp)
   25d2c:	1027883a 	mov	r19,r2
   25d30:	070000f4 	movhi	fp,3
   25d34:	e73fa584 	addi	fp,fp,-362
   25d38:	050001c4 	movi	r20,7
   25d3c:	00000306 	br	25d4c <___vfprintf_internal_r+0x978>
   25d40:	18c00204 	addi	r3,r3,8
   25d44:	843ffc04 	addi	r16,r16,-16
   25d48:	9c029c0e 	bge	r19,r16,267bc <___vfprintf_internal_r+0x13e8>
   25d4c:	94800404 	addi	r18,r18,16
   25d50:	8c400044 	addi	r17,r17,1
   25d54:	1f000015 	stw	fp,0(r3)
   25d58:	1cc00115 	stw	r19,4(r3)
   25d5c:	dc800e15 	stw	r18,56(sp)
   25d60:	dc400d15 	stw	r17,52(sp)
   25d64:	a47ff60e 	bge	r20,r17,25d40 <___vfprintf_internal_r+0x96c>
   25d68:	d9014f17 	ldw	r4,1340(sp)
   25d6c:	b00b883a 	mov	r5,r22
   25d70:	d9800c04 	addi	r6,sp,48
   25d74:	002537c0 	call	2537c <__sprint_r>
   25d78:	103f4e1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25d7c:	dc800e17 	ldw	r18,56(sp)
   25d80:	dc400d17 	ldw	r17,52(sp)
   25d84:	d8c01904 	addi	r3,sp,100
   25d88:	003fee06 	br	25d44 <___vfprintf_internal_r+0x970>
   25d8c:	d8802c0b 	ldhu	r2,176(sp)
   25d90:	00ffffc4 	movi	r3,-1
   25d94:	d8c14b15 	stw	r3,1324(sp)
   25d98:	1080100c 	andi	r2,r2,64
   25d9c:	103dcc1e 	bne	r2,zero,254d0 <___vfprintf_internal_r+0xfc>
   25da0:	003dce06 	br	254dc <___vfprintf_internal_r+0x108>
   25da4:	d9014f17 	ldw	r4,1340(sp)
   25da8:	b00b883a 	mov	r5,r22
   25dac:	d9800c04 	addi	r6,sp,48
   25db0:	002537c0 	call	2537c <__sprint_r>
   25db4:	103f3f1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25db8:	dc800e17 	ldw	r18,56(sp)
   25dbc:	003f2e06 	br	25a78 <___vfprintf_internal_r+0x6a4>
   25dc0:	d9414c17 	ldw	r5,1328(sp)
   25dc4:	29400414 	ori	r5,r5,16
   25dc8:	d9414c15 	stw	r5,1328(sp)
   25dcc:	d9814c17 	ldw	r6,1328(sp)
   25dd0:	3080080c 	andi	r2,r6,32
   25dd4:	10014f1e 	bne	r2,zero,26314 <___vfprintf_internal_r+0xf40>
   25dd8:	d8c14c17 	ldw	r3,1328(sp)
   25ddc:	1880040c 	andi	r2,r3,16
   25de0:	1002ea1e 	bne	r2,zero,2698c <___vfprintf_internal_r+0x15b8>
   25de4:	d9014c17 	ldw	r4,1328(sp)
   25de8:	2080100c 	andi	r2,r4,64
   25dec:	1002e726 	beq	r2,zero,2698c <___vfprintf_internal_r+0x15b8>
   25df0:	3880000f 	ldh	r2,0(r7)
   25df4:	39c00104 	addi	r7,r7,4
   25df8:	d9c14015 	stw	r7,1280(sp)
   25dfc:	1023d7fa 	srai	r17,r2,31
   25e00:	1021883a 	mov	r16,r2
   25e04:	88037216 	blt	r17,zero,26bd0 <___vfprintf_internal_r+0x17fc>
   25e08:	01000044 	movi	r4,1
   25e0c:	98000416 	blt	r19,zero,25e20 <___vfprintf_internal_r+0xa4c>
   25e10:	d8c14c17 	ldw	r3,1328(sp)
   25e14:	00bfdfc4 	movi	r2,-129
   25e18:	1886703a 	and	r3,r3,r2
   25e1c:	d8c14c15 	stw	r3,1328(sp)
   25e20:	8444b03a 	or	r2,r16,r17
   25e24:	1002261e 	bne	r2,zero,266c0 <___vfprintf_internal_r+0x12ec>
   25e28:	9802251e 	bne	r19,zero,266c0 <___vfprintf_internal_r+0x12ec>
   25e2c:	20803fcc 	andi	r2,r4,255
   25e30:	10029b26 	beq	r2,zero,268a0 <___vfprintf_internal_r+0x14cc>
   25e34:	d8c01904 	addi	r3,sp,100
   25e38:	dd000f04 	addi	r20,sp,60
   25e3c:	d8c14115 	stw	r3,1284(sp)
   25e40:	d8c14117 	ldw	r3,1284(sp)
   25e44:	dcc14515 	stw	r19,1300(sp)
   25e48:	a0c5c83a 	sub	r2,r20,r3
   25e4c:	11c00a04 	addi	r7,r2,40
   25e50:	99c0010e 	bge	r19,r7,25e58 <___vfprintf_internal_r+0xa84>
   25e54:	d9c14515 	stw	r7,1300(sp)
   25e58:	dcc14615 	stw	r19,1304(sp)
   25e5c:	d8800407 	ldb	r2,16(sp)
   25e60:	103e4c26 	beq	r2,zero,25794 <___vfprintf_internal_r+0x3c0>
   25e64:	d8814517 	ldw	r2,1300(sp)
   25e68:	10800044 	addi	r2,r2,1
   25e6c:	d8814515 	stw	r2,1300(sp)
   25e70:	003e4806 	br	25794 <___vfprintf_internal_r+0x3c0>
   25e74:	d9814c17 	ldw	r6,1328(sp)
   25e78:	31800414 	ori	r6,r6,16
   25e7c:	d9814c15 	stw	r6,1328(sp)
   25e80:	d8c14c17 	ldw	r3,1328(sp)
   25e84:	1880080c 	andi	r2,r3,32
   25e88:	1001271e 	bne	r2,zero,26328 <___vfprintf_internal_r+0xf54>
   25e8c:	d9414c17 	ldw	r5,1328(sp)
   25e90:	2880040c 	andi	r2,r5,16
   25e94:	1002b61e 	bne	r2,zero,26970 <___vfprintf_internal_r+0x159c>
   25e98:	d9814c17 	ldw	r6,1328(sp)
   25e9c:	3080100c 	andi	r2,r6,64
   25ea0:	1002b326 	beq	r2,zero,26970 <___vfprintf_internal_r+0x159c>
   25ea4:	3c00000b 	ldhu	r16,0(r7)
   25ea8:	0009883a 	mov	r4,zero
   25eac:	39c00104 	addi	r7,r7,4
   25eb0:	0023883a 	mov	r17,zero
   25eb4:	d9c14015 	stw	r7,1280(sp)
   25eb8:	d8000405 	stb	zero,16(sp)
   25ebc:	003fd306 	br	25e0c <___vfprintf_internal_r+0xa38>
   25ec0:	d9014c17 	ldw	r4,1328(sp)
   25ec4:	21000414 	ori	r4,r4,16
   25ec8:	d9014c15 	stw	r4,1328(sp)
   25ecc:	d9414c17 	ldw	r5,1328(sp)
   25ed0:	2880080c 	andi	r2,r5,32
   25ed4:	1001081e 	bne	r2,zero,262f8 <___vfprintf_internal_r+0xf24>
   25ed8:	d8c14c17 	ldw	r3,1328(sp)
   25edc:	1880040c 	andi	r2,r3,16
   25ee0:	1002b01e 	bne	r2,zero,269a4 <___vfprintf_internal_r+0x15d0>
   25ee4:	d9014c17 	ldw	r4,1328(sp)
   25ee8:	2080100c 	andi	r2,r4,64
   25eec:	1002ad26 	beq	r2,zero,269a4 <___vfprintf_internal_r+0x15d0>
   25ef0:	3c00000b 	ldhu	r16,0(r7)
   25ef4:	01000044 	movi	r4,1
   25ef8:	39c00104 	addi	r7,r7,4
   25efc:	0023883a 	mov	r17,zero
   25f00:	d9c14015 	stw	r7,1280(sp)
   25f04:	d8000405 	stb	zero,16(sp)
   25f08:	003fc006 	br	25e0c <___vfprintf_internal_r+0xa38>
   25f0c:	d9014f17 	ldw	r4,1340(sp)
   25f10:	b00b883a 	mov	r5,r22
   25f14:	d9800c04 	addi	r6,sp,48
   25f18:	002537c0 	call	2537c <__sprint_r>
   25f1c:	103ee51e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25f20:	dc800e17 	ldw	r18,56(sp)
   25f24:	d8c01904 	addi	r3,sp,100
   25f28:	d9814c17 	ldw	r6,1328(sp)
   25f2c:	3080004c 	andi	r2,r6,1
   25f30:	1005003a 	cmpeq	r2,r2,zero
   25f34:	103ea51e 	bne	r2,zero,259cc <___vfprintf_internal_r+0x5f8>
   25f38:	00800044 	movi	r2,1
   25f3c:	dc400d17 	ldw	r17,52(sp)
   25f40:	18800115 	stw	r2,4(r3)
   25f44:	d8814917 	ldw	r2,1316(sp)
   25f48:	94800044 	addi	r18,r18,1
   25f4c:	8c400044 	addi	r17,r17,1
   25f50:	18800015 	stw	r2,0(r3)
   25f54:	008001c4 	movi	r2,7
   25f58:	dc800e15 	stw	r18,56(sp)
   25f5c:	dc400d15 	stw	r17,52(sp)
   25f60:	14421e0e 	bge	r2,r17,267dc <___vfprintf_internal_r+0x1408>
   25f64:	d9014f17 	ldw	r4,1340(sp)
   25f68:	b00b883a 	mov	r5,r22
   25f6c:	d9800c04 	addi	r6,sp,48
   25f70:	002537c0 	call	2537c <__sprint_r>
   25f74:	103ecf1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25f78:	dc800e17 	ldw	r18,56(sp)
   25f7c:	d8c01904 	addi	r3,sp,100
   25f80:	003e9206 	br	259cc <___vfprintf_internal_r+0x5f8>
   25f84:	d9014f17 	ldw	r4,1340(sp)
   25f88:	b00b883a 	mov	r5,r22
   25f8c:	d9800c04 	addi	r6,sp,48
   25f90:	002537c0 	call	2537c <__sprint_r>
   25f94:	103ec026 	beq	r2,zero,25a98 <___vfprintf_internal_r+0x6c4>
   25f98:	003ec606 	br	25ab4 <___vfprintf_internal_r+0x6e0>
   25f9c:	d9014f17 	ldw	r4,1340(sp)
   25fa0:	b00b883a 	mov	r5,r22
   25fa4:	d9800c04 	addi	r6,sp,48
   25fa8:	d9c15115 	stw	r7,1348(sp)
   25fac:	002537c0 	call	2537c <__sprint_r>
   25fb0:	d9c15117 	ldw	r7,1348(sp)
   25fb4:	103ebf1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25fb8:	dc800e17 	ldw	r18,56(sp)
   25fbc:	dc400d17 	ldw	r17,52(sp)
   25fc0:	dd401904 	addi	r21,sp,100
   25fc4:	003e7406 	br	25998 <___vfprintf_internal_r+0x5c4>
   25fc8:	d9014f17 	ldw	r4,1340(sp)
   25fcc:	b00b883a 	mov	r5,r22
   25fd0:	d9800c04 	addi	r6,sp,48
   25fd4:	d9c15115 	stw	r7,1348(sp)
   25fd8:	002537c0 	call	2537c <__sprint_r>
   25fdc:	d9c15117 	ldw	r7,1348(sp)
   25fe0:	103eb41e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   25fe4:	dd401904 	addi	r21,sp,100
   25fe8:	003d6d06 	br	255a0 <___vfprintf_internal_r+0x1cc>
   25fec:	d9014f17 	ldw	r4,1340(sp)
   25ff0:	b00b883a 	mov	r5,r22
   25ff4:	d9800c04 	addi	r6,sp,48
   25ff8:	d9c15115 	stw	r7,1348(sp)
   25ffc:	002537c0 	call	2537c <__sprint_r>
   26000:	d9c15117 	ldw	r7,1348(sp)
   26004:	103eab1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26008:	dc800e17 	ldw	r18,56(sp)
   2600c:	dc400d17 	ldw	r17,52(sp)
   26010:	dd401904 	addi	r21,sp,100
   26014:	003e3406 	br	258e8 <___vfprintf_internal_r+0x514>
   26018:	d9014f17 	ldw	r4,1340(sp)
   2601c:	b00b883a 	mov	r5,r22
   26020:	d9800c04 	addi	r6,sp,48
   26024:	d9c15115 	stw	r7,1348(sp)
   26028:	002537c0 	call	2537c <__sprint_r>
   2602c:	d9c15117 	ldw	r7,1348(sp)
   26030:	103ea01e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26034:	dc800e17 	ldw	r18,56(sp)
   26038:	dc400d17 	ldw	r17,52(sp)
   2603c:	dd401904 	addi	r21,sp,100
   26040:	003e1c06 	br	258b4 <___vfprintf_internal_r+0x4e0>
   26044:	d9014f17 	ldw	r4,1340(sp)
   26048:	b00b883a 	mov	r5,r22
   2604c:	d9800c04 	addi	r6,sp,48
   26050:	d9c15115 	stw	r7,1348(sp)
   26054:	002537c0 	call	2537c <__sprint_r>
   26058:	d9c15117 	ldw	r7,1348(sp)
   2605c:	103e951e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26060:	dc800e17 	ldw	r18,56(sp)
   26064:	dc400d17 	ldw	r17,52(sp)
   26068:	dd401904 	addi	r21,sp,100
   2606c:	003e0406 	br	25880 <___vfprintf_internal_r+0x4ac>
   26070:	d9000517 	ldw	r4,20(sp)
   26074:	0102520e 	bge	zero,r4,269c0 <___vfprintf_internal_r+0x15ec>
   26078:	d9814717 	ldw	r6,1308(sp)
   2607c:	21807a16 	blt	r4,r6,26268 <___vfprintf_internal_r+0xe94>
   26080:	d8814117 	ldw	r2,1284(sp)
   26084:	91a5883a 	add	r18,r18,r6
   26088:	8c400044 	addi	r17,r17,1
   2608c:	a8800015 	stw	r2,0(r21)
   26090:	008001c4 	movi	r2,7
   26094:	a9800115 	stw	r6,4(r21)
   26098:	dc800e15 	stw	r18,56(sp)
   2609c:	dc400d15 	stw	r17,52(sp)
   260a0:	1442f616 	blt	r2,r17,26c7c <___vfprintf_internal_r+0x18a8>
   260a4:	a8c00204 	addi	r3,r21,8
   260a8:	d9414717 	ldw	r5,1308(sp)
   260ac:	2161c83a 	sub	r16,r4,r5
   260b0:	043f9d0e 	bge	zero,r16,25f28 <___vfprintf_internal_r+0xb54>
   260b4:	00800404 	movi	r2,16
   260b8:	1402130e 	bge	r2,r16,26908 <___vfprintf_internal_r+0x1534>
   260bc:	dc400d17 	ldw	r17,52(sp)
   260c0:	1027883a 	mov	r19,r2
   260c4:	070000f4 	movhi	fp,3
   260c8:	e73fa584 	addi	fp,fp,-362
   260cc:	050001c4 	movi	r20,7
   260d0:	00000306 	br	260e0 <___vfprintf_internal_r+0xd0c>
   260d4:	18c00204 	addi	r3,r3,8
   260d8:	843ffc04 	addi	r16,r16,-16
   260dc:	9c020d0e 	bge	r19,r16,26914 <___vfprintf_internal_r+0x1540>
   260e0:	94800404 	addi	r18,r18,16
   260e4:	8c400044 	addi	r17,r17,1
   260e8:	1f000015 	stw	fp,0(r3)
   260ec:	1cc00115 	stw	r19,4(r3)
   260f0:	dc800e15 	stw	r18,56(sp)
   260f4:	dc400d15 	stw	r17,52(sp)
   260f8:	a47ff60e 	bge	r20,r17,260d4 <___vfprintf_internal_r+0xd00>
   260fc:	d9014f17 	ldw	r4,1340(sp)
   26100:	b00b883a 	mov	r5,r22
   26104:	d9800c04 	addi	r6,sp,48
   26108:	002537c0 	call	2537c <__sprint_r>
   2610c:	103e691e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26110:	dc800e17 	ldw	r18,56(sp)
   26114:	dc400d17 	ldw	r17,52(sp)
   26118:	d8c01904 	addi	r3,sp,100
   2611c:	003fee06 	br	260d8 <___vfprintf_internal_r+0xd04>
   26120:	d8814717 	ldw	r2,1308(sp)
   26124:	143fffc4 	addi	r16,r2,-1
   26128:	043e970e 	bge	zero,r16,25b88 <___vfprintf_internal_r+0x7b4>
   2612c:	00800404 	movi	r2,16
   26130:	1400180e 	bge	r2,r16,26194 <___vfprintf_internal_r+0xdc0>
   26134:	1029883a 	mov	r20,r2
   26138:	070000f4 	movhi	fp,3
   2613c:	e73fa584 	addi	fp,fp,-362
   26140:	054001c4 	movi	r21,7
   26144:	00000306 	br	26154 <___vfprintf_internal_r+0xd80>
   26148:	9cc00204 	addi	r19,r19,8
   2614c:	843ffc04 	addi	r16,r16,-16
   26150:	a400120e 	bge	r20,r16,2619c <___vfprintf_internal_r+0xdc8>
   26154:	94800404 	addi	r18,r18,16
   26158:	8c400044 	addi	r17,r17,1
   2615c:	9f000015 	stw	fp,0(r19)
   26160:	9d000115 	stw	r20,4(r19)
   26164:	dc800e15 	stw	r18,56(sp)
   26168:	dc400d15 	stw	r17,52(sp)
   2616c:	ac7ff60e 	bge	r21,r17,26148 <___vfprintf_internal_r+0xd74>
   26170:	d9014f17 	ldw	r4,1340(sp)
   26174:	b00b883a 	mov	r5,r22
   26178:	d9800c04 	addi	r6,sp,48
   2617c:	002537c0 	call	2537c <__sprint_r>
   26180:	103e4c1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26184:	dc800e17 	ldw	r18,56(sp)
   26188:	dc400d17 	ldw	r17,52(sp)
   2618c:	dcc01904 	addi	r19,sp,100
   26190:	003fee06 	br	2614c <___vfprintf_internal_r+0xd78>
   26194:	070000f4 	movhi	fp,3
   26198:	e73fa584 	addi	fp,fp,-362
   2619c:	9425883a 	add	r18,r18,r16
   261a0:	8c400044 	addi	r17,r17,1
   261a4:	008001c4 	movi	r2,7
   261a8:	9f000015 	stw	fp,0(r19)
   261ac:	9c000115 	stw	r16,4(r19)
   261b0:	dc800e15 	stw	r18,56(sp)
   261b4:	dc400d15 	stw	r17,52(sp)
   261b8:	147e720e 	bge	r2,r17,25b84 <___vfprintf_internal_r+0x7b0>
   261bc:	d9014f17 	ldw	r4,1340(sp)
   261c0:	b00b883a 	mov	r5,r22
   261c4:	d9800c04 	addi	r6,sp,48
   261c8:	002537c0 	call	2537c <__sprint_r>
   261cc:	103e391e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   261d0:	dc800e17 	ldw	r18,56(sp)
   261d4:	dc400d17 	ldw	r17,52(sp)
   261d8:	dcc01904 	addi	r19,sp,100
   261dc:	003e6a06 	br	25b88 <___vfprintf_internal_r+0x7b4>
   261e0:	d9014f17 	ldw	r4,1340(sp)
   261e4:	b00b883a 	mov	r5,r22
   261e8:	d9800c04 	addi	r6,sp,48
   261ec:	d9c15115 	stw	r7,1348(sp)
   261f0:	002537c0 	call	2537c <__sprint_r>
   261f4:	d9c15117 	ldw	r7,1348(sp)
   261f8:	103e2e1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   261fc:	dc800e17 	ldw	r18,56(sp)
   26200:	dc400d17 	ldw	r17,52(sp)
   26204:	dd401904 	addi	r21,sp,100
   26208:	003dba06 	br	258f4 <___vfprintf_internal_r+0x520>
   2620c:	d9014f17 	ldw	r4,1340(sp)
   26210:	b00b883a 	mov	r5,r22
   26214:	d9800c04 	addi	r6,sp,48
   26218:	002537c0 	call	2537c <__sprint_r>
   2621c:	103e251e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26220:	dc800e17 	ldw	r18,56(sp)
   26224:	dc400d17 	ldw	r17,52(sp)
   26228:	dcc01904 	addi	r19,sp,100
   2622c:	003e4206 	br	25b38 <___vfprintf_internal_r+0x764>
   26230:	d9014f17 	ldw	r4,1340(sp)
   26234:	b00b883a 	mov	r5,r22
   26238:	d9800c04 	addi	r6,sp,48
   2623c:	002537c0 	call	2537c <__sprint_r>
   26240:	103e1c1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26244:	dc800e17 	ldw	r18,56(sp)
   26248:	dc400d17 	ldw	r17,52(sp)
   2624c:	d8c01904 	addi	r3,sp,100
   26250:	003e2e06 	br	25b0c <___vfprintf_internal_r+0x738>
   26254:	d9414c17 	ldw	r5,1328(sp)
   26258:	2880004c 	andi	r2,r5,1
   2625c:	1005003a 	cmpeq	r2,r2,zero
   26260:	103dda1e 	bne	r2,zero,259cc <___vfprintf_internal_r+0x5f8>
   26264:	003e9f06 	br	25ce4 <___vfprintf_internal_r+0x910>
   26268:	d8c14117 	ldw	r3,1284(sp)
   2626c:	9125883a 	add	r18,r18,r4
   26270:	8c400044 	addi	r17,r17,1
   26274:	008001c4 	movi	r2,7
   26278:	a8c00015 	stw	r3,0(r21)
   2627c:	a9000115 	stw	r4,4(r21)
   26280:	dc800e15 	stw	r18,56(sp)
   26284:	dc400d15 	stw	r17,52(sp)
   26288:	14426616 	blt	r2,r17,26c24 <___vfprintf_internal_r+0x1850>
   2628c:	a8c00204 	addi	r3,r21,8
   26290:	d9414917 	ldw	r5,1316(sp)
   26294:	00800044 	movi	r2,1
   26298:	94800044 	addi	r18,r18,1
   2629c:	8c400044 	addi	r17,r17,1
   262a0:	18800115 	stw	r2,4(r3)
   262a4:	008001c4 	movi	r2,7
   262a8:	19400015 	stw	r5,0(r3)
   262ac:	dc800e15 	stw	r18,56(sp)
   262b0:	dc400d15 	stw	r17,52(sp)
   262b4:	2021883a 	mov	r16,r4
   262b8:	14425016 	blt	r2,r17,26bfc <___vfprintf_internal_r+0x1828>
   262bc:	19400204 	addi	r5,r3,8
   262c0:	d9814717 	ldw	r6,1308(sp)
   262c4:	8c400044 	addi	r17,r17,1
   262c8:	dc400d15 	stw	r17,52(sp)
   262cc:	3107c83a 	sub	r3,r6,r4
   262d0:	d9014117 	ldw	r4,1284(sp)
   262d4:	90e5883a 	add	r18,r18,r3
   262d8:	28c00115 	stw	r3,4(r5)
   262dc:	8105883a 	add	r2,r16,r4
   262e0:	28800015 	stw	r2,0(r5)
   262e4:	008001c4 	movi	r2,7
   262e8:	dc800e15 	stw	r18,56(sp)
   262ec:	147f1d16 	blt	r2,r17,25f64 <___vfprintf_internal_r+0xb90>
   262f0:	28c00204 	addi	r3,r5,8
   262f4:	003db506 	br	259cc <___vfprintf_internal_r+0x5f8>
   262f8:	3c000017 	ldw	r16,0(r7)
   262fc:	3c400117 	ldw	r17,4(r7)
   26300:	39800204 	addi	r6,r7,8
   26304:	01000044 	movi	r4,1
   26308:	d9814015 	stw	r6,1280(sp)
   2630c:	d8000405 	stb	zero,16(sp)
   26310:	003ebe06 	br	25e0c <___vfprintf_internal_r+0xa38>
   26314:	3c000017 	ldw	r16,0(r7)
   26318:	3c400117 	ldw	r17,4(r7)
   2631c:	38800204 	addi	r2,r7,8
   26320:	d8814015 	stw	r2,1280(sp)
   26324:	003eb706 	br	25e04 <___vfprintf_internal_r+0xa30>
   26328:	3c000017 	ldw	r16,0(r7)
   2632c:	3c400117 	ldw	r17,4(r7)
   26330:	39000204 	addi	r4,r7,8
   26334:	d9014015 	stw	r4,1280(sp)
   26338:	0009883a 	mov	r4,zero
   2633c:	d8000405 	stb	zero,16(sp)
   26340:	003eb206 	br	25e0c <___vfprintf_internal_r+0xa38>
   26344:	38c00017 	ldw	r3,0(r7)
   26348:	39c00104 	addi	r7,r7,4
   2634c:	d8c14a15 	stw	r3,1320(sp)
   26350:	1800d10e 	bge	r3,zero,26698 <___vfprintf_internal_r+0x12c4>
   26354:	00c7c83a 	sub	r3,zero,r3
   26358:	d8c14a15 	stw	r3,1320(sp)
   2635c:	d9014c17 	ldw	r4,1328(sp)
   26360:	b8c00007 	ldb	r3,0(r23)
   26364:	21000114 	ori	r4,r4,4
   26368:	d9014c15 	stw	r4,1328(sp)
   2636c:	003c9806 	br	255d0 <___vfprintf_internal_r+0x1fc>
   26370:	d9814c17 	ldw	r6,1328(sp)
   26374:	3080080c 	andi	r2,r6,32
   26378:	1001f026 	beq	r2,zero,26b3c <___vfprintf_internal_r+0x1768>
   2637c:	d9014b17 	ldw	r4,1324(sp)
   26380:	38800017 	ldw	r2,0(r7)
   26384:	39c00104 	addi	r7,r7,4
   26388:	d9c14015 	stw	r7,1280(sp)
   2638c:	2007d7fa 	srai	r3,r4,31
   26390:	d9c14017 	ldw	r7,1280(sp)
   26394:	11000015 	stw	r4,0(r2)
   26398:	10c00115 	stw	r3,4(r2)
   2639c:	003c6906 	br	25544 <___vfprintf_internal_r+0x170>
   263a0:	b8c00007 	ldb	r3,0(r23)
   263a4:	00801b04 	movi	r2,108
   263a8:	18824f26 	beq	r3,r2,26ce8 <___vfprintf_internal_r+0x1914>
   263ac:	d9414c17 	ldw	r5,1328(sp)
   263b0:	29400414 	ori	r5,r5,16
   263b4:	d9414c15 	stw	r5,1328(sp)
   263b8:	003c8506 	br	255d0 <___vfprintf_internal_r+0x1fc>
   263bc:	d9814c17 	ldw	r6,1328(sp)
   263c0:	b8c00007 	ldb	r3,0(r23)
   263c4:	31800814 	ori	r6,r6,32
   263c8:	d9814c15 	stw	r6,1328(sp)
   263cc:	003c8006 	br	255d0 <___vfprintf_internal_r+0x1fc>
   263d0:	d8814c17 	ldw	r2,1328(sp)
   263d4:	3c000017 	ldw	r16,0(r7)
   263d8:	00c01e04 	movi	r3,120
   263dc:	10800094 	ori	r2,r2,2
   263e0:	d8814c15 	stw	r2,1328(sp)
   263e4:	39c00104 	addi	r7,r7,4
   263e8:	014000f4 	movhi	r5,3
   263ec:	297f8e04 	addi	r5,r5,-456
   263f0:	00800c04 	movi	r2,48
   263f4:	0023883a 	mov	r17,zero
   263f8:	01000084 	movi	r4,2
   263fc:	d9c14015 	stw	r7,1280(sp)
   26400:	d8c14d15 	stw	r3,1332(sp)
   26404:	d9414415 	stw	r5,1296(sp)
   26408:	d8800445 	stb	r2,17(sp)
   2640c:	d8c00485 	stb	r3,18(sp)
   26410:	d8000405 	stb	zero,16(sp)
   26414:	003e7d06 	br	25e0c <___vfprintf_internal_r+0xa38>
   26418:	d8814c17 	ldw	r2,1328(sp)
   2641c:	b8c00007 	ldb	r3,0(r23)
   26420:	10801014 	ori	r2,r2,64
   26424:	d8814c15 	stw	r2,1328(sp)
   26428:	003c6906 	br	255d0 <___vfprintf_internal_r+0x1fc>
   2642c:	d9414c17 	ldw	r5,1328(sp)
   26430:	2880020c 	andi	r2,r5,8
   26434:	1001df26 	beq	r2,zero,26bb4 <___vfprintf_internal_r+0x17e0>
   26438:	39800017 	ldw	r6,0(r7)
   2643c:	38800204 	addi	r2,r7,8
   26440:	d8814015 	stw	r2,1280(sp)
   26444:	d9814215 	stw	r6,1288(sp)
   26448:	39c00117 	ldw	r7,4(r7)
   2644c:	d9c14315 	stw	r7,1292(sp)
   26450:	d9014217 	ldw	r4,1288(sp)
   26454:	d9414317 	ldw	r5,1292(sp)
   26458:	002bd740 	call	2bd74 <__isinfd>
   2645c:	10021726 	beq	r2,zero,26cbc <___vfprintf_internal_r+0x18e8>
   26460:	d9014217 	ldw	r4,1288(sp)
   26464:	d9414317 	ldw	r5,1292(sp)
   26468:	000d883a 	mov	r6,zero
   2646c:	000f883a 	mov	r7,zero
   26470:	00245c00 	call	245c0 <__ltdf2>
   26474:	1002ca16 	blt	r2,zero,26fa0 <___vfprintf_internal_r+0x1bcc>
   26478:	d9414d17 	ldw	r5,1332(sp)
   2647c:	008011c4 	movi	r2,71
   26480:	11420a16 	blt	r2,r5,26cac <___vfprintf_internal_r+0x18d8>
   26484:	018000f4 	movhi	r6,3
   26488:	31bf9304 	addi	r6,r6,-436
   2648c:	d9814115 	stw	r6,1284(sp)
   26490:	d9014c17 	ldw	r4,1328(sp)
   26494:	00c000c4 	movi	r3,3
   26498:	00bfdfc4 	movi	r2,-129
   2649c:	2088703a 	and	r4,r4,r2
   264a0:	180f883a 	mov	r7,r3
   264a4:	d8c14515 	stw	r3,1300(sp)
   264a8:	d9014c15 	stw	r4,1328(sp)
   264ac:	d8014615 	stw	zero,1304(sp)
   264b0:	003e6a06 	br	25e5c <___vfprintf_internal_r+0xa88>
   264b4:	38800017 	ldw	r2,0(r7)
   264b8:	00c00044 	movi	r3,1
   264bc:	39c00104 	addi	r7,r7,4
   264c0:	d9c14015 	stw	r7,1280(sp)
   264c4:	d9000f04 	addi	r4,sp,60
   264c8:	180f883a 	mov	r7,r3
   264cc:	d8c14515 	stw	r3,1300(sp)
   264d0:	d9014115 	stw	r4,1284(sp)
   264d4:	d8800f05 	stb	r2,60(sp)
   264d8:	d8000405 	stb	zero,16(sp)
   264dc:	003cac06 	br	25790 <___vfprintf_internal_r+0x3bc>
   264e0:	014000f4 	movhi	r5,3
   264e4:	297f9904 	addi	r5,r5,-412
   264e8:	d9414415 	stw	r5,1296(sp)
   264ec:	d9814c17 	ldw	r6,1328(sp)
   264f0:	3080080c 	andi	r2,r6,32
   264f4:	1000f926 	beq	r2,zero,268dc <___vfprintf_internal_r+0x1508>
   264f8:	3c000017 	ldw	r16,0(r7)
   264fc:	3c400117 	ldw	r17,4(r7)
   26500:	38800204 	addi	r2,r7,8
   26504:	d8814015 	stw	r2,1280(sp)
   26508:	d9414c17 	ldw	r5,1328(sp)
   2650c:	2880004c 	andi	r2,r5,1
   26510:	1005003a 	cmpeq	r2,r2,zero
   26514:	1000b31e 	bne	r2,zero,267e4 <___vfprintf_internal_r+0x1410>
   26518:	8444b03a 	or	r2,r16,r17
   2651c:	1000b126 	beq	r2,zero,267e4 <___vfprintf_internal_r+0x1410>
   26520:	d9814d17 	ldw	r6,1332(sp)
   26524:	29400094 	ori	r5,r5,2
   26528:	00800c04 	movi	r2,48
   2652c:	01000084 	movi	r4,2
   26530:	d9414c15 	stw	r5,1328(sp)
   26534:	d8800445 	stb	r2,17(sp)
   26538:	d9800485 	stb	r6,18(sp)
   2653c:	d8000405 	stb	zero,16(sp)
   26540:	003e3206 	br	25e0c <___vfprintf_internal_r+0xa38>
   26544:	018000f4 	movhi	r6,3
   26548:	31bf8e04 	addi	r6,r6,-456
   2654c:	d9814415 	stw	r6,1296(sp)
   26550:	003fe606 	br	264ec <___vfprintf_internal_r+0x1118>
   26554:	00800ac4 	movi	r2,43
   26558:	d8800405 	stb	r2,16(sp)
   2655c:	b8c00007 	ldb	r3,0(r23)
   26560:	003c1b06 	br	255d0 <___vfprintf_internal_r+0x1fc>
   26564:	d8814c17 	ldw	r2,1328(sp)
   26568:	b8c00007 	ldb	r3,0(r23)
   2656c:	10800054 	ori	r2,r2,1
   26570:	d8814c15 	stw	r2,1328(sp)
   26574:	003c1606 	br	255d0 <___vfprintf_internal_r+0x1fc>
   26578:	d8800407 	ldb	r2,16(sp)
   2657c:	1000461e 	bne	r2,zero,26698 <___vfprintf_internal_r+0x12c4>
   26580:	00800804 	movi	r2,32
   26584:	d8800405 	stb	r2,16(sp)
   26588:	b8c00007 	ldb	r3,0(r23)
   2658c:	003c1006 	br	255d0 <___vfprintf_internal_r+0x1fc>
   26590:	d9814c17 	ldw	r6,1328(sp)
   26594:	b8c00007 	ldb	r3,0(r23)
   26598:	31800214 	ori	r6,r6,8
   2659c:	d9814c15 	stw	r6,1328(sp)
   265a0:	003c0b06 	br	255d0 <___vfprintf_internal_r+0x1fc>
   265a4:	0007883a 	mov	r3,zero
   265a8:	01000244 	movi	r4,9
   265ac:	188002a4 	muli	r2,r3,10
   265b0:	b8c00007 	ldb	r3,0(r23)
   265b4:	d9814d17 	ldw	r6,1332(sp)
   265b8:	bdc00044 	addi	r23,r23,1
   265bc:	d8c14d15 	stw	r3,1332(sp)
   265c0:	d9414d17 	ldw	r5,1332(sp)
   265c4:	3085883a 	add	r2,r6,r2
   265c8:	10fff404 	addi	r3,r2,-48
   265cc:	28bff404 	addi	r2,r5,-48
   265d0:	20bff62e 	bgeu	r4,r2,265ac <___vfprintf_internal_r+0x11d8>
   265d4:	d8c14a15 	stw	r3,1320(sp)
   265d8:	003bff06 	br	255d8 <___vfprintf_internal_r+0x204>
   265dc:	d9414c17 	ldw	r5,1328(sp)
   265e0:	b8c00007 	ldb	r3,0(r23)
   265e4:	29402014 	ori	r5,r5,128
   265e8:	d9414c15 	stw	r5,1328(sp)
   265ec:	003bf806 	br	255d0 <___vfprintf_internal_r+0x1fc>
   265f0:	b8c00007 	ldb	r3,0(r23)
   265f4:	00800a84 	movi	r2,42
   265f8:	bdc00044 	addi	r23,r23,1
   265fc:	18831526 	beq	r3,r2,27254 <___vfprintf_internal_r+0x1e80>
   26600:	d8c14d15 	stw	r3,1332(sp)
   26604:	18bff404 	addi	r2,r3,-48
   26608:	00c00244 	movi	r3,9
   2660c:	18827836 	bltu	r3,r2,26ff0 <___vfprintf_internal_r+0x1c1c>
   26610:	000d883a 	mov	r6,zero
   26614:	308002a4 	muli	r2,r6,10
   26618:	b9800007 	ldb	r6,0(r23)
   2661c:	d9414d17 	ldw	r5,1332(sp)
   26620:	bdc00044 	addi	r23,r23,1
   26624:	d9814d15 	stw	r6,1332(sp)
   26628:	d9014d17 	ldw	r4,1332(sp)
   2662c:	1145883a 	add	r2,r2,r5
   26630:	11bff404 	addi	r6,r2,-48
   26634:	20bff404 	addi	r2,r4,-48
   26638:	18bff62e 	bgeu	r3,r2,26614 <___vfprintf_internal_r+0x1240>
   2663c:	3027883a 	mov	r19,r6
   26640:	303be50e 	bge	r6,zero,255d8 <___vfprintf_internal_r+0x204>
   26644:	04ffffc4 	movi	r19,-1
   26648:	003be306 	br	255d8 <___vfprintf_internal_r+0x204>
   2664c:	d8000405 	stb	zero,16(sp)
   26650:	39800017 	ldw	r6,0(r7)
   26654:	39c00104 	addi	r7,r7,4
   26658:	d9c14015 	stw	r7,1280(sp)
   2665c:	d9814115 	stw	r6,1284(sp)
   26660:	3001c926 	beq	r6,zero,26d88 <___vfprintf_internal_r+0x19b4>
   26664:	98000e16 	blt	r19,zero,266a0 <___vfprintf_internal_r+0x12cc>
   26668:	d9014117 	ldw	r4,1284(sp)
   2666c:	000b883a 	mov	r5,zero
   26670:	980d883a 	mov	r6,r19
   26674:	002a4900 	call	2a490 <memchr>
   26678:	10025926 	beq	r2,zero,26fe0 <___vfprintf_internal_r+0x1c0c>
   2667c:	d8c14117 	ldw	r3,1284(sp)
   26680:	10cfc83a 	sub	r7,r2,r3
   26684:	99c19e16 	blt	r19,r7,26d00 <___vfprintf_internal_r+0x192c>
   26688:	d9c14515 	stw	r7,1300(sp)
   2668c:	38000916 	blt	r7,zero,266b4 <___vfprintf_internal_r+0x12e0>
   26690:	d8014615 	stw	zero,1304(sp)
   26694:	003df106 	br	25e5c <___vfprintf_internal_r+0xa88>
   26698:	b8c00007 	ldb	r3,0(r23)
   2669c:	003bcc06 	br	255d0 <___vfprintf_internal_r+0x1fc>
   266a0:	d9014117 	ldw	r4,1284(sp)
   266a4:	00253080 	call	25308 <strlen>
   266a8:	d8814515 	stw	r2,1300(sp)
   266ac:	100f883a 	mov	r7,r2
   266b0:	103ff70e 	bge	r2,zero,26690 <___vfprintf_internal_r+0x12bc>
   266b4:	d8014515 	stw	zero,1300(sp)
   266b8:	d8014615 	stw	zero,1304(sp)
   266bc:	003de706 	br	25e5c <___vfprintf_internal_r+0xa88>
   266c0:	20c03fcc 	andi	r3,r4,255
   266c4:	00800044 	movi	r2,1
   266c8:	18802d26 	beq	r3,r2,26780 <___vfprintf_internal_r+0x13ac>
   266cc:	18800e36 	bltu	r3,r2,26708 <___vfprintf_internal_r+0x1334>
   266d0:	00800084 	movi	r2,2
   266d4:	1880fa26 	beq	r3,r2,26ac0 <___vfprintf_internal_r+0x16ec>
   266d8:	010000f4 	movhi	r4,3
   266dc:	213f9e04 	addi	r4,r4,-392
   266e0:	00253080 	call	25308 <strlen>
   266e4:	100f883a 	mov	r7,r2
   266e8:	dcc14515 	stw	r19,1300(sp)
   266ec:	9880010e 	bge	r19,r2,266f4 <___vfprintf_internal_r+0x1320>
   266f0:	d8814515 	stw	r2,1300(sp)
   266f4:	008000f4 	movhi	r2,3
   266f8:	10bf9e04 	addi	r2,r2,-392
   266fc:	dcc14615 	stw	r19,1304(sp)
   26700:	d8814115 	stw	r2,1284(sp)
   26704:	003dd506 	br	25e5c <___vfprintf_internal_r+0xa88>
   26708:	d9401904 	addi	r5,sp,100
   2670c:	dd000f04 	addi	r20,sp,60
   26710:	d9414115 	stw	r5,1284(sp)
   26714:	880a977a 	slli	r5,r17,29
   26718:	d9814117 	ldw	r6,1284(sp)
   2671c:	8004d0fa 	srli	r2,r16,3
   26720:	8806d0fa 	srli	r3,r17,3
   26724:	810001cc 	andi	r4,r16,7
   26728:	2884b03a 	or	r2,r5,r2
   2672c:	31bfffc4 	addi	r6,r6,-1
   26730:	21000c04 	addi	r4,r4,48
   26734:	d9814115 	stw	r6,1284(sp)
   26738:	10cab03a 	or	r5,r2,r3
   2673c:	31000005 	stb	r4,0(r6)
   26740:	1021883a 	mov	r16,r2
   26744:	1823883a 	mov	r17,r3
   26748:	283ff21e 	bne	r5,zero,26714 <___vfprintf_internal_r+0x1340>
   2674c:	d8c14c17 	ldw	r3,1328(sp)
   26750:	1880004c 	andi	r2,r3,1
   26754:	1005003a 	cmpeq	r2,r2,zero
   26758:	103db91e 	bne	r2,zero,25e40 <___vfprintf_internal_r+0xa6c>
   2675c:	20803fcc 	andi	r2,r4,255
   26760:	1080201c 	xori	r2,r2,128
   26764:	10bfe004 	addi	r2,r2,-128
   26768:	00c00c04 	movi	r3,48
   2676c:	10fdb426 	beq	r2,r3,25e40 <___vfprintf_internal_r+0xa6c>
   26770:	31bfffc4 	addi	r6,r6,-1
   26774:	d9814115 	stw	r6,1284(sp)
   26778:	30c00005 	stb	r3,0(r6)
   2677c:	003db006 	br	25e40 <___vfprintf_internal_r+0xa6c>
   26780:	88800068 	cmpgeui	r2,r17,1
   26784:	10002c1e 	bne	r2,zero,26838 <___vfprintf_internal_r+0x1464>
   26788:	8800021e 	bne	r17,zero,26794 <___vfprintf_internal_r+0x13c0>
   2678c:	00800244 	movi	r2,9
   26790:	14002936 	bltu	r2,r16,26838 <___vfprintf_internal_r+0x1464>
   26794:	d90018c4 	addi	r4,sp,99
   26798:	dd000f04 	addi	r20,sp,60
   2679c:	d9014115 	stw	r4,1284(sp)
   267a0:	d9014117 	ldw	r4,1284(sp)
   267a4:	80800c04 	addi	r2,r16,48
   267a8:	20800005 	stb	r2,0(r4)
   267ac:	003da406 	br	25e40 <___vfprintf_internal_r+0xa6c>
   267b0:	dc400d17 	ldw	r17,52(sp)
   267b4:	070000f4 	movhi	fp,3
   267b8:	e73fa584 	addi	fp,fp,-362
   267bc:	9425883a 	add	r18,r18,r16
   267c0:	8c400044 	addi	r17,r17,1
   267c4:	008001c4 	movi	r2,7
   267c8:	1f000015 	stw	fp,0(r3)
   267cc:	1c000115 	stw	r16,4(r3)
   267d0:	dc800e15 	stw	r18,56(sp)
   267d4:	dc400d15 	stw	r17,52(sp)
   267d8:	147de216 	blt	r2,r17,25f64 <___vfprintf_internal_r+0xb90>
   267dc:	18c00204 	addi	r3,r3,8
   267e0:	003c7a06 	br	259cc <___vfprintf_internal_r+0x5f8>
   267e4:	01000084 	movi	r4,2
   267e8:	d8000405 	stb	zero,16(sp)
   267ec:	003d8706 	br	25e0c <___vfprintf_internal_r+0xa38>
   267f0:	d9814c17 	ldw	r6,1328(sp)
   267f4:	30c4703a 	and	r2,r6,r3
   267f8:	1005003a 	cmpeq	r2,r2,zero
   267fc:	103cb926 	beq	r2,zero,25ae4 <___vfprintf_internal_r+0x710>
   26800:	d9014117 	ldw	r4,1284(sp)
   26804:	94800044 	addi	r18,r18,1
   26808:	8c400044 	addi	r17,r17,1
   2680c:	008001c4 	movi	r2,7
   26810:	a9000015 	stw	r4,0(r21)
   26814:	a8c00115 	stw	r3,4(r21)
   26818:	dc800e15 	stw	r18,56(sp)
   2681c:	dc400d15 	stw	r17,52(sp)
   26820:	147e6616 	blt	r2,r17,261bc <___vfprintf_internal_r+0xde8>
   26824:	acc00204 	addi	r19,r21,8
   26828:	003cd706 	br	25b88 <___vfprintf_internal_r+0x7b4>
   2682c:	070000f4 	movhi	fp,3
   26830:	e73fa584 	addi	fp,fp,-362
   26834:	003c4f06 	br	25974 <___vfprintf_internal_r+0x5a0>
   26838:	dd000f04 	addi	r20,sp,60
   2683c:	dc801904 	addi	r18,sp,100
   26840:	8009883a 	mov	r4,r16
   26844:	880b883a 	mov	r5,r17
   26848:	01800284 	movi	r6,10
   2684c:	000f883a 	mov	r7,zero
   26850:	002ca9c0 	call	2ca9c <__umoddi3>
   26854:	12000c04 	addi	r8,r2,48
   26858:	94bfffc4 	addi	r18,r18,-1
   2685c:	8009883a 	mov	r4,r16
   26860:	880b883a 	mov	r5,r17
   26864:	01800284 	movi	r6,10
   26868:	000f883a 	mov	r7,zero
   2686c:	92000005 	stb	r8,0(r18)
   26870:	002c4c00 	call	2c4c0 <__udivdi3>
   26874:	1009883a 	mov	r4,r2
   26878:	1021883a 	mov	r16,r2
   2687c:	18800068 	cmpgeui	r2,r3,1
   26880:	1823883a 	mov	r17,r3
   26884:	103fee1e 	bne	r2,zero,26840 <___vfprintf_internal_r+0x146c>
   26888:	1800021e 	bne	r3,zero,26894 <___vfprintf_internal_r+0x14c0>
   2688c:	00800244 	movi	r2,9
   26890:	113feb36 	bltu	r2,r4,26840 <___vfprintf_internal_r+0x146c>
   26894:	94bfffc4 	addi	r18,r18,-1
   26898:	dc814115 	stw	r18,1284(sp)
   2689c:	003fc006 	br	267a0 <___vfprintf_internal_r+0x13cc>
   268a0:	d9014c17 	ldw	r4,1328(sp)
   268a4:	2080004c 	andi	r2,r4,1
   268a8:	10009a1e 	bne	r2,zero,26b14 <___vfprintf_internal_r+0x1740>
   268ac:	d9401904 	addi	r5,sp,100
   268b0:	dd000f04 	addi	r20,sp,60
   268b4:	d9414115 	stw	r5,1284(sp)
   268b8:	003d6106 	br	25e40 <___vfprintf_internal_r+0xa6c>
   268bc:	d9014f17 	ldw	r4,1340(sp)
   268c0:	b00b883a 	mov	r5,r22
   268c4:	d9800c04 	addi	r6,sp,48
   268c8:	002537c0 	call	2537c <__sprint_r>
   268cc:	103c791e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   268d0:	dc800e17 	ldw	r18,56(sp)
   268d4:	d8c01904 	addi	r3,sp,100
   268d8:	003cff06 	br	25cd8 <___vfprintf_internal_r+0x904>
   268dc:	d8c14c17 	ldw	r3,1328(sp)
   268e0:	1880040c 	andi	r2,r3,16
   268e4:	1000711e 	bne	r2,zero,26aac <___vfprintf_internal_r+0x16d8>
   268e8:	d9014c17 	ldw	r4,1328(sp)
   268ec:	2080100c 	andi	r2,r4,64
   268f0:	10006e26 	beq	r2,zero,26aac <___vfprintf_internal_r+0x16d8>
   268f4:	3c00000b 	ldhu	r16,0(r7)
   268f8:	0023883a 	mov	r17,zero
   268fc:	39c00104 	addi	r7,r7,4
   26900:	d9c14015 	stw	r7,1280(sp)
   26904:	003f0006 	br	26508 <___vfprintf_internal_r+0x1134>
   26908:	dc400d17 	ldw	r17,52(sp)
   2690c:	070000f4 	movhi	fp,3
   26910:	e73fa584 	addi	fp,fp,-362
   26914:	9425883a 	add	r18,r18,r16
   26918:	8c400044 	addi	r17,r17,1
   2691c:	008001c4 	movi	r2,7
   26920:	1f000015 	stw	fp,0(r3)
   26924:	1c000115 	stw	r16,4(r3)
   26928:	dc800e15 	stw	r18,56(sp)
   2692c:	dc400d15 	stw	r17,52(sp)
   26930:	147d7616 	blt	r2,r17,25f0c <___vfprintf_internal_r+0xb38>
   26934:	18c00204 	addi	r3,r3,8
   26938:	003d7b06 	br	25f28 <___vfprintf_internal_r+0xb54>
   2693c:	dc800e17 	ldw	r18,56(sp)
   26940:	dc400d17 	ldw	r17,52(sp)
   26944:	070000f4 	movhi	fp,3
   26948:	e73fa984 	addi	fp,fp,-346
   2694c:	003bc006 	br	25850 <___vfprintf_internal_r+0x47c>
   26950:	d9014f17 	ldw	r4,1340(sp)
   26954:	b00b883a 	mov	r5,r22
   26958:	d9800c04 	addi	r6,sp,48
   2695c:	002537c0 	call	2537c <__sprint_r>
   26960:	103c541e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26964:	dc800e17 	ldw	r18,56(sp)
   26968:	d8c01904 	addi	r3,sp,100
   2696c:	003ce906 	br	25d14 <___vfprintf_internal_r+0x940>
   26970:	3c000017 	ldw	r16,0(r7)
   26974:	0009883a 	mov	r4,zero
   26978:	39c00104 	addi	r7,r7,4
   2697c:	0023883a 	mov	r17,zero
   26980:	d9c14015 	stw	r7,1280(sp)
   26984:	d8000405 	stb	zero,16(sp)
   26988:	003d2006 	br	25e0c <___vfprintf_internal_r+0xa38>
   2698c:	38800017 	ldw	r2,0(r7)
   26990:	39c00104 	addi	r7,r7,4
   26994:	d9c14015 	stw	r7,1280(sp)
   26998:	1023d7fa 	srai	r17,r2,31
   2699c:	1021883a 	mov	r16,r2
   269a0:	003d1806 	br	25e04 <___vfprintf_internal_r+0xa30>
   269a4:	3c000017 	ldw	r16,0(r7)
   269a8:	01000044 	movi	r4,1
   269ac:	39c00104 	addi	r7,r7,4
   269b0:	0023883a 	mov	r17,zero
   269b4:	d9c14015 	stw	r7,1280(sp)
   269b8:	d8000405 	stb	zero,16(sp)
   269bc:	003d1306 	br	25e0c <___vfprintf_internal_r+0xa38>
   269c0:	008000f4 	movhi	r2,3
   269c4:	10bfa504 	addi	r2,r2,-364
   269c8:	94800044 	addi	r18,r18,1
   269cc:	8c400044 	addi	r17,r17,1
   269d0:	a8800015 	stw	r2,0(r21)
   269d4:	00c00044 	movi	r3,1
   269d8:	008001c4 	movi	r2,7
   269dc:	a8c00115 	stw	r3,4(r21)
   269e0:	dc800e15 	stw	r18,56(sp)
   269e4:	dc400d15 	stw	r17,52(sp)
   269e8:	1440ca16 	blt	r2,r17,26d14 <___vfprintf_internal_r+0x1940>
   269ec:	a8c00204 	addi	r3,r21,8
   269f0:	2000061e 	bne	r4,zero,26a0c <___vfprintf_internal_r+0x1638>
   269f4:	d9414717 	ldw	r5,1308(sp)
   269f8:	2800041e 	bne	r5,zero,26a0c <___vfprintf_internal_r+0x1638>
   269fc:	d9814c17 	ldw	r6,1328(sp)
   26a00:	3080004c 	andi	r2,r6,1
   26a04:	1005003a 	cmpeq	r2,r2,zero
   26a08:	103bf01e 	bne	r2,zero,259cc <___vfprintf_internal_r+0x5f8>
   26a0c:	00800044 	movi	r2,1
   26a10:	dc400d17 	ldw	r17,52(sp)
   26a14:	18800115 	stw	r2,4(r3)
   26a18:	d8814917 	ldw	r2,1316(sp)
   26a1c:	94800044 	addi	r18,r18,1
   26a20:	8c400044 	addi	r17,r17,1
   26a24:	18800015 	stw	r2,0(r3)
   26a28:	008001c4 	movi	r2,7
   26a2c:	dc800e15 	stw	r18,56(sp)
   26a30:	dc400d15 	stw	r17,52(sp)
   26a34:	1440ca16 	blt	r2,r17,26d60 <___vfprintf_internal_r+0x198c>
   26a38:	18c00204 	addi	r3,r3,8
   26a3c:	0121c83a 	sub	r16,zero,r4
   26a40:	0400500e 	bge	zero,r16,26b84 <___vfprintf_internal_r+0x17b0>
   26a44:	00800404 	movi	r2,16
   26a48:	1400800e 	bge	r2,r16,26c4c <___vfprintf_internal_r+0x1878>
   26a4c:	1027883a 	mov	r19,r2
   26a50:	070000f4 	movhi	fp,3
   26a54:	e73fa584 	addi	fp,fp,-362
   26a58:	050001c4 	movi	r20,7
   26a5c:	00000306 	br	26a6c <___vfprintf_internal_r+0x1698>
   26a60:	18c00204 	addi	r3,r3,8
   26a64:	843ffc04 	addi	r16,r16,-16
   26a68:	9c007a0e 	bge	r19,r16,26c54 <___vfprintf_internal_r+0x1880>
   26a6c:	94800404 	addi	r18,r18,16
   26a70:	8c400044 	addi	r17,r17,1
   26a74:	1f000015 	stw	fp,0(r3)
   26a78:	1cc00115 	stw	r19,4(r3)
   26a7c:	dc800e15 	stw	r18,56(sp)
   26a80:	dc400d15 	stw	r17,52(sp)
   26a84:	a47ff60e 	bge	r20,r17,26a60 <___vfprintf_internal_r+0x168c>
   26a88:	d9014f17 	ldw	r4,1340(sp)
   26a8c:	b00b883a 	mov	r5,r22
   26a90:	d9800c04 	addi	r6,sp,48
   26a94:	002537c0 	call	2537c <__sprint_r>
   26a98:	103c061e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26a9c:	dc800e17 	ldw	r18,56(sp)
   26aa0:	dc400d17 	ldw	r17,52(sp)
   26aa4:	d8c01904 	addi	r3,sp,100
   26aa8:	003fee06 	br	26a64 <___vfprintf_internal_r+0x1690>
   26aac:	3c000017 	ldw	r16,0(r7)
   26ab0:	0023883a 	mov	r17,zero
   26ab4:	39c00104 	addi	r7,r7,4
   26ab8:	d9c14015 	stw	r7,1280(sp)
   26abc:	003e9206 	br	26508 <___vfprintf_internal_r+0x1134>
   26ac0:	d9401904 	addi	r5,sp,100
   26ac4:	dd000f04 	addi	r20,sp,60
   26ac8:	d9414115 	stw	r5,1284(sp)
   26acc:	d9814417 	ldw	r6,1296(sp)
   26ad0:	880a973a 	slli	r5,r17,28
   26ad4:	8004d13a 	srli	r2,r16,4
   26ad8:	810003cc 	andi	r4,r16,15
   26adc:	3109883a 	add	r4,r6,r4
   26ae0:	2884b03a 	or	r2,r5,r2
   26ae4:	21400003 	ldbu	r5,0(r4)
   26ae8:	d9014117 	ldw	r4,1284(sp)
   26aec:	8806d13a 	srli	r3,r17,4
   26af0:	1021883a 	mov	r16,r2
   26af4:	213fffc4 	addi	r4,r4,-1
   26af8:	d9014115 	stw	r4,1284(sp)
   26afc:	d9814117 	ldw	r6,1284(sp)
   26b00:	10c8b03a 	or	r4,r2,r3
   26b04:	1823883a 	mov	r17,r3
   26b08:	31400005 	stb	r5,0(r6)
   26b0c:	203fef1e 	bne	r4,zero,26acc <___vfprintf_internal_r+0x16f8>
   26b10:	003ccb06 	br	25e40 <___vfprintf_internal_r+0xa6c>
   26b14:	00800c04 	movi	r2,48
   26b18:	d98018c4 	addi	r6,sp,99
   26b1c:	dd000f04 	addi	r20,sp,60
   26b20:	d88018c5 	stb	r2,99(sp)
   26b24:	d9814115 	stw	r6,1284(sp)
   26b28:	003cc506 	br	25e40 <___vfprintf_internal_r+0xa6c>
   26b2c:	dc400d17 	ldw	r17,52(sp)
   26b30:	070000f4 	movhi	fp,3
   26b34:	e73fa984 	addi	fp,fp,-346
   26b38:	003bc706 	br	25a58 <___vfprintf_internal_r+0x684>
   26b3c:	d9414c17 	ldw	r5,1328(sp)
   26b40:	2880040c 	andi	r2,r5,16
   26b44:	10007c26 	beq	r2,zero,26d38 <___vfprintf_internal_r+0x1964>
   26b48:	38800017 	ldw	r2,0(r7)
   26b4c:	39c00104 	addi	r7,r7,4
   26b50:	d9c14015 	stw	r7,1280(sp)
   26b54:	d9814b17 	ldw	r6,1324(sp)
   26b58:	d9c14017 	ldw	r7,1280(sp)
   26b5c:	11800015 	stw	r6,0(r2)
   26b60:	003a7806 	br	25544 <___vfprintf_internal_r+0x170>
   26b64:	d9014f17 	ldw	r4,1340(sp)
   26b68:	b00b883a 	mov	r5,r22
   26b6c:	d9800c04 	addi	r6,sp,48
   26b70:	002537c0 	call	2537c <__sprint_r>
   26b74:	103bcf1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26b78:	dc800e17 	ldw	r18,56(sp)
   26b7c:	dc400d17 	ldw	r17,52(sp)
   26b80:	d8c01904 	addi	r3,sp,100
   26b84:	d9014717 	ldw	r4,1308(sp)
   26b88:	d9414117 	ldw	r5,1284(sp)
   26b8c:	8c400044 	addi	r17,r17,1
   26b90:	9125883a 	add	r18,r18,r4
   26b94:	008001c4 	movi	r2,7
   26b98:	19400015 	stw	r5,0(r3)
   26b9c:	19000115 	stw	r4,4(r3)
   26ba0:	dc800e15 	stw	r18,56(sp)
   26ba4:	dc400d15 	stw	r17,52(sp)
   26ba8:	147cee16 	blt	r2,r17,25f64 <___vfprintf_internal_r+0xb90>
   26bac:	18c00204 	addi	r3,r3,8
   26bb0:	003b8606 	br	259cc <___vfprintf_internal_r+0x5f8>
   26bb4:	38c00017 	ldw	r3,0(r7)
   26bb8:	39000204 	addi	r4,r7,8
   26bbc:	d9014015 	stw	r4,1280(sp)
   26bc0:	d8c14215 	stw	r3,1288(sp)
   26bc4:	39c00117 	ldw	r7,4(r7)
   26bc8:	d9c14315 	stw	r7,1292(sp)
   26bcc:	003e2006 	br	26450 <___vfprintf_internal_r+0x107c>
   26bd0:	0005883a 	mov	r2,zero
   26bd4:	1409c83a 	sub	r4,r2,r16
   26bd8:	1105803a 	cmpltu	r2,r2,r4
   26bdc:	044bc83a 	sub	r5,zero,r17
   26be0:	2885c83a 	sub	r2,r5,r2
   26be4:	2021883a 	mov	r16,r4
   26be8:	1023883a 	mov	r17,r2
   26bec:	01000044 	movi	r4,1
   26bf0:	00800b44 	movi	r2,45
   26bf4:	d8800405 	stb	r2,16(sp)
   26bf8:	003c8406 	br	25e0c <___vfprintf_internal_r+0xa38>
   26bfc:	d9014f17 	ldw	r4,1340(sp)
   26c00:	b00b883a 	mov	r5,r22
   26c04:	d9800c04 	addi	r6,sp,48
   26c08:	002537c0 	call	2537c <__sprint_r>
   26c0c:	103ba91e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26c10:	dc800e17 	ldw	r18,56(sp)
   26c14:	dc400d17 	ldw	r17,52(sp)
   26c18:	d9000517 	ldw	r4,20(sp)
   26c1c:	d9401904 	addi	r5,sp,100
   26c20:	003da706 	br	262c0 <___vfprintf_internal_r+0xeec>
   26c24:	d9014f17 	ldw	r4,1340(sp)
   26c28:	b00b883a 	mov	r5,r22
   26c2c:	d9800c04 	addi	r6,sp,48
   26c30:	002537c0 	call	2537c <__sprint_r>
   26c34:	103b9f1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26c38:	dc800e17 	ldw	r18,56(sp)
   26c3c:	dc400d17 	ldw	r17,52(sp)
   26c40:	d9000517 	ldw	r4,20(sp)
   26c44:	d8c01904 	addi	r3,sp,100
   26c48:	003d9106 	br	26290 <___vfprintf_internal_r+0xebc>
   26c4c:	070000f4 	movhi	fp,3
   26c50:	e73fa584 	addi	fp,fp,-362
   26c54:	9425883a 	add	r18,r18,r16
   26c58:	8c400044 	addi	r17,r17,1
   26c5c:	008001c4 	movi	r2,7
   26c60:	1f000015 	stw	fp,0(r3)
   26c64:	1c000115 	stw	r16,4(r3)
   26c68:	dc800e15 	stw	r18,56(sp)
   26c6c:	dc400d15 	stw	r17,52(sp)
   26c70:	147fbc16 	blt	r2,r17,26b64 <___vfprintf_internal_r+0x1790>
   26c74:	18c00204 	addi	r3,r3,8
   26c78:	003fc206 	br	26b84 <___vfprintf_internal_r+0x17b0>
   26c7c:	d9014f17 	ldw	r4,1340(sp)
   26c80:	b00b883a 	mov	r5,r22
   26c84:	d9800c04 	addi	r6,sp,48
   26c88:	002537c0 	call	2537c <__sprint_r>
   26c8c:	103b891e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26c90:	dc800e17 	ldw	r18,56(sp)
   26c94:	d9000517 	ldw	r4,20(sp)
   26c98:	d8c01904 	addi	r3,sp,100
   26c9c:	003d0206 	br	260a8 <___vfprintf_internal_r+0xcd4>
   26ca0:	070000f4 	movhi	fp,3
   26ca4:	e73fa584 	addi	fp,fp,-362
   26ca8:	003be406 	br	25c3c <___vfprintf_internal_r+0x868>
   26cac:	008000f4 	movhi	r2,3
   26cb0:	10bf9404 	addi	r2,r2,-432
   26cb4:	d8814115 	stw	r2,1284(sp)
   26cb8:	003df506 	br	26490 <___vfprintf_internal_r+0x10bc>
   26cbc:	d9014217 	ldw	r4,1288(sp)
   26cc0:	d9414317 	ldw	r5,1292(sp)
   26cc4:	0022fe40 	call	22fe4 <__isnand>
   26cc8:	10003926 	beq	r2,zero,26db0 <___vfprintf_internal_r+0x19dc>
   26ccc:	d9414d17 	ldw	r5,1332(sp)
   26cd0:	008011c4 	movi	r2,71
   26cd4:	1140ce16 	blt	r2,r5,27010 <___vfprintf_internal_r+0x1c3c>
   26cd8:	018000f4 	movhi	r6,3
   26cdc:	31bf9504 	addi	r6,r6,-428
   26ce0:	d9814115 	stw	r6,1284(sp)
   26ce4:	003dea06 	br	26490 <___vfprintf_internal_r+0x10bc>
   26ce8:	d9014c17 	ldw	r4,1328(sp)
   26cec:	bdc00044 	addi	r23,r23,1
   26cf0:	b8c00007 	ldb	r3,0(r23)
   26cf4:	21000814 	ori	r4,r4,32
   26cf8:	d9014c15 	stw	r4,1328(sp)
   26cfc:	003a3406 	br	255d0 <___vfprintf_internal_r+0x1fc>
   26d00:	dcc14515 	stw	r19,1300(sp)
   26d04:	98011016 	blt	r19,zero,27148 <___vfprintf_internal_r+0x1d74>
   26d08:	980f883a 	mov	r7,r19
   26d0c:	d8014615 	stw	zero,1304(sp)
   26d10:	003c5206 	br	25e5c <___vfprintf_internal_r+0xa88>
   26d14:	d9014f17 	ldw	r4,1340(sp)
   26d18:	b00b883a 	mov	r5,r22
   26d1c:	d9800c04 	addi	r6,sp,48
   26d20:	002537c0 	call	2537c <__sprint_r>
   26d24:	103b631e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26d28:	dc800e17 	ldw	r18,56(sp)
   26d2c:	d9000517 	ldw	r4,20(sp)
   26d30:	d8c01904 	addi	r3,sp,100
   26d34:	003f2e06 	br	269f0 <___vfprintf_internal_r+0x161c>
   26d38:	d8c14c17 	ldw	r3,1328(sp)
   26d3c:	1880100c 	andi	r2,r3,64
   26d40:	1000a026 	beq	r2,zero,26fc4 <___vfprintf_internal_r+0x1bf0>
   26d44:	38800017 	ldw	r2,0(r7)
   26d48:	39c00104 	addi	r7,r7,4
   26d4c:	d9c14015 	stw	r7,1280(sp)
   26d50:	d9014b17 	ldw	r4,1324(sp)
   26d54:	d9c14017 	ldw	r7,1280(sp)
   26d58:	1100000d 	sth	r4,0(r2)
   26d5c:	0039f906 	br	25544 <___vfprintf_internal_r+0x170>
   26d60:	d9014f17 	ldw	r4,1340(sp)
   26d64:	b00b883a 	mov	r5,r22
   26d68:	d9800c04 	addi	r6,sp,48
   26d6c:	002537c0 	call	2537c <__sprint_r>
   26d70:	103b501e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26d74:	dc800e17 	ldw	r18,56(sp)
   26d78:	dc400d17 	ldw	r17,52(sp)
   26d7c:	d9000517 	ldw	r4,20(sp)
   26d80:	d8c01904 	addi	r3,sp,100
   26d84:	003f2d06 	br	26a3c <___vfprintf_internal_r+0x1668>
   26d88:	00800184 	movi	r2,6
   26d8c:	14c09a36 	bltu	r2,r19,26ff8 <___vfprintf_internal_r+0x1c24>
   26d90:	dcc14515 	stw	r19,1300(sp)
   26d94:	9800010e 	bge	r19,zero,26d9c <___vfprintf_internal_r+0x19c8>
   26d98:	d8014515 	stw	zero,1300(sp)
   26d9c:	008000f4 	movhi	r2,3
   26da0:	10bf9704 	addi	r2,r2,-420
   26da4:	980f883a 	mov	r7,r19
   26da8:	d8814115 	stw	r2,1284(sp)
   26dac:	003a7806 	br	25790 <___vfprintf_internal_r+0x3bc>
   26db0:	00bfffc4 	movi	r2,-1
   26db4:	9880e226 	beq	r19,r2,27140 <___vfprintf_internal_r+0x1d6c>
   26db8:	d9414d17 	ldw	r5,1332(sp)
   26dbc:	008019c4 	movi	r2,103
   26dc0:	2880dc26 	beq	r5,r2,27134 <___vfprintf_internal_r+0x1d60>
   26dc4:	008011c4 	movi	r2,71
   26dc8:	2880da26 	beq	r5,r2,27134 <___vfprintf_internal_r+0x1d60>
   26dcc:	d9414c17 	ldw	r5,1328(sp)
   26dd0:	d9014317 	ldw	r4,1292(sp)
   26dd4:	d9814217 	ldw	r6,1288(sp)
   26dd8:	29404014 	ori	r5,r5,256
   26ddc:	d9414c15 	stw	r5,1328(sp)
   26de0:	2000cc16 	blt	r4,zero,27114 <___vfprintf_internal_r+0x1d40>
   26de4:	3021883a 	mov	r16,r6
   26de8:	2023883a 	mov	r17,r4
   26dec:	0039883a 	mov	fp,zero
   26df0:	d9414d17 	ldw	r5,1332(sp)
   26df4:	00801984 	movi	r2,102
   26df8:	2880b726 	beq	r5,r2,270d8 <___vfprintf_internal_r+0x1d04>
   26dfc:	00801184 	movi	r2,70
   26e00:	2880b526 	beq	r5,r2,270d8 <___vfprintf_internal_r+0x1d04>
   26e04:	00801944 	movi	r2,101
   26e08:	2880c826 	beq	r5,r2,2712c <___vfprintf_internal_r+0x1d58>
   26e0c:	00801144 	movi	r2,69
   26e10:	2880c626 	beq	r5,r2,2712c <___vfprintf_internal_r+0x1d58>
   26e14:	9829883a 	mov	r20,r19
   26e18:	d9014f17 	ldw	r4,1340(sp)
   26e1c:	d8800504 	addi	r2,sp,20
   26e20:	880d883a 	mov	r6,r17
   26e24:	d8800115 	stw	r2,4(sp)
   26e28:	d8c00604 	addi	r3,sp,24
   26e2c:	d8800704 	addi	r2,sp,28
   26e30:	800b883a 	mov	r5,r16
   26e34:	01c00084 	movi	r7,2
   26e38:	d8c00215 	stw	r3,8(sp)
   26e3c:	d8800315 	stw	r2,12(sp)
   26e40:	dd000015 	stw	r20,0(sp)
   26e44:	00275f80 	call	275f8 <_dtoa_r>
   26e48:	d9814d17 	ldw	r6,1332(sp)
   26e4c:	d8814115 	stw	r2,1284(sp)
   26e50:	008019c4 	movi	r2,103
   26e54:	30809526 	beq	r6,r2,270ac <___vfprintf_internal_r+0x1cd8>
   26e58:	d8c14d17 	ldw	r3,1332(sp)
   26e5c:	008011c4 	movi	r2,71
   26e60:	18809226 	beq	r3,r2,270ac <___vfprintf_internal_r+0x1cd8>
   26e64:	d9414117 	ldw	r5,1284(sp)
   26e68:	d9814d17 	ldw	r6,1332(sp)
   26e6c:	00801984 	movi	r2,102
   26e70:	2d25883a 	add	r18,r5,r20
   26e74:	30808626 	beq	r6,r2,27090 <___vfprintf_internal_r+0x1cbc>
   26e78:	00801184 	movi	r2,70
   26e7c:	30808426 	beq	r6,r2,27090 <___vfprintf_internal_r+0x1cbc>
   26e80:	000d883a 	mov	r6,zero
   26e84:	000f883a 	mov	r7,zero
   26e88:	880b883a 	mov	r5,r17
   26e8c:	8009883a 	mov	r4,r16
   26e90:	00243a00 	call	243a0 <__eqdf2>
   26e94:	1000751e 	bne	r2,zero,2706c <___vfprintf_internal_r+0x1c98>
   26e98:	9005883a 	mov	r2,r18
   26e9c:	dc800715 	stw	r18,28(sp)
   26ea0:	d9014117 	ldw	r4,1284(sp)
   26ea4:	d9414d17 	ldw	r5,1332(sp)
   26ea8:	00c019c4 	movi	r3,103
   26eac:	1125c83a 	sub	r18,r2,r4
   26eb0:	28c06826 	beq	r5,r3,27054 <___vfprintf_internal_r+0x1c80>
   26eb4:	008011c4 	movi	r2,71
   26eb8:	28806626 	beq	r5,r2,27054 <___vfprintf_internal_r+0x1c80>
   26ebc:	d9000517 	ldw	r4,20(sp)
   26ec0:	d8c14d17 	ldw	r3,1332(sp)
   26ec4:	00801944 	movi	r2,101
   26ec8:	10c05516 	blt	r2,r3,27020 <___vfprintf_internal_r+0x1c4c>
   26ecc:	213fffc4 	addi	r4,r4,-1
   26ed0:	d9000515 	stw	r4,20(sp)
   26ed4:	d8c00805 	stb	r3,32(sp)
   26ed8:	2021883a 	mov	r16,r4
   26edc:	2000c116 	blt	r4,zero,271e4 <___vfprintf_internal_r+0x1e10>
   26ee0:	00800ac4 	movi	r2,43
   26ee4:	d8800845 	stb	r2,33(sp)
   26ee8:	00800244 	movi	r2,9
   26eec:	1400af0e 	bge	r2,r16,271ac <___vfprintf_internal_r+0x1dd8>
   26ef0:	1027883a 	mov	r19,r2
   26ef4:	dc400b84 	addi	r17,sp,46
   26ef8:	8009883a 	mov	r4,r16
   26efc:	01400284 	movi	r5,10
   26f00:	002d2bc0 	call	2d2bc <__modsi3>
   26f04:	10800c04 	addi	r2,r2,48
   26f08:	8c7fffc4 	addi	r17,r17,-1
   26f0c:	8009883a 	mov	r4,r16
   26f10:	01400284 	movi	r5,10
   26f14:	88800005 	stb	r2,0(r17)
   26f18:	002d25c0 	call	2d25c <__divsi3>
   26f1c:	1021883a 	mov	r16,r2
   26f20:	98bff516 	blt	r19,r2,26ef8 <___vfprintf_internal_r+0x1b24>
   26f24:	10c00c04 	addi	r3,r2,48
   26f28:	d88009c4 	addi	r2,sp,39
   26f2c:	108001c4 	addi	r2,r2,7
   26f30:	897fffc4 	addi	r5,r17,-1
   26f34:	88ffffc5 	stb	r3,-1(r17)
   26f38:	2880a72e 	bgeu	r5,r2,271d8 <___vfprintf_internal_r+0x1e04>
   26f3c:	1009883a 	mov	r4,r2
   26f40:	d9800804 	addi	r6,sp,32
   26f44:	d8c00884 	addi	r3,sp,34
   26f48:	28800003 	ldbu	r2,0(r5)
   26f4c:	29400044 	addi	r5,r5,1
   26f50:	18800005 	stb	r2,0(r3)
   26f54:	18c00044 	addi	r3,r3,1
   26f58:	293ffb36 	bltu	r5,r4,26f48 <___vfprintf_internal_r+0x1b74>
   26f5c:	1987c83a 	sub	r3,r3,r6
   26f60:	00800044 	movi	r2,1
   26f64:	d8c14815 	stw	r3,1312(sp)
   26f68:	90cf883a 	add	r7,r18,r3
   26f6c:	1480960e 	bge	r2,r18,271c8 <___vfprintf_internal_r+0x1df4>
   26f70:	39c00044 	addi	r7,r7,1
   26f74:	d9c14515 	stw	r7,1300(sp)
   26f78:	38003416 	blt	r7,zero,2704c <___vfprintf_internal_r+0x1c78>
   26f7c:	e0803fcc 	andi	r2,fp,255
   26f80:	1080201c 	xori	r2,r2,128
   26f84:	10bfe004 	addi	r2,r2,-128
   26f88:	10004e26 	beq	r2,zero,270c4 <___vfprintf_internal_r+0x1cf0>
   26f8c:	00800b44 	movi	r2,45
   26f90:	dc814715 	stw	r18,1308(sp)
   26f94:	d8014615 	stw	zero,1304(sp)
   26f98:	d8800405 	stb	r2,16(sp)
   26f9c:	003bb106 	br	25e64 <___vfprintf_internal_r+0xa90>
   26fa0:	00800b44 	movi	r2,45
   26fa4:	d8800405 	stb	r2,16(sp)
   26fa8:	003d3306 	br	26478 <___vfprintf_internal_r+0x10a4>
   26fac:	d9014f17 	ldw	r4,1340(sp)
   26fb0:	b00b883a 	mov	r5,r22
   26fb4:	d9800c04 	addi	r6,sp,48
   26fb8:	002537c0 	call	2537c <__sprint_r>
   26fbc:	103abd1e 	bne	r2,zero,25ab4 <___vfprintf_internal_r+0x6e0>
   26fc0:	003abb06 	br	25ab0 <___vfprintf_internal_r+0x6dc>
   26fc4:	38800017 	ldw	r2,0(r7)
   26fc8:	39c00104 	addi	r7,r7,4
   26fcc:	d9c14015 	stw	r7,1280(sp)
   26fd0:	d9414b17 	ldw	r5,1324(sp)
   26fd4:	d9c14017 	ldw	r7,1280(sp)
   26fd8:	11400015 	stw	r5,0(r2)
   26fdc:	00395906 	br	25544 <___vfprintf_internal_r+0x170>
   26fe0:	980f883a 	mov	r7,r19
   26fe4:	dcc14515 	stw	r19,1300(sp)
   26fe8:	d8014615 	stw	zero,1304(sp)
   26fec:	003b9b06 	br	25e5c <___vfprintf_internal_r+0xa88>
   26ff0:	0027883a 	mov	r19,zero
   26ff4:	00397806 	br	255d8 <___vfprintf_internal_r+0x204>
   26ff8:	00c000f4 	movhi	r3,3
   26ffc:	18ff9704 	addi	r3,r3,-420
   27000:	100f883a 	mov	r7,r2
   27004:	d8814515 	stw	r2,1300(sp)
   27008:	d8c14115 	stw	r3,1284(sp)
   2700c:	0039e006 	br	25790 <___vfprintf_internal_r+0x3bc>
   27010:	008000f4 	movhi	r2,3
   27014:	10bf9604 	addi	r2,r2,-424
   27018:	d8814115 	stw	r2,1284(sp)
   2701c:	003d1c06 	br	26490 <___vfprintf_internal_r+0x10bc>
   27020:	d9414d17 	ldw	r5,1332(sp)
   27024:	00801984 	movi	r2,102
   27028:	28804926 	beq	r5,r2,27150 <___vfprintf_internal_r+0x1d7c>
   2702c:	200f883a 	mov	r7,r4
   27030:	24805716 	blt	r4,r18,27190 <___vfprintf_internal_r+0x1dbc>
   27034:	d9414c17 	ldw	r5,1328(sp)
   27038:	2880004c 	andi	r2,r5,1
   2703c:	10000126 	beq	r2,zero,27044 <___vfprintf_internal_r+0x1c70>
   27040:	21c00044 	addi	r7,r4,1
   27044:	d9c14515 	stw	r7,1300(sp)
   27048:	383fcc0e 	bge	r7,zero,26f7c <___vfprintf_internal_r+0x1ba8>
   2704c:	d8014515 	stw	zero,1300(sp)
   27050:	003fca06 	br	26f7c <___vfprintf_internal_r+0x1ba8>
   27054:	d9000517 	ldw	r4,20(sp)
   27058:	00bfff04 	movi	r2,-4
   2705c:	1100480e 	bge	r2,r4,27180 <___vfprintf_internal_r+0x1dac>
   27060:	99004716 	blt	r19,r4,27180 <___vfprintf_internal_r+0x1dac>
   27064:	d8c14d15 	stw	r3,1332(sp)
   27068:	003ff006 	br	2702c <___vfprintf_internal_r+0x1c58>
   2706c:	d8800717 	ldw	r2,28(sp)
   27070:	14bf8b2e 	bgeu	r2,r18,26ea0 <___vfprintf_internal_r+0x1acc>
   27074:	9007883a 	mov	r3,r18
   27078:	01000c04 	movi	r4,48
   2707c:	11000005 	stb	r4,0(r2)
   27080:	10800044 	addi	r2,r2,1
   27084:	d8800715 	stw	r2,28(sp)
   27088:	18bffc1e 	bne	r3,r2,2707c <___vfprintf_internal_r+0x1ca8>
   2708c:	003f8406 	br	26ea0 <___vfprintf_internal_r+0x1acc>
   27090:	d8814117 	ldw	r2,1284(sp)
   27094:	10c00007 	ldb	r3,0(r2)
   27098:	00800c04 	movi	r2,48
   2709c:	18805b26 	beq	r3,r2,2720c <___vfprintf_internal_r+0x1e38>
   270a0:	d9000517 	ldw	r4,20(sp)
   270a4:	9125883a 	add	r18,r18,r4
   270a8:	003f7506 	br	26e80 <___vfprintf_internal_r+0x1aac>
   270ac:	d9014c17 	ldw	r4,1328(sp)
   270b0:	2080004c 	andi	r2,r4,1
   270b4:	1005003a 	cmpeq	r2,r2,zero
   270b8:	103f6a26 	beq	r2,zero,26e64 <___vfprintf_internal_r+0x1a90>
   270bc:	d8800717 	ldw	r2,28(sp)
   270c0:	003f7706 	br	26ea0 <___vfprintf_internal_r+0x1acc>
   270c4:	d9c14515 	stw	r7,1300(sp)
   270c8:	38004d16 	blt	r7,zero,27200 <___vfprintf_internal_r+0x1e2c>
   270cc:	dc814715 	stw	r18,1308(sp)
   270d0:	d8014615 	stw	zero,1304(sp)
   270d4:	003b6106 	br	25e5c <___vfprintf_internal_r+0xa88>
   270d8:	d9014f17 	ldw	r4,1340(sp)
   270dc:	d8800504 	addi	r2,sp,20
   270e0:	d8800115 	stw	r2,4(sp)
   270e4:	d8c00604 	addi	r3,sp,24
   270e8:	d8800704 	addi	r2,sp,28
   270ec:	800b883a 	mov	r5,r16
   270f0:	880d883a 	mov	r6,r17
   270f4:	01c000c4 	movi	r7,3
   270f8:	d8c00215 	stw	r3,8(sp)
   270fc:	d8800315 	stw	r2,12(sp)
   27100:	dcc00015 	stw	r19,0(sp)
   27104:	9829883a 	mov	r20,r19
   27108:	00275f80 	call	275f8 <_dtoa_r>
   2710c:	d8814115 	stw	r2,1284(sp)
   27110:	003f5106 	br	26e58 <___vfprintf_internal_r+0x1a84>
   27114:	d8c14217 	ldw	r3,1288(sp)
   27118:	d9014317 	ldw	r4,1292(sp)
   2711c:	07000b44 	movi	fp,45
   27120:	1821883a 	mov	r16,r3
   27124:	2460003c 	xorhi	r17,r4,32768
   27128:	003f3106 	br	26df0 <___vfprintf_internal_r+0x1a1c>
   2712c:	9d000044 	addi	r20,r19,1
   27130:	003f3906 	br	26e18 <___vfprintf_internal_r+0x1a44>
   27134:	983f251e 	bne	r19,zero,26dcc <___vfprintf_internal_r+0x19f8>
   27138:	04c00044 	movi	r19,1
   2713c:	003f2306 	br	26dcc <___vfprintf_internal_r+0x19f8>
   27140:	04c00184 	movi	r19,6
   27144:	003f2106 	br	26dcc <___vfprintf_internal_r+0x19f8>
   27148:	d8014515 	stw	zero,1300(sp)
   2714c:	003eee06 	br	26d08 <___vfprintf_internal_r+0x1934>
   27150:	200f883a 	mov	r7,r4
   27154:	0100370e 	bge	zero,r4,27234 <___vfprintf_internal_r+0x1e60>
   27158:	9800031e 	bne	r19,zero,27168 <___vfprintf_internal_r+0x1d94>
   2715c:	d9814c17 	ldw	r6,1328(sp)
   27160:	3080004c 	andi	r2,r6,1
   27164:	103fb726 	beq	r2,zero,27044 <___vfprintf_internal_r+0x1c70>
   27168:	20800044 	addi	r2,r4,1
   2716c:	98a7883a 	add	r19,r19,r2
   27170:	dcc14515 	stw	r19,1300(sp)
   27174:	980f883a 	mov	r7,r19
   27178:	983f800e 	bge	r19,zero,26f7c <___vfprintf_internal_r+0x1ba8>
   2717c:	003fb306 	br	2704c <___vfprintf_internal_r+0x1c78>
   27180:	d9814d17 	ldw	r6,1332(sp)
   27184:	31bfff84 	addi	r6,r6,-2
   27188:	d9814d15 	stw	r6,1332(sp)
   2718c:	003f4c06 	br	26ec0 <___vfprintf_internal_r+0x1aec>
   27190:	0100180e 	bge	zero,r4,271f4 <___vfprintf_internal_r+0x1e20>
   27194:	00800044 	movi	r2,1
   27198:	1485883a 	add	r2,r2,r18
   2719c:	d8814515 	stw	r2,1300(sp)
   271a0:	100f883a 	mov	r7,r2
   271a4:	103f750e 	bge	r2,zero,26f7c <___vfprintf_internal_r+0x1ba8>
   271a8:	003fa806 	br	2704c <___vfprintf_internal_r+0x1c78>
   271ac:	80c00c04 	addi	r3,r16,48
   271b0:	00800c04 	movi	r2,48
   271b4:	d8c008c5 	stb	r3,35(sp)
   271b8:	d9800804 	addi	r6,sp,32
   271bc:	d8c00904 	addi	r3,sp,36
   271c0:	d8800885 	stb	r2,34(sp)
   271c4:	003f6506 	br	26f5c <___vfprintf_internal_r+0x1b88>
   271c8:	d9014c17 	ldw	r4,1328(sp)
   271cc:	2084703a 	and	r2,r4,r2
   271d0:	103f9c26 	beq	r2,zero,27044 <___vfprintf_internal_r+0x1c70>
   271d4:	003f6606 	br	26f70 <___vfprintf_internal_r+0x1b9c>
   271d8:	d9800804 	addi	r6,sp,32
   271dc:	d8c00884 	addi	r3,sp,34
   271e0:	003f5e06 	br	26f5c <___vfprintf_internal_r+0x1b88>
   271e4:	00800b44 	movi	r2,45
   271e8:	0121c83a 	sub	r16,zero,r4
   271ec:	d8800845 	stb	r2,33(sp)
   271f0:	003f3d06 	br	26ee8 <___vfprintf_internal_r+0x1b14>
   271f4:	00800084 	movi	r2,2
   271f8:	1105c83a 	sub	r2,r2,r4
   271fc:	003fe606 	br	27198 <___vfprintf_internal_r+0x1dc4>
   27200:	d8014515 	stw	zero,1300(sp)
   27204:	dc814715 	stw	r18,1308(sp)
   27208:	003fb106 	br	270d0 <___vfprintf_internal_r+0x1cfc>
   2720c:	000d883a 	mov	r6,zero
   27210:	000f883a 	mov	r7,zero
   27214:	8009883a 	mov	r4,r16
   27218:	880b883a 	mov	r5,r17
   2721c:	00244280 	call	24428 <__nedf2>
   27220:	103f9f26 	beq	r2,zero,270a0 <___vfprintf_internal_r+0x1ccc>
   27224:	00800044 	movi	r2,1
   27228:	1509c83a 	sub	r4,r2,r20
   2722c:	d9000515 	stw	r4,20(sp)
   27230:	003f9b06 	br	270a0 <___vfprintf_internal_r+0x1ccc>
   27234:	98000d1e 	bne	r19,zero,2726c <___vfprintf_internal_r+0x1e98>
   27238:	d8c14c17 	ldw	r3,1328(sp)
   2723c:	1880004c 	andi	r2,r3,1
   27240:	10000a1e 	bne	r2,zero,2726c <___vfprintf_internal_r+0x1e98>
   27244:	01000044 	movi	r4,1
   27248:	200f883a 	mov	r7,r4
   2724c:	d9014515 	stw	r4,1300(sp)
   27250:	003f4a06 	br	26f7c <___vfprintf_internal_r+0x1ba8>
   27254:	3cc00017 	ldw	r19,0(r7)
   27258:	39c00104 	addi	r7,r7,4
   2725c:	983d0e0e 	bge	r19,zero,26698 <___vfprintf_internal_r+0x12c4>
   27260:	b8c00007 	ldb	r3,0(r23)
   27264:	04ffffc4 	movi	r19,-1
   27268:	0038d906 	br	255d0 <___vfprintf_internal_r+0x1fc>
   2726c:	9cc00084 	addi	r19,r19,2
   27270:	dcc14515 	stw	r19,1300(sp)
   27274:	980f883a 	mov	r7,r19
   27278:	983f400e 	bge	r19,zero,26f7c <___vfprintf_internal_r+0x1ba8>
   2727c:	003f7306 	br	2704c <___vfprintf_internal_r+0x1c78>

00027280 <__vfprintf_internal>:
   27280:	008000f4 	movhi	r2,3
   27284:	1086af04 	addi	r2,r2,6844
   27288:	2013883a 	mov	r9,r4
   2728c:	11000017 	ldw	r4,0(r2)
   27290:	2805883a 	mov	r2,r5
   27294:	300f883a 	mov	r7,r6
   27298:	480b883a 	mov	r5,r9
   2729c:	100d883a 	mov	r6,r2
   272a0:	00253d41 	jmpi	253d4 <___vfprintf_internal_r>

000272a4 <__swsetup_r>:
   272a4:	008000f4 	movhi	r2,3
   272a8:	1086af04 	addi	r2,r2,6844
   272ac:	10c00017 	ldw	r3,0(r2)
   272b0:	defffd04 	addi	sp,sp,-12
   272b4:	dc400115 	stw	r17,4(sp)
   272b8:	dc000015 	stw	r16,0(sp)
   272bc:	dfc00215 	stw	ra,8(sp)
   272c0:	2023883a 	mov	r17,r4
   272c4:	2821883a 	mov	r16,r5
   272c8:	18000226 	beq	r3,zero,272d4 <__swsetup_r+0x30>
   272cc:	18800e17 	ldw	r2,56(r3)
   272d0:	10001f26 	beq	r2,zero,27350 <__swsetup_r+0xac>
   272d4:	8100030b 	ldhu	r4,12(r16)
   272d8:	2080020c 	andi	r2,r4,8
   272dc:	10002826 	beq	r2,zero,27380 <__swsetup_r+0xdc>
   272e0:	81400417 	ldw	r5,16(r16)
   272e4:	28001d26 	beq	r5,zero,2735c <__swsetup_r+0xb8>
   272e8:	2080004c 	andi	r2,r4,1
   272ec:	1005003a 	cmpeq	r2,r2,zero
   272f0:	10000b26 	beq	r2,zero,27320 <__swsetup_r+0x7c>
   272f4:	2080008c 	andi	r2,r4,2
   272f8:	10001226 	beq	r2,zero,27344 <__swsetup_r+0xa0>
   272fc:	0005883a 	mov	r2,zero
   27300:	80800215 	stw	r2,8(r16)
   27304:	28000b26 	beq	r5,zero,27334 <__swsetup_r+0x90>
   27308:	0005883a 	mov	r2,zero
   2730c:	dfc00217 	ldw	ra,8(sp)
   27310:	dc400117 	ldw	r17,4(sp)
   27314:	dc000017 	ldw	r16,0(sp)
   27318:	dec00304 	addi	sp,sp,12
   2731c:	f800283a 	ret
   27320:	80800517 	ldw	r2,20(r16)
   27324:	80000215 	stw	zero,8(r16)
   27328:	0085c83a 	sub	r2,zero,r2
   2732c:	80800615 	stw	r2,24(r16)
   27330:	283ff51e 	bne	r5,zero,27308 <__swsetup_r+0x64>
   27334:	2080200c 	andi	r2,r4,128
   27338:	103ff326 	beq	r2,zero,27308 <__swsetup_r+0x64>
   2733c:	00bfffc4 	movi	r2,-1
   27340:	003ff206 	br	2730c <__swsetup_r+0x68>
   27344:	80800517 	ldw	r2,20(r16)
   27348:	80800215 	stw	r2,8(r16)
   2734c:	003fed06 	br	27304 <__swsetup_r+0x60>
   27350:	1809883a 	mov	r4,r3
   27354:	0028e440 	call	28e44 <__sinit>
   27358:	003fde06 	br	272d4 <__swsetup_r+0x30>
   2735c:	20c0a00c 	andi	r3,r4,640
   27360:	00808004 	movi	r2,512
   27364:	18bfe026 	beq	r3,r2,272e8 <__swsetup_r+0x44>
   27368:	8809883a 	mov	r4,r17
   2736c:	800b883a 	mov	r5,r16
   27370:	0029bbc0 	call	29bbc <__smakebuf_r>
   27374:	8100030b 	ldhu	r4,12(r16)
   27378:	81400417 	ldw	r5,16(r16)
   2737c:	003fda06 	br	272e8 <__swsetup_r+0x44>
   27380:	2080040c 	andi	r2,r4,16
   27384:	103fed26 	beq	r2,zero,2733c <__swsetup_r+0x98>
   27388:	2080010c 	andi	r2,r4,4
   2738c:	10001226 	beq	r2,zero,273d8 <__swsetup_r+0x134>
   27390:	81400c17 	ldw	r5,48(r16)
   27394:	28000526 	beq	r5,zero,273ac <__swsetup_r+0x108>
   27398:	80801004 	addi	r2,r16,64
   2739c:	28800226 	beq	r5,r2,273a8 <__swsetup_r+0x104>
   273a0:	8809883a 	mov	r4,r17
   273a4:	00291c80 	call	291c8 <_free_r>
   273a8:	80000c15 	stw	zero,48(r16)
   273ac:	8080030b 	ldhu	r2,12(r16)
   273b0:	81400417 	ldw	r5,16(r16)
   273b4:	80000115 	stw	zero,4(r16)
   273b8:	10bff6cc 	andi	r2,r2,65499
   273bc:	8080030d 	sth	r2,12(r16)
   273c0:	81400015 	stw	r5,0(r16)
   273c4:	8080030b 	ldhu	r2,12(r16)
   273c8:	10800214 	ori	r2,r2,8
   273cc:	113fffcc 	andi	r4,r2,65535
   273d0:	8080030d 	sth	r2,12(r16)
   273d4:	003fc306 	br	272e4 <__swsetup_r+0x40>
   273d8:	81400417 	ldw	r5,16(r16)
   273dc:	003ff906 	br	273c4 <__swsetup_r+0x120>

000273e0 <quorem>:
   273e0:	28c00417 	ldw	r3,16(r5)
   273e4:	20800417 	ldw	r2,16(r4)
   273e8:	defff604 	addi	sp,sp,-40
   273ec:	ddc00715 	stw	r23,28(sp)
   273f0:	dd400515 	stw	r21,20(sp)
   273f4:	dfc00915 	stw	ra,36(sp)
   273f8:	df000815 	stw	fp,32(sp)
   273fc:	dd800615 	stw	r22,24(sp)
   27400:	dd000415 	stw	r20,16(sp)
   27404:	dcc00315 	stw	r19,12(sp)
   27408:	dc800215 	stw	r18,8(sp)
   2740c:	dc400115 	stw	r17,4(sp)
   27410:	dc000015 	stw	r16,0(sp)
   27414:	202f883a 	mov	r23,r4
   27418:	282b883a 	mov	r21,r5
   2741c:	10c07416 	blt	r2,r3,275f0 <quorem+0x210>
   27420:	1c7fffc4 	addi	r17,r3,-1
   27424:	8c45883a 	add	r2,r17,r17
   27428:	1085883a 	add	r2,r2,r2
   2742c:	2c000504 	addi	r16,r5,20
   27430:	24c00504 	addi	r19,r4,20
   27434:	14ed883a 	add	r22,r2,r19
   27438:	80a5883a 	add	r18,r16,r2
   2743c:	b7000017 	ldw	fp,0(r22)
   27440:	91400017 	ldw	r5,0(r18)
   27444:	e009883a 	mov	r4,fp
   27448:	29400044 	addi	r5,r5,1
   2744c:	002d31c0 	call	2d31c <__udivsi3>
   27450:	1029883a 	mov	r20,r2
   27454:	10003c1e 	bne	r2,zero,27548 <quorem+0x168>
   27458:	a80b883a 	mov	r5,r21
   2745c:	b809883a 	mov	r4,r23
   27460:	002a8e80 	call	2a8e8 <__mcmp>
   27464:	10002b16 	blt	r2,zero,27514 <quorem+0x134>
   27468:	a5000044 	addi	r20,r20,1
   2746c:	980f883a 	mov	r7,r19
   27470:	0011883a 	mov	r8,zero
   27474:	0009883a 	mov	r4,zero
   27478:	81400017 	ldw	r5,0(r16)
   2747c:	38c00017 	ldw	r3,0(r7)
   27480:	84000104 	addi	r16,r16,4
   27484:	28bfffcc 	andi	r2,r5,65535
   27488:	2085883a 	add	r2,r4,r2
   2748c:	11bfffcc 	andi	r6,r2,65535
   27490:	193fffcc 	andi	r4,r3,65535
   27494:	1004d43a 	srli	r2,r2,16
   27498:	280ad43a 	srli	r5,r5,16
   2749c:	2189c83a 	sub	r4,r4,r6
   274a0:	2209883a 	add	r4,r4,r8
   274a4:	1806d43a 	srli	r3,r3,16
   274a8:	288b883a 	add	r5,r5,r2
   274ac:	200dd43a 	srai	r6,r4,16
   274b0:	28bfffcc 	andi	r2,r5,65535
   274b4:	1887c83a 	sub	r3,r3,r2
   274b8:	1987883a 	add	r3,r3,r6
   274bc:	3900000d 	sth	r4,0(r7)
   274c0:	38c0008d 	sth	r3,2(r7)
   274c4:	2808d43a 	srli	r4,r5,16
   274c8:	39c00104 	addi	r7,r7,4
   274cc:	1811d43a 	srai	r8,r3,16
   274d0:	943fe92e 	bgeu	r18,r16,27478 <quorem+0x98>
   274d4:	8c45883a 	add	r2,r17,r17
   274d8:	1085883a 	add	r2,r2,r2
   274dc:	9885883a 	add	r2,r19,r2
   274e0:	10c00017 	ldw	r3,0(r2)
   274e4:	18000b1e 	bne	r3,zero,27514 <quorem+0x134>
   274e8:	113fff04 	addi	r4,r2,-4
   274ec:	9900082e 	bgeu	r19,r4,27510 <quorem+0x130>
   274f0:	10bfff17 	ldw	r2,-4(r2)
   274f4:	10000326 	beq	r2,zero,27504 <quorem+0x124>
   274f8:	00000506 	br	27510 <quorem+0x130>
   274fc:	20800017 	ldw	r2,0(r4)
   27500:	1000031e 	bne	r2,zero,27510 <quorem+0x130>
   27504:	213fff04 	addi	r4,r4,-4
   27508:	8c7fffc4 	addi	r17,r17,-1
   2750c:	993ffb36 	bltu	r19,r4,274fc <quorem+0x11c>
   27510:	bc400415 	stw	r17,16(r23)
   27514:	a005883a 	mov	r2,r20
   27518:	dfc00917 	ldw	ra,36(sp)
   2751c:	df000817 	ldw	fp,32(sp)
   27520:	ddc00717 	ldw	r23,28(sp)
   27524:	dd800617 	ldw	r22,24(sp)
   27528:	dd400517 	ldw	r21,20(sp)
   2752c:	dd000417 	ldw	r20,16(sp)
   27530:	dcc00317 	ldw	r19,12(sp)
   27534:	dc800217 	ldw	r18,8(sp)
   27538:	dc400117 	ldw	r17,4(sp)
   2753c:	dc000017 	ldw	r16,0(sp)
   27540:	dec00a04 	addi	sp,sp,40
   27544:	f800283a 	ret
   27548:	980f883a 	mov	r7,r19
   2754c:	8011883a 	mov	r8,r16
   27550:	0013883a 	mov	r9,zero
   27554:	000d883a 	mov	r6,zero
   27558:	40c00017 	ldw	r3,0(r8)
   2755c:	39000017 	ldw	r4,0(r7)
   27560:	42000104 	addi	r8,r8,4
   27564:	18bfffcc 	andi	r2,r3,65535
   27568:	a085383a 	mul	r2,r20,r2
   2756c:	1806d43a 	srli	r3,r3,16
   27570:	217fffcc 	andi	r5,r4,65535
   27574:	3085883a 	add	r2,r6,r2
   27578:	11bfffcc 	andi	r6,r2,65535
   2757c:	a0c7383a 	mul	r3,r20,r3
   27580:	1004d43a 	srli	r2,r2,16
   27584:	298bc83a 	sub	r5,r5,r6
   27588:	2a4b883a 	add	r5,r5,r9
   2758c:	2008d43a 	srli	r4,r4,16
   27590:	1887883a 	add	r3,r3,r2
   27594:	280dd43a 	srai	r6,r5,16
   27598:	18bfffcc 	andi	r2,r3,65535
   2759c:	2089c83a 	sub	r4,r4,r2
   275a0:	2189883a 	add	r4,r4,r6
   275a4:	3900008d 	sth	r4,2(r7)
   275a8:	3940000d 	sth	r5,0(r7)
   275ac:	180cd43a 	srli	r6,r3,16
   275b0:	39c00104 	addi	r7,r7,4
   275b4:	2013d43a 	srai	r9,r4,16
   275b8:	923fe72e 	bgeu	r18,r8,27558 <quorem+0x178>
   275bc:	e03fa61e 	bne	fp,zero,27458 <quorem+0x78>
   275c0:	b0ffff04 	addi	r3,r22,-4
   275c4:	98c0082e 	bgeu	r19,r3,275e8 <quorem+0x208>
   275c8:	b0bfff17 	ldw	r2,-4(r22)
   275cc:	10000326 	beq	r2,zero,275dc <quorem+0x1fc>
   275d0:	00000506 	br	275e8 <quorem+0x208>
   275d4:	18800017 	ldw	r2,0(r3)
   275d8:	1000031e 	bne	r2,zero,275e8 <quorem+0x208>
   275dc:	18ffff04 	addi	r3,r3,-4
   275e0:	8c7fffc4 	addi	r17,r17,-1
   275e4:	98fffb36 	bltu	r19,r3,275d4 <quorem+0x1f4>
   275e8:	bc400415 	stw	r17,16(r23)
   275ec:	003f9a06 	br	27458 <quorem+0x78>
   275f0:	0005883a 	mov	r2,zero
   275f4:	003fc806 	br	27518 <quorem+0x138>

000275f8 <_dtoa_r>:
   275f8:	22001017 	ldw	r8,64(r4)
   275fc:	deffda04 	addi	sp,sp,-152
   27600:	dd402115 	stw	r21,132(sp)
   27604:	dd002015 	stw	r20,128(sp)
   27608:	dc801e15 	stw	r18,120(sp)
   2760c:	dc401d15 	stw	r17,116(sp)
   27610:	dfc02515 	stw	ra,148(sp)
   27614:	df002415 	stw	fp,144(sp)
   27618:	ddc02315 	stw	r23,140(sp)
   2761c:	dd802215 	stw	r22,136(sp)
   27620:	dcc01f15 	stw	r19,124(sp)
   27624:	dc001c15 	stw	r16,112(sp)
   27628:	d9001615 	stw	r4,88(sp)
   2762c:	3023883a 	mov	r17,r6
   27630:	2829883a 	mov	r20,r5
   27634:	d9c01715 	stw	r7,92(sp)
   27638:	dc802817 	ldw	r18,160(sp)
   2763c:	302b883a 	mov	r21,r6
   27640:	40000a26 	beq	r8,zero,2766c <_dtoa_r+0x74>
   27644:	20801117 	ldw	r2,68(r4)
   27648:	400b883a 	mov	r5,r8
   2764c:	40800115 	stw	r2,4(r8)
   27650:	20c01117 	ldw	r3,68(r4)
   27654:	00800044 	movi	r2,1
   27658:	10c4983a 	sll	r2,r2,r3
   2765c:	40800215 	stw	r2,8(r8)
   27660:	002a78c0 	call	2a78c <_Bfree>
   27664:	d8c01617 	ldw	r3,88(sp)
   27668:	18001015 	stw	zero,64(r3)
   2766c:	8800a316 	blt	r17,zero,278fc <_dtoa_r+0x304>
   27670:	90000015 	stw	zero,0(r18)
   27674:	a8dffc2c 	andhi	r3,r21,32752
   27678:	009ffc34 	movhi	r2,32752
   2767c:	18809126 	beq	r3,r2,278c4 <_dtoa_r+0x2cc>
   27680:	000d883a 	mov	r6,zero
   27684:	000f883a 	mov	r7,zero
   27688:	a009883a 	mov	r4,r20
   2768c:	a80b883a 	mov	r5,r21
   27690:	dd001215 	stw	r20,72(sp)
   27694:	dd401315 	stw	r21,76(sp)
   27698:	00244280 	call	24428 <__nedf2>
   2769c:	1000171e 	bne	r2,zero,276fc <_dtoa_r+0x104>
   276a0:	d9802717 	ldw	r6,156(sp)
   276a4:	00800044 	movi	r2,1
   276a8:	30800015 	stw	r2,0(r6)
   276ac:	d8802917 	ldw	r2,164(sp)
   276b0:	10029b26 	beq	r2,zero,28120 <_dtoa_r+0xb28>
   276b4:	d9002917 	ldw	r4,164(sp)
   276b8:	008000f4 	movhi	r2,3
   276bc:	10bfa544 	addi	r2,r2,-363
   276c0:	10ffffc4 	addi	r3,r2,-1
   276c4:	20800015 	stw	r2,0(r4)
   276c8:	1805883a 	mov	r2,r3
   276cc:	dfc02517 	ldw	ra,148(sp)
   276d0:	df002417 	ldw	fp,144(sp)
   276d4:	ddc02317 	ldw	r23,140(sp)
   276d8:	dd802217 	ldw	r22,136(sp)
   276dc:	dd402117 	ldw	r21,132(sp)
   276e0:	dd002017 	ldw	r20,128(sp)
   276e4:	dcc01f17 	ldw	r19,124(sp)
   276e8:	dc801e17 	ldw	r18,120(sp)
   276ec:	dc401d17 	ldw	r17,116(sp)
   276f0:	dc001c17 	ldw	r16,112(sp)
   276f4:	dec02604 	addi	sp,sp,152
   276f8:	f800283a 	ret
   276fc:	d9001617 	ldw	r4,88(sp)
   27700:	d9401217 	ldw	r5,72(sp)
   27704:	d8800104 	addi	r2,sp,4
   27708:	a80d883a 	mov	r6,r21
   2770c:	d9c00204 	addi	r7,sp,8
   27710:	d8800015 	stw	r2,0(sp)
   27714:	002adc80 	call	2adc8 <__d2b>
   27718:	d8800715 	stw	r2,28(sp)
   2771c:	a804d53a 	srli	r2,r21,20
   27720:	1101ffcc 	andi	r4,r2,2047
   27724:	20008626 	beq	r4,zero,27940 <_dtoa_r+0x348>
   27728:	d8c01217 	ldw	r3,72(sp)
   2772c:	00800434 	movhi	r2,16
   27730:	10bfffc4 	addi	r2,r2,-1
   27734:	ddc00117 	ldw	r23,4(sp)
   27738:	a884703a 	and	r2,r21,r2
   2773c:	1811883a 	mov	r8,r3
   27740:	124ffc34 	orhi	r9,r2,16368
   27744:	25bf0044 	addi	r22,r4,-1023
   27748:	d8000815 	stw	zero,32(sp)
   2774c:	0005883a 	mov	r2,zero
   27750:	00cffe34 	movhi	r3,16376
   27754:	480b883a 	mov	r5,r9
   27758:	4009883a 	mov	r4,r8
   2775c:	180f883a 	mov	r7,r3
   27760:	100d883a 	mov	r6,r2
   27764:	0023c900 	call	23c90 <__subdf3>
   27768:	0218dbf4 	movhi	r8,25455
   2776c:	4210d844 	addi	r8,r8,17249
   27770:	024ff4f4 	movhi	r9,16339
   27774:	4a61e9c4 	addi	r9,r9,-30809
   27778:	480f883a 	mov	r7,r9
   2777c:	400d883a 	mov	r6,r8
   27780:	180b883a 	mov	r5,r3
   27784:	1009883a 	mov	r4,r2
   27788:	0023d840 	call	23d84 <__muldf3>
   2778c:	0222d874 	movhi	r8,35681
   27790:	42322cc4 	addi	r8,r8,-14157
   27794:	024ff1f4 	movhi	r9,16327
   27798:	4a628a04 	addi	r9,r9,-30168
   2779c:	480f883a 	mov	r7,r9
   277a0:	400d883a 	mov	r6,r8
   277a4:	180b883a 	mov	r5,r3
   277a8:	1009883a 	mov	r4,r2
   277ac:	0023d100 	call	23d10 <__adddf3>
   277b0:	b009883a 	mov	r4,r22
   277b4:	1021883a 	mov	r16,r2
   277b8:	1823883a 	mov	r17,r3
   277bc:	00246d00 	call	246d0 <__floatsidf>
   277c0:	021427f4 	movhi	r8,20639
   277c4:	421e7ec4 	addi	r8,r8,31227
   277c8:	024ff4f4 	movhi	r9,16339
   277cc:	4a5104c4 	addi	r9,r9,17427
   277d0:	480f883a 	mov	r7,r9
   277d4:	400d883a 	mov	r6,r8
   277d8:	180b883a 	mov	r5,r3
   277dc:	1009883a 	mov	r4,r2
   277e0:	0023d840 	call	23d84 <__muldf3>
   277e4:	180f883a 	mov	r7,r3
   277e8:	880b883a 	mov	r5,r17
   277ec:	100d883a 	mov	r6,r2
   277f0:	8009883a 	mov	r4,r16
   277f4:	0023d100 	call	23d10 <__adddf3>
   277f8:	1009883a 	mov	r4,r2
   277fc:	180b883a 	mov	r5,r3
   27800:	1021883a 	mov	r16,r2
   27804:	1823883a 	mov	r17,r3
   27808:	00247c80 	call	247c8 <__fixdfsi>
   2780c:	000d883a 	mov	r6,zero
   27810:	000f883a 	mov	r7,zero
   27814:	8009883a 	mov	r4,r16
   27818:	880b883a 	mov	r5,r17
   2781c:	d8800d15 	stw	r2,52(sp)
   27820:	00245c00 	call	245c0 <__ltdf2>
   27824:	10031716 	blt	r2,zero,28484 <_dtoa_r+0xe8c>
   27828:	d8c00d17 	ldw	r3,52(sp)
   2782c:	00800584 	movi	r2,22
   27830:	10c1482e 	bgeu	r2,r3,27d54 <_dtoa_r+0x75c>
   27834:	01000044 	movi	r4,1
   27838:	d9000c15 	stw	r4,48(sp)
   2783c:	bd85c83a 	sub	r2,r23,r22
   27840:	11bfffc4 	addi	r6,r2,-1
   27844:	30030b16 	blt	r6,zero,28474 <_dtoa_r+0xe7c>
   27848:	d9800a15 	stw	r6,40(sp)
   2784c:	d8001115 	stw	zero,68(sp)
   27850:	d8c00d17 	ldw	r3,52(sp)
   27854:	1802ff16 	blt	r3,zero,28454 <_dtoa_r+0xe5c>
   27858:	d9000a17 	ldw	r4,40(sp)
   2785c:	d8c00915 	stw	r3,36(sp)
   27860:	d8001015 	stw	zero,64(sp)
   27864:	20c9883a 	add	r4,r4,r3
   27868:	d9000a15 	stw	r4,40(sp)
   2786c:	d9001717 	ldw	r4,92(sp)
   27870:	00800244 	movi	r2,9
   27874:	11004636 	bltu	r2,r4,27990 <_dtoa_r+0x398>
   27878:	00800144 	movi	r2,5
   2787c:	11020416 	blt	r2,r4,28090 <_dtoa_r+0xa98>
   27880:	04400044 	movi	r17,1
   27884:	d8c01717 	ldw	r3,92(sp)
   27888:	00800144 	movi	r2,5
   2788c:	10c1ed36 	bltu	r2,r3,28044 <_dtoa_r+0xa4c>
   27890:	18c5883a 	add	r2,r3,r3
   27894:	1085883a 	add	r2,r2,r2
   27898:	00c000b4 	movhi	r3,2
   2789c:	18de2b04 	addi	r3,r3,30892
   278a0:	10c5883a 	add	r2,r2,r3
   278a4:	11000017 	ldw	r4,0(r2)
   278a8:	2000683a 	jmp	r4
   278ac:	00027998 	cmpnei	zero,zero,2534
   278b0:	00027998 	cmpnei	zero,zero,2534
   278b4:	00028398 	cmpnei	zero,zero,2574
   278b8:	00028370 	cmpltui	zero,zero,2573
   278bc:	000283b4 	movhi	zero,2574
   278c0:	000283c0 	call	283c <__alt_mem_RAM-0x1d7c4>
   278c4:	d9002717 	ldw	r4,156(sp)
   278c8:	0089c3c4 	movi	r2,9999
   278cc:	20800015 	stw	r2,0(r4)
   278d0:	a0001026 	beq	r20,zero,27914 <_dtoa_r+0x31c>
   278d4:	00c000f4 	movhi	r3,3
   278d8:	18ffb104 	addi	r3,r3,-316
   278dc:	d9802917 	ldw	r6,164(sp)
   278e0:	303f7926 	beq	r6,zero,276c8 <_dtoa_r+0xd0>
   278e4:	188000c7 	ldb	r2,3(r3)
   278e8:	190000c4 	addi	r4,r3,3
   278ec:	1000101e 	bne	r2,zero,27930 <_dtoa_r+0x338>
   278f0:	d8802917 	ldw	r2,164(sp)
   278f4:	11000015 	stw	r4,0(r2)
   278f8:	003f7306 	br	276c8 <_dtoa_r+0xd0>
   278fc:	00a00034 	movhi	r2,32768
   27900:	10bfffc4 	addi	r2,r2,-1
   27904:	00c00044 	movi	r3,1
   27908:	88aa703a 	and	r21,r17,r2
   2790c:	90c00015 	stw	r3,0(r18)
   27910:	003f5806 	br	27674 <_dtoa_r+0x7c>
   27914:	00800434 	movhi	r2,16
   27918:	10bfffc4 	addi	r2,r2,-1
   2791c:	a884703a 	and	r2,r21,r2
   27920:	103fec1e 	bne	r2,zero,278d4 <_dtoa_r+0x2dc>
   27924:	00c000f4 	movhi	r3,3
   27928:	18ffae04 	addi	r3,r3,-328
   2792c:	003feb06 	br	278dc <_dtoa_r+0x2e4>
   27930:	d8802917 	ldw	r2,164(sp)
   27934:	19000204 	addi	r4,r3,8
   27938:	11000015 	stw	r4,0(r2)
   2793c:	003f6206 	br	276c8 <_dtoa_r+0xd0>
   27940:	ddc00117 	ldw	r23,4(sp)
   27944:	d8800217 	ldw	r2,8(sp)
   27948:	01000804 	movi	r4,32
   2794c:	b8c10c84 	addi	r3,r23,1074
   27950:	18a3883a 	add	r17,r3,r2
   27954:	2441b80e 	bge	r4,r17,28038 <_dtoa_r+0xa40>
   27958:	00c01004 	movi	r3,64
   2795c:	1c47c83a 	sub	r3,r3,r17
   27960:	88bff804 	addi	r2,r17,-32
   27964:	a8c6983a 	sll	r3,r21,r3
   27968:	a084d83a 	srl	r2,r20,r2
   2796c:	1888b03a 	or	r4,r3,r2
   27970:	002d04c0 	call	2d04c <__floatunsidf>
   27974:	1011883a 	mov	r8,r2
   27978:	00bf8434 	movhi	r2,65040
   2797c:	01000044 	movi	r4,1
   27980:	10d3883a 	add	r9,r2,r3
   27984:	8dbef344 	addi	r22,r17,-1075
   27988:	d9000815 	stw	r4,32(sp)
   2798c:	003f6f06 	br	2774c <_dtoa_r+0x154>
   27990:	d8001715 	stw	zero,92(sp)
   27994:	04400044 	movi	r17,1
   27998:	00bfffc4 	movi	r2,-1
   2799c:	00c00044 	movi	r3,1
   279a0:	d8800e15 	stw	r2,56(sp)
   279a4:	d8002615 	stw	zero,152(sp)
   279a8:	d8800f15 	stw	r2,60(sp)
   279ac:	d8c00b15 	stw	r3,44(sp)
   279b0:	1021883a 	mov	r16,r2
   279b4:	d8801617 	ldw	r2,88(sp)
   279b8:	10001115 	stw	zero,68(r2)
   279bc:	d8801617 	ldw	r2,88(sp)
   279c0:	11401117 	ldw	r5,68(r2)
   279c4:	1009883a 	mov	r4,r2
   279c8:	002ad0c0 	call	2ad0c <_Balloc>
   279cc:	d8c01617 	ldw	r3,88(sp)
   279d0:	d8800515 	stw	r2,20(sp)
   279d4:	18801015 	stw	r2,64(r3)
   279d8:	00800384 	movi	r2,14
   279dc:	14006836 	bltu	r2,r16,27b80 <_dtoa_r+0x588>
   279e0:	8805003a 	cmpeq	r2,r17,zero
   279e4:	1000661e 	bne	r2,zero,27b80 <_dtoa_r+0x588>
   279e8:	d9000d17 	ldw	r4,52(sp)
   279ec:	0102300e 	bge	zero,r4,282b0 <_dtoa_r+0xcb8>
   279f0:	208003cc 	andi	r2,r4,15
   279f4:	100490fa 	slli	r2,r2,3
   279f8:	2025d13a 	srai	r18,r4,4
   279fc:	00c000f4 	movhi	r3,3
   27a00:	18ffc204 	addi	r3,r3,-248
   27a04:	10c5883a 	add	r2,r2,r3
   27a08:	90c0040c 	andi	r3,r18,16
   27a0c:	14000017 	ldw	r16,0(r2)
   27a10:	14400117 	ldw	r17,4(r2)
   27a14:	18036a1e 	bne	r3,zero,287c0 <_dtoa_r+0x11c8>
   27a18:	05800084 	movi	r22,2
   27a1c:	90001026 	beq	r18,zero,27a60 <_dtoa_r+0x468>
   27a20:	04c000f4 	movhi	r19,3
   27a24:	9cfff404 	addi	r19,r19,-48
   27a28:	9080004c 	andi	r2,r18,1
   27a2c:	1005003a 	cmpeq	r2,r2,zero
   27a30:	1000081e 	bne	r2,zero,27a54 <_dtoa_r+0x45c>
   27a34:	99800017 	ldw	r6,0(r19)
   27a38:	99c00117 	ldw	r7,4(r19)
   27a3c:	880b883a 	mov	r5,r17
   27a40:	8009883a 	mov	r4,r16
   27a44:	0023d840 	call	23d84 <__muldf3>
   27a48:	1021883a 	mov	r16,r2
   27a4c:	b5800044 	addi	r22,r22,1
   27a50:	1823883a 	mov	r17,r3
   27a54:	9025d07a 	srai	r18,r18,1
   27a58:	9cc00204 	addi	r19,r19,8
   27a5c:	903ff21e 	bne	r18,zero,27a28 <_dtoa_r+0x430>
   27a60:	a80b883a 	mov	r5,r21
   27a64:	a009883a 	mov	r4,r20
   27a68:	880f883a 	mov	r7,r17
   27a6c:	800d883a 	mov	r6,r16
   27a70:	00241480 	call	24148 <__divdf3>
   27a74:	1029883a 	mov	r20,r2
   27a78:	182b883a 	mov	r21,r3
   27a7c:	d8c00c17 	ldw	r3,48(sp)
   27a80:	1805003a 	cmpeq	r2,r3,zero
   27a84:	1000081e 	bne	r2,zero,27aa8 <_dtoa_r+0x4b0>
   27a88:	0005883a 	mov	r2,zero
   27a8c:	00cffc34 	movhi	r3,16368
   27a90:	180f883a 	mov	r7,r3
   27a94:	a009883a 	mov	r4,r20
   27a98:	a80b883a 	mov	r5,r21
   27a9c:	100d883a 	mov	r6,r2
   27aa0:	00245c00 	call	245c0 <__ltdf2>
   27aa4:	1003fe16 	blt	r2,zero,28aa0 <_dtoa_r+0x14a8>
   27aa8:	b009883a 	mov	r4,r22
   27aac:	00246d00 	call	246d0 <__floatsidf>
   27ab0:	180b883a 	mov	r5,r3
   27ab4:	1009883a 	mov	r4,r2
   27ab8:	a00d883a 	mov	r6,r20
   27abc:	a80f883a 	mov	r7,r21
   27ac0:	0023d840 	call	23d84 <__muldf3>
   27ac4:	0011883a 	mov	r8,zero
   27ac8:	02500734 	movhi	r9,16412
   27acc:	1009883a 	mov	r4,r2
   27ad0:	180b883a 	mov	r5,r3
   27ad4:	480f883a 	mov	r7,r9
   27ad8:	400d883a 	mov	r6,r8
   27adc:	0023d100 	call	23d10 <__adddf3>
   27ae0:	d9000f17 	ldw	r4,60(sp)
   27ae4:	102d883a 	mov	r22,r2
   27ae8:	00bf3034 	movhi	r2,64704
   27aec:	18b9883a 	add	fp,r3,r2
   27af0:	e02f883a 	mov	r23,fp
   27af4:	20028f1e 	bne	r4,zero,28534 <_dtoa_r+0xf3c>
   27af8:	0005883a 	mov	r2,zero
   27afc:	00d00534 	movhi	r3,16404
   27b00:	a009883a 	mov	r4,r20
   27b04:	a80b883a 	mov	r5,r21
   27b08:	180f883a 	mov	r7,r3
   27b0c:	100d883a 	mov	r6,r2
   27b10:	0023c900 	call	23c90 <__subdf3>
   27b14:	1009883a 	mov	r4,r2
   27b18:	e00f883a 	mov	r7,fp
   27b1c:	180b883a 	mov	r5,r3
   27b20:	b00d883a 	mov	r6,r22
   27b24:	1025883a 	mov	r18,r2
   27b28:	1827883a 	mov	r19,r3
   27b2c:	00244b00 	call	244b0 <__gtdf2>
   27b30:	00834f16 	blt	zero,r2,28870 <_dtoa_r+0x1278>
   27b34:	e0e0003c 	xorhi	r3,fp,32768
   27b38:	9009883a 	mov	r4,r18
   27b3c:	980b883a 	mov	r5,r19
   27b40:	180f883a 	mov	r7,r3
   27b44:	b00d883a 	mov	r6,r22
   27b48:	00245c00 	call	245c0 <__ltdf2>
   27b4c:	1000080e 	bge	r2,zero,27b70 <_dtoa_r+0x578>
   27b50:	0027883a 	mov	r19,zero
   27b54:	0025883a 	mov	r18,zero
   27b58:	d8802617 	ldw	r2,152(sp)
   27b5c:	df000517 	ldw	fp,20(sp)
   27b60:	d8000615 	stw	zero,24(sp)
   27b64:	0084303a 	nor	r2,zero,r2
   27b68:	d8800d15 	stw	r2,52(sp)
   27b6c:	00019b06 	br	281dc <_dtoa_r+0xbe4>
   27b70:	d9801217 	ldw	r6,72(sp)
   27b74:	d8801317 	ldw	r2,76(sp)
   27b78:	3029883a 	mov	r20,r6
   27b7c:	102b883a 	mov	r21,r2
   27b80:	d8c00217 	ldw	r3,8(sp)
   27b84:	18008516 	blt	r3,zero,27d9c <_dtoa_r+0x7a4>
   27b88:	d9000d17 	ldw	r4,52(sp)
   27b8c:	00800384 	movi	r2,14
   27b90:	11008216 	blt	r2,r4,27d9c <_dtoa_r+0x7a4>
   27b94:	200490fa 	slli	r2,r4,3
   27b98:	d9802617 	ldw	r6,152(sp)
   27b9c:	00c000f4 	movhi	r3,3
   27ba0:	18ffc204 	addi	r3,r3,-248
   27ba4:	10c5883a 	add	r2,r2,r3
   27ba8:	14800017 	ldw	r18,0(r2)
   27bac:	14c00117 	ldw	r19,4(r2)
   27bb0:	30031e16 	blt	r6,zero,2882c <_dtoa_r+0x1234>
   27bb4:	d9000517 	ldw	r4,20(sp)
   27bb8:	d8c00f17 	ldw	r3,60(sp)
   27bbc:	a823883a 	mov	r17,r21
   27bc0:	a021883a 	mov	r16,r20
   27bc4:	192b883a 	add	r21,r3,r4
   27bc8:	2039883a 	mov	fp,r4
   27bcc:	00000f06 	br	27c0c <_dtoa_r+0x614>
   27bd0:	0005883a 	mov	r2,zero
   27bd4:	00d00934 	movhi	r3,16420
   27bd8:	5009883a 	mov	r4,r10
   27bdc:	580b883a 	mov	r5,r11
   27be0:	180f883a 	mov	r7,r3
   27be4:	100d883a 	mov	r6,r2
   27be8:	0023d840 	call	23d84 <__muldf3>
   27bec:	180b883a 	mov	r5,r3
   27bf0:	000d883a 	mov	r6,zero
   27bf4:	000f883a 	mov	r7,zero
   27bf8:	1009883a 	mov	r4,r2
   27bfc:	1021883a 	mov	r16,r2
   27c00:	1823883a 	mov	r17,r3
   27c04:	00244280 	call	24428 <__nedf2>
   27c08:	10004526 	beq	r2,zero,27d20 <_dtoa_r+0x728>
   27c0c:	900d883a 	mov	r6,r18
   27c10:	980f883a 	mov	r7,r19
   27c14:	8009883a 	mov	r4,r16
   27c18:	880b883a 	mov	r5,r17
   27c1c:	00241480 	call	24148 <__divdf3>
   27c20:	180b883a 	mov	r5,r3
   27c24:	1009883a 	mov	r4,r2
   27c28:	00247c80 	call	247c8 <__fixdfsi>
   27c2c:	1009883a 	mov	r4,r2
   27c30:	1029883a 	mov	r20,r2
   27c34:	00246d00 	call	246d0 <__floatsidf>
   27c38:	180f883a 	mov	r7,r3
   27c3c:	9009883a 	mov	r4,r18
   27c40:	980b883a 	mov	r5,r19
   27c44:	100d883a 	mov	r6,r2
   27c48:	0023d840 	call	23d84 <__muldf3>
   27c4c:	180f883a 	mov	r7,r3
   27c50:	880b883a 	mov	r5,r17
   27c54:	8009883a 	mov	r4,r16
   27c58:	100d883a 	mov	r6,r2
   27c5c:	0023c900 	call	23c90 <__subdf3>
   27c60:	1015883a 	mov	r10,r2
   27c64:	a0800c04 	addi	r2,r20,48
   27c68:	e0800005 	stb	r2,0(fp)
   27c6c:	e7000044 	addi	fp,fp,1
   27c70:	1817883a 	mov	r11,r3
   27c74:	e57fd61e 	bne	fp,r21,27bd0 <_dtoa_r+0x5d8>
   27c78:	500d883a 	mov	r6,r10
   27c7c:	180f883a 	mov	r7,r3
   27c80:	5009883a 	mov	r4,r10
   27c84:	180b883a 	mov	r5,r3
   27c88:	0023d100 	call	23d10 <__adddf3>
   27c8c:	100d883a 	mov	r6,r2
   27c90:	9009883a 	mov	r4,r18
   27c94:	980b883a 	mov	r5,r19
   27c98:	180f883a 	mov	r7,r3
   27c9c:	1021883a 	mov	r16,r2
   27ca0:	1823883a 	mov	r17,r3
   27ca4:	00245c00 	call	245c0 <__ltdf2>
   27ca8:	10000816 	blt	r2,zero,27ccc <_dtoa_r+0x6d4>
   27cac:	980b883a 	mov	r5,r19
   27cb0:	800d883a 	mov	r6,r16
   27cb4:	880f883a 	mov	r7,r17
   27cb8:	9009883a 	mov	r4,r18
   27cbc:	00243a00 	call	243a0 <__eqdf2>
   27cc0:	1000171e 	bne	r2,zero,27d20 <_dtoa_r+0x728>
   27cc4:	a080004c 	andi	r2,r20,1
   27cc8:	10001526 	beq	r2,zero,27d20 <_dtoa_r+0x728>
   27ccc:	d8800d17 	ldw	r2,52(sp)
   27cd0:	d8800415 	stw	r2,16(sp)
   27cd4:	e009883a 	mov	r4,fp
   27cd8:	213fffc4 	addi	r4,r4,-1
   27cdc:	20c00007 	ldb	r3,0(r4)
   27ce0:	00800e44 	movi	r2,57
   27ce4:	1880081e 	bne	r3,r2,27d08 <_dtoa_r+0x710>
   27ce8:	d8800517 	ldw	r2,20(sp)
   27cec:	113ffa1e 	bne	r2,r4,27cd8 <_dtoa_r+0x6e0>
   27cf0:	d8c00417 	ldw	r3,16(sp)
   27cf4:	d9800517 	ldw	r6,20(sp)
   27cf8:	00800c04 	movi	r2,48
   27cfc:	18c00044 	addi	r3,r3,1
   27d00:	d8c00415 	stw	r3,16(sp)
   27d04:	30800005 	stb	r2,0(r6)
   27d08:	20800003 	ldbu	r2,0(r4)
   27d0c:	d8c00417 	ldw	r3,16(sp)
   27d10:	27000044 	addi	fp,r4,1
   27d14:	10800044 	addi	r2,r2,1
   27d18:	d8c00d15 	stw	r3,52(sp)
   27d1c:	20800005 	stb	r2,0(r4)
   27d20:	d9001617 	ldw	r4,88(sp)
   27d24:	d9400717 	ldw	r5,28(sp)
   27d28:	002a78c0 	call	2a78c <_Bfree>
   27d2c:	e0000005 	stb	zero,0(fp)
   27d30:	d9800d17 	ldw	r6,52(sp)
   27d34:	d8c02717 	ldw	r3,156(sp)
   27d38:	d9002917 	ldw	r4,164(sp)
   27d3c:	30800044 	addi	r2,r6,1
   27d40:	18800015 	stw	r2,0(r3)
   27d44:	20029c26 	beq	r4,zero,287b8 <_dtoa_r+0x11c0>
   27d48:	d8c00517 	ldw	r3,20(sp)
   27d4c:	27000015 	stw	fp,0(r4)
   27d50:	003e5d06 	br	276c8 <_dtoa_r+0xd0>
   27d54:	d9800d17 	ldw	r6,52(sp)
   27d58:	00c000f4 	movhi	r3,3
   27d5c:	18ffc204 	addi	r3,r3,-248
   27d60:	d9001217 	ldw	r4,72(sp)
   27d64:	300490fa 	slli	r2,r6,3
   27d68:	d9401317 	ldw	r5,76(sp)
   27d6c:	10c5883a 	add	r2,r2,r3
   27d70:	12000017 	ldw	r8,0(r2)
   27d74:	12400117 	ldw	r9,4(r2)
   27d78:	400d883a 	mov	r6,r8
   27d7c:	480f883a 	mov	r7,r9
   27d80:	00245c00 	call	245c0 <__ltdf2>
   27d84:	1000030e 	bge	r2,zero,27d94 <_dtoa_r+0x79c>
   27d88:	d8800d17 	ldw	r2,52(sp)
   27d8c:	10bfffc4 	addi	r2,r2,-1
   27d90:	d8800d15 	stw	r2,52(sp)
   27d94:	d8000c15 	stw	zero,48(sp)
   27d98:	003ea806 	br	2783c <_dtoa_r+0x244>
   27d9c:	d9000b17 	ldw	r4,44(sp)
   27da0:	202cc03a 	cmpne	r22,r4,zero
   27da4:	b000c71e 	bne	r22,zero,280c4 <_dtoa_r+0xacc>
   27da8:	dc001117 	ldw	r16,68(sp)
   27dac:	dc801017 	ldw	r18,64(sp)
   27db0:	0027883a 	mov	r19,zero
   27db4:	04000b0e 	bge	zero,r16,27de4 <_dtoa_r+0x7ec>
   27db8:	d8c00a17 	ldw	r3,40(sp)
   27dbc:	00c0090e 	bge	zero,r3,27de4 <_dtoa_r+0x7ec>
   27dc0:	8005883a 	mov	r2,r16
   27dc4:	1c011316 	blt	r3,r16,28214 <_dtoa_r+0xc1c>
   27dc8:	d9000a17 	ldw	r4,40(sp)
   27dcc:	d9801117 	ldw	r6,68(sp)
   27dd0:	80a1c83a 	sub	r16,r16,r2
   27dd4:	2089c83a 	sub	r4,r4,r2
   27dd8:	308dc83a 	sub	r6,r6,r2
   27ddc:	d9000a15 	stw	r4,40(sp)
   27de0:	d9801115 	stw	r6,68(sp)
   27de4:	d8801017 	ldw	r2,64(sp)
   27de8:	0080150e 	bge	zero,r2,27e40 <_dtoa_r+0x848>
   27dec:	d8c00b17 	ldw	r3,44(sp)
   27df0:	1805003a 	cmpeq	r2,r3,zero
   27df4:	1001c91e 	bne	r2,zero,2851c <_dtoa_r+0xf24>
   27df8:	04800e0e 	bge	zero,r18,27e34 <_dtoa_r+0x83c>
   27dfc:	d9001617 	ldw	r4,88(sp)
   27e00:	980b883a 	mov	r5,r19
   27e04:	900d883a 	mov	r6,r18
   27e08:	002b5400 	call	2b540 <__pow5mult>
   27e0c:	d9001617 	ldw	r4,88(sp)
   27e10:	d9800717 	ldw	r6,28(sp)
   27e14:	100b883a 	mov	r5,r2
   27e18:	1027883a 	mov	r19,r2
   27e1c:	002b21c0 	call	2b21c <__multiply>
   27e20:	d9001617 	ldw	r4,88(sp)
   27e24:	d9400717 	ldw	r5,28(sp)
   27e28:	1023883a 	mov	r17,r2
   27e2c:	002a78c0 	call	2a78c <_Bfree>
   27e30:	dc400715 	stw	r17,28(sp)
   27e34:	d9001017 	ldw	r4,64(sp)
   27e38:	248dc83a 	sub	r6,r4,r18
   27e3c:	30010e1e 	bne	r6,zero,28278 <_dtoa_r+0xc80>
   27e40:	d9001617 	ldw	r4,88(sp)
   27e44:	04400044 	movi	r17,1
   27e48:	880b883a 	mov	r5,r17
   27e4c:	002b4040 	call	2b404 <__i2b>
   27e50:	d9800917 	ldw	r6,36(sp)
   27e54:	1025883a 	mov	r18,r2
   27e58:	0180040e 	bge	zero,r6,27e6c <_dtoa_r+0x874>
   27e5c:	d9001617 	ldw	r4,88(sp)
   27e60:	100b883a 	mov	r5,r2
   27e64:	002b5400 	call	2b540 <__pow5mult>
   27e68:	1025883a 	mov	r18,r2
   27e6c:	d8801717 	ldw	r2,92(sp)
   27e70:	8880f30e 	bge	r17,r2,28240 <_dtoa_r+0xc48>
   27e74:	0023883a 	mov	r17,zero
   27e78:	d9800917 	ldw	r6,36(sp)
   27e7c:	30019e1e 	bne	r6,zero,284f8 <_dtoa_r+0xf00>
   27e80:	00c00044 	movi	r3,1
   27e84:	d9000a17 	ldw	r4,40(sp)
   27e88:	20c5883a 	add	r2,r4,r3
   27e8c:	10c007cc 	andi	r3,r2,31
   27e90:	1800841e 	bne	r3,zero,280a4 <_dtoa_r+0xaac>
   27e94:	00800704 	movi	r2,28
   27e98:	d9000a17 	ldw	r4,40(sp)
   27e9c:	d9801117 	ldw	r6,68(sp)
   27ea0:	80a1883a 	add	r16,r16,r2
   27ea4:	2089883a 	add	r4,r4,r2
   27ea8:	308d883a 	add	r6,r6,r2
   27eac:	d9000a15 	stw	r4,40(sp)
   27eb0:	d9801115 	stw	r6,68(sp)
   27eb4:	d8801117 	ldw	r2,68(sp)
   27eb8:	0080050e 	bge	zero,r2,27ed0 <_dtoa_r+0x8d8>
   27ebc:	d9400717 	ldw	r5,28(sp)
   27ec0:	d9001617 	ldw	r4,88(sp)
   27ec4:	100d883a 	mov	r6,r2
   27ec8:	002b0d00 	call	2b0d0 <__lshift>
   27ecc:	d8800715 	stw	r2,28(sp)
   27ed0:	d8c00a17 	ldw	r3,40(sp)
   27ed4:	00c0050e 	bge	zero,r3,27eec <_dtoa_r+0x8f4>
   27ed8:	d9001617 	ldw	r4,88(sp)
   27edc:	900b883a 	mov	r5,r18
   27ee0:	180d883a 	mov	r6,r3
   27ee4:	002b0d00 	call	2b0d0 <__lshift>
   27ee8:	1025883a 	mov	r18,r2
   27eec:	d9000c17 	ldw	r4,48(sp)
   27ef0:	2005003a 	cmpeq	r2,r4,zero
   27ef4:	10016f26 	beq	r2,zero,284b4 <_dtoa_r+0xebc>
   27ef8:	d9000f17 	ldw	r4,60(sp)
   27efc:	0102170e 	bge	zero,r4,2875c <_dtoa_r+0x1164>
   27f00:	d9800b17 	ldw	r6,44(sp)
   27f04:	3005003a 	cmpeq	r2,r6,zero
   27f08:	1000881e 	bne	r2,zero,2812c <_dtoa_r+0xb34>
   27f0c:	0400050e 	bge	zero,r16,27f24 <_dtoa_r+0x92c>
   27f10:	d9001617 	ldw	r4,88(sp)
   27f14:	980b883a 	mov	r5,r19
   27f18:	800d883a 	mov	r6,r16
   27f1c:	002b0d00 	call	2b0d0 <__lshift>
   27f20:	1027883a 	mov	r19,r2
   27f24:	8804c03a 	cmpne	r2,r17,zero
   27f28:	1002541e 	bne	r2,zero,2887c <_dtoa_r+0x1284>
   27f2c:	980b883a 	mov	r5,r19
   27f30:	dd800517 	ldw	r22,20(sp)
   27f34:	dcc00615 	stw	r19,24(sp)
   27f38:	a700004c 	andi	fp,r20,1
   27f3c:	2827883a 	mov	r19,r5
   27f40:	d9000717 	ldw	r4,28(sp)
   27f44:	900b883a 	mov	r5,r18
   27f48:	00273e00 	call	273e0 <quorem>
   27f4c:	d9000717 	ldw	r4,28(sp)
   27f50:	d9400617 	ldw	r5,24(sp)
   27f54:	1023883a 	mov	r17,r2
   27f58:	8dc00c04 	addi	r23,r17,48
   27f5c:	002a8e80 	call	2a8e8 <__mcmp>
   27f60:	d9001617 	ldw	r4,88(sp)
   27f64:	900b883a 	mov	r5,r18
   27f68:	980d883a 	mov	r6,r19
   27f6c:	1029883a 	mov	r20,r2
   27f70:	002af440 	call	2af44 <__mdiff>
   27f74:	102b883a 	mov	r21,r2
   27f78:	10800317 	ldw	r2,12(r2)
   27f7c:	1001281e 	bne	r2,zero,28420 <_dtoa_r+0xe28>
   27f80:	d9000717 	ldw	r4,28(sp)
   27f84:	a80b883a 	mov	r5,r21
   27f88:	002a8e80 	call	2a8e8 <__mcmp>
   27f8c:	d9001617 	ldw	r4,88(sp)
   27f90:	1021883a 	mov	r16,r2
   27f94:	a80b883a 	mov	r5,r21
   27f98:	002a78c0 	call	2a78c <_Bfree>
   27f9c:	8000041e 	bne	r16,zero,27fb0 <_dtoa_r+0x9b8>
   27fa0:	d8801717 	ldw	r2,92(sp)
   27fa4:	1000021e 	bne	r2,zero,27fb0 <_dtoa_r+0x9b8>
   27fa8:	e004c03a 	cmpne	r2,fp,zero
   27fac:	10011726 	beq	r2,zero,2840c <_dtoa_r+0xe14>
   27fb0:	a0010616 	blt	r20,zero,283cc <_dtoa_r+0xdd4>
   27fb4:	a000041e 	bne	r20,zero,27fc8 <_dtoa_r+0x9d0>
   27fb8:	d8c01717 	ldw	r3,92(sp)
   27fbc:	1800021e 	bne	r3,zero,27fc8 <_dtoa_r+0x9d0>
   27fc0:	e004c03a 	cmpne	r2,fp,zero
   27fc4:	10010126 	beq	r2,zero,283cc <_dtoa_r+0xdd4>
   27fc8:	04023d16 	blt	zero,r16,288c0 <_dtoa_r+0x12c8>
   27fcc:	b5c00005 	stb	r23,0(r22)
   27fd0:	d9800517 	ldw	r6,20(sp)
   27fd4:	d9000f17 	ldw	r4,60(sp)
   27fd8:	b5800044 	addi	r22,r22,1
   27fdc:	3105883a 	add	r2,r6,r4
   27fe0:	b0806526 	beq	r22,r2,28178 <_dtoa_r+0xb80>
   27fe4:	d9400717 	ldw	r5,28(sp)
   27fe8:	d9001617 	ldw	r4,88(sp)
   27fec:	01800284 	movi	r6,10
   27ff0:	000f883a 	mov	r7,zero
   27ff4:	002b4400 	call	2b440 <__multadd>
   27ff8:	d8800715 	stw	r2,28(sp)
   27ffc:	d8800617 	ldw	r2,24(sp)
   28000:	14c10c26 	beq	r2,r19,28434 <_dtoa_r+0xe3c>
   28004:	d9400617 	ldw	r5,24(sp)
   28008:	d9001617 	ldw	r4,88(sp)
   2800c:	01800284 	movi	r6,10
   28010:	000f883a 	mov	r7,zero
   28014:	002b4400 	call	2b440 <__multadd>
   28018:	d9001617 	ldw	r4,88(sp)
   2801c:	980b883a 	mov	r5,r19
   28020:	01800284 	movi	r6,10
   28024:	000f883a 	mov	r7,zero
   28028:	d8800615 	stw	r2,24(sp)
   2802c:	002b4400 	call	2b440 <__multadd>
   28030:	1027883a 	mov	r19,r2
   28034:	003fc206 	br	27f40 <_dtoa_r+0x948>
   28038:	2445c83a 	sub	r2,r4,r17
   2803c:	a088983a 	sll	r4,r20,r2
   28040:	003e4b06 	br	27970 <_dtoa_r+0x378>
   28044:	01bfffc4 	movi	r6,-1
   28048:	00800044 	movi	r2,1
   2804c:	d9800e15 	stw	r6,56(sp)
   28050:	d9800f15 	stw	r6,60(sp)
   28054:	d8800b15 	stw	r2,44(sp)
   28058:	d8c01617 	ldw	r3,88(sp)
   2805c:	008005c4 	movi	r2,23
   28060:	18001115 	stw	zero,68(r3)
   28064:	1580082e 	bgeu	r2,r22,28088 <_dtoa_r+0xa90>
   28068:	00c00104 	movi	r3,4
   2806c:	0009883a 	mov	r4,zero
   28070:	18c7883a 	add	r3,r3,r3
   28074:	18800504 	addi	r2,r3,20
   28078:	21000044 	addi	r4,r4,1
   2807c:	b0bffc2e 	bgeu	r22,r2,28070 <_dtoa_r+0xa78>
   28080:	d9801617 	ldw	r6,88(sp)
   28084:	31001115 	stw	r4,68(r6)
   28088:	dc000f17 	ldw	r16,60(sp)
   2808c:	003e4b06 	br	279bc <_dtoa_r+0x3c4>
   28090:	d9801717 	ldw	r6,92(sp)
   28094:	0023883a 	mov	r17,zero
   28098:	31bfff04 	addi	r6,r6,-4
   2809c:	d9801715 	stw	r6,92(sp)
   280a0:	003df806 	br	27884 <_dtoa_r+0x28c>
   280a4:	00800804 	movi	r2,32
   280a8:	10c9c83a 	sub	r4,r2,r3
   280ac:	00c00104 	movi	r3,4
   280b0:	19005a16 	blt	r3,r4,2821c <_dtoa_r+0xc24>
   280b4:	008000c4 	movi	r2,3
   280b8:	113f7e16 	blt	r2,r4,27eb4 <_dtoa_r+0x8bc>
   280bc:	20800704 	addi	r2,r4,28
   280c0:	003f7506 	br	27e98 <_dtoa_r+0x8a0>
   280c4:	d9801717 	ldw	r6,92(sp)
   280c8:	00800044 	movi	r2,1
   280cc:	1180a10e 	bge	r2,r6,28354 <_dtoa_r+0xd5c>
   280d0:	d9800f17 	ldw	r6,60(sp)
   280d4:	d8c01017 	ldw	r3,64(sp)
   280d8:	30bfffc4 	addi	r2,r6,-1
   280dc:	1881c616 	blt	r3,r2,287f8 <_dtoa_r+0x1200>
   280e0:	18a5c83a 	sub	r18,r3,r2
   280e4:	d8800f17 	ldw	r2,60(sp)
   280e8:	10026216 	blt	r2,zero,28a74 <_dtoa_r+0x147c>
   280ec:	dc001117 	ldw	r16,68(sp)
   280f0:	1007883a 	mov	r3,r2
   280f4:	d9800a17 	ldw	r6,40(sp)
   280f8:	d8801117 	ldw	r2,68(sp)
   280fc:	d9001617 	ldw	r4,88(sp)
   28100:	30cd883a 	add	r6,r6,r3
   28104:	10c5883a 	add	r2,r2,r3
   28108:	01400044 	movi	r5,1
   2810c:	d9800a15 	stw	r6,40(sp)
   28110:	d8801115 	stw	r2,68(sp)
   28114:	002b4040 	call	2b404 <__i2b>
   28118:	1027883a 	mov	r19,r2
   2811c:	003f2506 	br	27db4 <_dtoa_r+0x7bc>
   28120:	00c000f4 	movhi	r3,3
   28124:	18ffa504 	addi	r3,r3,-364
   28128:	003d6706 	br	276c8 <_dtoa_r+0xd0>
   2812c:	dd800517 	ldw	r22,20(sp)
   28130:	04000044 	movi	r16,1
   28134:	00000706 	br	28154 <_dtoa_r+0xb5c>
   28138:	d9400717 	ldw	r5,28(sp)
   2813c:	d9001617 	ldw	r4,88(sp)
   28140:	01800284 	movi	r6,10
   28144:	000f883a 	mov	r7,zero
   28148:	002b4400 	call	2b440 <__multadd>
   2814c:	d8800715 	stw	r2,28(sp)
   28150:	84000044 	addi	r16,r16,1
   28154:	d9000717 	ldw	r4,28(sp)
   28158:	900b883a 	mov	r5,r18
   2815c:	00273e00 	call	273e0 <quorem>
   28160:	15c00c04 	addi	r23,r2,48
   28164:	b5c00005 	stb	r23,0(r22)
   28168:	d8c00f17 	ldw	r3,60(sp)
   2816c:	b5800044 	addi	r22,r22,1
   28170:	80fff116 	blt	r16,r3,28138 <_dtoa_r+0xb40>
   28174:	d8000615 	stw	zero,24(sp)
   28178:	d9400717 	ldw	r5,28(sp)
   2817c:	d9001617 	ldw	r4,88(sp)
   28180:	01800044 	movi	r6,1
   28184:	002b0d00 	call	2b0d0 <__lshift>
   28188:	1009883a 	mov	r4,r2
   2818c:	900b883a 	mov	r5,r18
   28190:	d8800715 	stw	r2,28(sp)
   28194:	002a8e80 	call	2a8e8 <__mcmp>
   28198:	00803c0e 	bge	zero,r2,2828c <_dtoa_r+0xc94>
   2819c:	b009883a 	mov	r4,r22
   281a0:	213fffc4 	addi	r4,r4,-1
   281a4:	21400003 	ldbu	r5,0(r4)
   281a8:	00800e44 	movi	r2,57
   281ac:	28c03fcc 	andi	r3,r5,255
   281b0:	18c0201c 	xori	r3,r3,128
   281b4:	18ffe004 	addi	r3,r3,-128
   281b8:	1881981e 	bne	r3,r2,2881c <_dtoa_r+0x1224>
   281bc:	d9800517 	ldw	r6,20(sp)
   281c0:	21bff71e 	bne	r4,r6,281a0 <_dtoa_r+0xba8>
   281c4:	d8800d17 	ldw	r2,52(sp)
   281c8:	37000044 	addi	fp,r6,1
   281cc:	10800044 	addi	r2,r2,1
   281d0:	d8800d15 	stw	r2,52(sp)
   281d4:	00800c44 	movi	r2,49
   281d8:	30800005 	stb	r2,0(r6)
   281dc:	d9001617 	ldw	r4,88(sp)
   281e0:	900b883a 	mov	r5,r18
   281e4:	002a78c0 	call	2a78c <_Bfree>
   281e8:	983ecd26 	beq	r19,zero,27d20 <_dtoa_r+0x728>
   281ec:	d8c00617 	ldw	r3,24(sp)
   281f0:	18000426 	beq	r3,zero,28204 <_dtoa_r+0xc0c>
   281f4:	1cc00326 	beq	r3,r19,28204 <_dtoa_r+0xc0c>
   281f8:	d9001617 	ldw	r4,88(sp)
   281fc:	180b883a 	mov	r5,r3
   28200:	002a78c0 	call	2a78c <_Bfree>
   28204:	d9001617 	ldw	r4,88(sp)
   28208:	980b883a 	mov	r5,r19
   2820c:	002a78c0 	call	2a78c <_Bfree>
   28210:	003ec306 	br	27d20 <_dtoa_r+0x728>
   28214:	1805883a 	mov	r2,r3
   28218:	003eeb06 	br	27dc8 <_dtoa_r+0x7d0>
   2821c:	d9800a17 	ldw	r6,40(sp)
   28220:	d8c01117 	ldw	r3,68(sp)
   28224:	20bfff04 	addi	r2,r4,-4
   28228:	308d883a 	add	r6,r6,r2
   2822c:	1887883a 	add	r3,r3,r2
   28230:	80a1883a 	add	r16,r16,r2
   28234:	d9800a15 	stw	r6,40(sp)
   28238:	d8c01115 	stw	r3,68(sp)
   2823c:	003f1d06 	br	27eb4 <_dtoa_r+0x8bc>
   28240:	a03f0c1e 	bne	r20,zero,27e74 <_dtoa_r+0x87c>
   28244:	00800434 	movhi	r2,16
   28248:	10bfffc4 	addi	r2,r2,-1
   2824c:	a884703a 	and	r2,r21,r2
   28250:	103f081e 	bne	r2,zero,27e74 <_dtoa_r+0x87c>
   28254:	a89ffc2c 	andhi	r2,r21,32752
   28258:	103f0626 	beq	r2,zero,27e74 <_dtoa_r+0x87c>
   2825c:	d8c01117 	ldw	r3,68(sp)
   28260:	d9000a17 	ldw	r4,40(sp)
   28264:	18c00044 	addi	r3,r3,1
   28268:	21000044 	addi	r4,r4,1
   2826c:	d8c01115 	stw	r3,68(sp)
   28270:	d9000a15 	stw	r4,40(sp)
   28274:	003f0006 	br	27e78 <_dtoa_r+0x880>
   28278:	d9400717 	ldw	r5,28(sp)
   2827c:	d9001617 	ldw	r4,88(sp)
   28280:	002b5400 	call	2b540 <__pow5mult>
   28284:	d8800715 	stw	r2,28(sp)
   28288:	003eed06 	br	27e40 <_dtoa_r+0x848>
   2828c:	1000021e 	bne	r2,zero,28298 <_dtoa_r+0xca0>
   28290:	b880004c 	andi	r2,r23,1
   28294:	103fc11e 	bne	r2,zero,2819c <_dtoa_r+0xba4>
   28298:	b5bfffc4 	addi	r22,r22,-1
   2829c:	b0c00007 	ldb	r3,0(r22)
   282a0:	00800c04 	movi	r2,48
   282a4:	18bffc26 	beq	r3,r2,28298 <_dtoa_r+0xca0>
   282a8:	b7000044 	addi	fp,r22,1
   282ac:	003fcb06 	br	281dc <_dtoa_r+0xbe4>
   282b0:	d9800d17 	ldw	r6,52(sp)
   282b4:	018fc83a 	sub	r7,zero,r6
   282b8:	3801f726 	beq	r7,zero,28a98 <_dtoa_r+0x14a0>
   282bc:	398003cc 	andi	r6,r7,15
   282c0:	300c90fa 	slli	r6,r6,3
   282c4:	014000f4 	movhi	r5,3
   282c8:	297fc204 	addi	r5,r5,-248
   282cc:	d9001217 	ldw	r4,72(sp)
   282d0:	314d883a 	add	r6,r6,r5
   282d4:	30c00117 	ldw	r3,4(r6)
   282d8:	30800017 	ldw	r2,0(r6)
   282dc:	d9401317 	ldw	r5,76(sp)
   282e0:	3821d13a 	srai	r16,r7,4
   282e4:	100d883a 	mov	r6,r2
   282e8:	180f883a 	mov	r7,r3
   282ec:	0023d840 	call	23d84 <__muldf3>
   282f0:	1011883a 	mov	r8,r2
   282f4:	1813883a 	mov	r9,r3
   282f8:	1029883a 	mov	r20,r2
   282fc:	182b883a 	mov	r21,r3
   28300:	8001e526 	beq	r16,zero,28a98 <_dtoa_r+0x14a0>
   28304:	05800084 	movi	r22,2
   28308:	044000f4 	movhi	r17,3
   2830c:	8c7ff404 	addi	r17,r17,-48
   28310:	8080004c 	andi	r2,r16,1
   28314:	1005003a 	cmpeq	r2,r2,zero
   28318:	1000081e 	bne	r2,zero,2833c <_dtoa_r+0xd44>
   2831c:	89800017 	ldw	r6,0(r17)
   28320:	89c00117 	ldw	r7,4(r17)
   28324:	480b883a 	mov	r5,r9
   28328:	4009883a 	mov	r4,r8
   2832c:	0023d840 	call	23d84 <__muldf3>
   28330:	1011883a 	mov	r8,r2
   28334:	b5800044 	addi	r22,r22,1
   28338:	1813883a 	mov	r9,r3
   2833c:	8021d07a 	srai	r16,r16,1
   28340:	8c400204 	addi	r17,r17,8
   28344:	803ff21e 	bne	r16,zero,28310 <_dtoa_r+0xd18>
   28348:	4029883a 	mov	r20,r8
   2834c:	482b883a 	mov	r21,r9
   28350:	003dca06 	br	27a7c <_dtoa_r+0x484>
   28354:	d9000817 	ldw	r4,32(sp)
   28358:	2005003a 	cmpeq	r2,r4,zero
   2835c:	1001f61e 	bne	r2,zero,28b38 <_dtoa_r+0x1540>
   28360:	dc001117 	ldw	r16,68(sp)
   28364:	dc801017 	ldw	r18,64(sp)
   28368:	18c10cc4 	addi	r3,r3,1075
   2836c:	003f6106 	br	280f4 <_dtoa_r+0xafc>
   28370:	d8000b15 	stw	zero,44(sp)
   28374:	d9802617 	ldw	r6,152(sp)
   28378:	d8c00d17 	ldw	r3,52(sp)
   2837c:	30800044 	addi	r2,r6,1
   28380:	18ad883a 	add	r22,r3,r2
   28384:	b13fffc4 	addi	r4,r22,-1
   28388:	d9000e15 	stw	r4,56(sp)
   2838c:	0581f60e 	bge	zero,r22,28b68 <_dtoa_r+0x1570>
   28390:	dd800f15 	stw	r22,60(sp)
   28394:	003f3006 	br	28058 <_dtoa_r+0xa60>
   28398:	d8000b15 	stw	zero,44(sp)
   2839c:	d9002617 	ldw	r4,152(sp)
   283a0:	0101eb0e 	bge	zero,r4,28b50 <_dtoa_r+0x1558>
   283a4:	202d883a 	mov	r22,r4
   283a8:	d9000e15 	stw	r4,56(sp)
   283ac:	d9000f15 	stw	r4,60(sp)
   283b0:	003f2906 	br	28058 <_dtoa_r+0xa60>
   283b4:	01800044 	movi	r6,1
   283b8:	d9800b15 	stw	r6,44(sp)
   283bc:	003ff706 	br	2839c <_dtoa_r+0xda4>
   283c0:	01000044 	movi	r4,1
   283c4:	d9000b15 	stw	r4,44(sp)
   283c8:	003fea06 	br	28374 <_dtoa_r+0xd7c>
   283cc:	04000c0e 	bge	zero,r16,28400 <_dtoa_r+0xe08>
   283d0:	d9400717 	ldw	r5,28(sp)
   283d4:	d9001617 	ldw	r4,88(sp)
   283d8:	01800044 	movi	r6,1
   283dc:	002b0d00 	call	2b0d0 <__lshift>
   283e0:	1009883a 	mov	r4,r2
   283e4:	900b883a 	mov	r5,r18
   283e8:	d8800715 	stw	r2,28(sp)
   283ec:	002a8e80 	call	2a8e8 <__mcmp>
   283f0:	0081e00e 	bge	zero,r2,28b74 <_dtoa_r+0x157c>
   283f4:	bdc00044 	addi	r23,r23,1
   283f8:	00800e84 	movi	r2,58
   283fc:	b881a226 	beq	r23,r2,28a88 <_dtoa_r+0x1490>
   28400:	b7000044 	addi	fp,r22,1
   28404:	b5c00005 	stb	r23,0(r22)
   28408:	003f7406 	br	281dc <_dtoa_r+0xbe4>
   2840c:	00800e44 	movi	r2,57
   28410:	b8819d26 	beq	r23,r2,28a88 <_dtoa_r+0x1490>
   28414:	053ffa0e 	bge	zero,r20,28400 <_dtoa_r+0xe08>
   28418:	8dc00c44 	addi	r23,r17,49
   2841c:	003ff806 	br	28400 <_dtoa_r+0xe08>
   28420:	d9001617 	ldw	r4,88(sp)
   28424:	a80b883a 	mov	r5,r21
   28428:	04000044 	movi	r16,1
   2842c:	002a78c0 	call	2a78c <_Bfree>
   28430:	003edf06 	br	27fb0 <_dtoa_r+0x9b8>
   28434:	d9001617 	ldw	r4,88(sp)
   28438:	980b883a 	mov	r5,r19
   2843c:	01800284 	movi	r6,10
   28440:	000f883a 	mov	r7,zero
   28444:	002b4400 	call	2b440 <__multadd>
   28448:	1027883a 	mov	r19,r2
   2844c:	d8800615 	stw	r2,24(sp)
   28450:	003ebb06 	br	27f40 <_dtoa_r+0x948>
   28454:	d9801117 	ldw	r6,68(sp)
   28458:	d8800d17 	ldw	r2,52(sp)
   2845c:	d8000915 	stw	zero,36(sp)
   28460:	308dc83a 	sub	r6,r6,r2
   28464:	0087c83a 	sub	r3,zero,r2
   28468:	d9801115 	stw	r6,68(sp)
   2846c:	d8c01015 	stw	r3,64(sp)
   28470:	003cfe06 	br	2786c <_dtoa_r+0x274>
   28474:	018dc83a 	sub	r6,zero,r6
   28478:	d9801115 	stw	r6,68(sp)
   2847c:	d8000a15 	stw	zero,40(sp)
   28480:	003cf306 	br	27850 <_dtoa_r+0x258>
   28484:	d9000d17 	ldw	r4,52(sp)
   28488:	00246d00 	call	246d0 <__floatsidf>
   2848c:	880b883a 	mov	r5,r17
   28490:	8009883a 	mov	r4,r16
   28494:	180f883a 	mov	r7,r3
   28498:	100d883a 	mov	r6,r2
   2849c:	00244280 	call	24428 <__nedf2>
   284a0:	103ce126 	beq	r2,zero,27828 <_dtoa_r+0x230>
   284a4:	d9800d17 	ldw	r6,52(sp)
   284a8:	31bfffc4 	addi	r6,r6,-1
   284ac:	d9800d15 	stw	r6,52(sp)
   284b0:	003cdd06 	br	27828 <_dtoa_r+0x230>
   284b4:	d9000717 	ldw	r4,28(sp)
   284b8:	900b883a 	mov	r5,r18
   284bc:	002a8e80 	call	2a8e8 <__mcmp>
   284c0:	103e8d0e 	bge	r2,zero,27ef8 <_dtoa_r+0x900>
   284c4:	d9400717 	ldw	r5,28(sp)
   284c8:	d9001617 	ldw	r4,88(sp)
   284cc:	01800284 	movi	r6,10
   284d0:	000f883a 	mov	r7,zero
   284d4:	002b4400 	call	2b440 <__multadd>
   284d8:	d9800d17 	ldw	r6,52(sp)
   284dc:	d8800715 	stw	r2,28(sp)
   284e0:	31bfffc4 	addi	r6,r6,-1
   284e4:	d9800d15 	stw	r6,52(sp)
   284e8:	b001a71e 	bne	r22,zero,28b88 <_dtoa_r+0x1590>
   284ec:	d8800e17 	ldw	r2,56(sp)
   284f0:	d8800f15 	stw	r2,60(sp)
   284f4:	003e8006 	br	27ef8 <_dtoa_r+0x900>
   284f8:	90800417 	ldw	r2,16(r18)
   284fc:	1085883a 	add	r2,r2,r2
   28500:	1085883a 	add	r2,r2,r2
   28504:	1485883a 	add	r2,r2,r18
   28508:	11000417 	ldw	r4,16(r2)
   2850c:	002a7b40 	call	2a7b4 <__hi0bits>
   28510:	00c00804 	movi	r3,32
   28514:	1887c83a 	sub	r3,r3,r2
   28518:	003e5a06 	br	27e84 <_dtoa_r+0x88c>
   2851c:	d9400717 	ldw	r5,28(sp)
   28520:	d9801017 	ldw	r6,64(sp)
   28524:	d9001617 	ldw	r4,88(sp)
   28528:	002b5400 	call	2b540 <__pow5mult>
   2852c:	d8800715 	stw	r2,28(sp)
   28530:	003e4306 	br	27e40 <_dtoa_r+0x848>
   28534:	d9800f17 	ldw	r6,60(sp)
   28538:	d8800d17 	ldw	r2,52(sp)
   2853c:	d9800315 	stw	r6,12(sp)
   28540:	d8800415 	stw	r2,16(sp)
   28544:	d8c00b17 	ldw	r3,44(sp)
   28548:	1805003a 	cmpeq	r2,r3,zero
   2854c:	1000e21e 	bne	r2,zero,288d8 <_dtoa_r+0x12e0>
   28550:	d9000317 	ldw	r4,12(sp)
   28554:	0005883a 	mov	r2,zero
   28558:	00cff834 	movhi	r3,16352
   2855c:	200c90fa 	slli	r6,r4,3
   28560:	010000f4 	movhi	r4,3
   28564:	213fc204 	addi	r4,r4,-248
   28568:	180b883a 	mov	r5,r3
   2856c:	310d883a 	add	r6,r6,r4
   28570:	327fff17 	ldw	r9,-4(r6)
   28574:	323ffe17 	ldw	r8,-8(r6)
   28578:	1009883a 	mov	r4,r2
   2857c:	480f883a 	mov	r7,r9
   28580:	400d883a 	mov	r6,r8
   28584:	00241480 	call	24148 <__divdf3>
   28588:	180b883a 	mov	r5,r3
   2858c:	b00d883a 	mov	r6,r22
   28590:	b80f883a 	mov	r7,r23
   28594:	1009883a 	mov	r4,r2
   28598:	0023c900 	call	23c90 <__subdf3>
   2859c:	a80b883a 	mov	r5,r21
   285a0:	a009883a 	mov	r4,r20
   285a4:	d8c01915 	stw	r3,100(sp)
   285a8:	d8801815 	stw	r2,96(sp)
   285ac:	00247c80 	call	247c8 <__fixdfsi>
   285b0:	1009883a 	mov	r4,r2
   285b4:	1027883a 	mov	r19,r2
   285b8:	00246d00 	call	246d0 <__floatsidf>
   285bc:	a80b883a 	mov	r5,r21
   285c0:	a009883a 	mov	r4,r20
   285c4:	180f883a 	mov	r7,r3
   285c8:	100d883a 	mov	r6,r2
   285cc:	0023c900 	call	23c90 <__subdf3>
   285d0:	d9801817 	ldw	r6,96(sp)
   285d4:	1823883a 	mov	r17,r3
   285d8:	d8801415 	stw	r2,80(sp)
   285dc:	302d883a 	mov	r22,r6
   285e0:	d9800517 	ldw	r6,20(sp)
   285e4:	9cc00c04 	addi	r19,r19,48
   285e8:	dc401515 	stw	r17,84(sp)
   285ec:	d8c01917 	ldw	r3,100(sp)
   285f0:	34c00005 	stb	r19,0(r6)
   285f4:	d8800517 	ldw	r2,20(sp)
   285f8:	d9401917 	ldw	r5,100(sp)
   285fc:	d9801417 	ldw	r6,80(sp)
   28600:	b009883a 	mov	r4,r22
   28604:	880f883a 	mov	r7,r17
   28608:	182f883a 	mov	r23,r3
   2860c:	17000044 	addi	fp,r2,1
   28610:	00244b00 	call	244b0 <__gtdf2>
   28614:	00804e16 	blt	zero,r2,28750 <_dtoa_r+0x1158>
   28618:	d9801417 	ldw	r6,80(sp)
   2861c:	0005883a 	mov	r2,zero
   28620:	00cffc34 	movhi	r3,16368
   28624:	180b883a 	mov	r5,r3
   28628:	880f883a 	mov	r7,r17
   2862c:	1009883a 	mov	r4,r2
   28630:	0023c900 	call	23c90 <__subdf3>
   28634:	d9401917 	ldw	r5,100(sp)
   28638:	180f883a 	mov	r7,r3
   2863c:	b009883a 	mov	r4,r22
   28640:	100d883a 	mov	r6,r2
   28644:	00244b00 	call	244b0 <__gtdf2>
   28648:	00bda216 	blt	zero,r2,27cd4 <_dtoa_r+0x6dc>
   2864c:	d8c00317 	ldw	r3,12(sp)
   28650:	00800044 	movi	r2,1
   28654:	10c01216 	blt	r2,r3,286a0 <_dtoa_r+0x10a8>
   28658:	003d4506 	br	27b70 <_dtoa_r+0x578>
   2865c:	d9801417 	ldw	r6,80(sp)
   28660:	0005883a 	mov	r2,zero
   28664:	00cffc34 	movhi	r3,16368
   28668:	180b883a 	mov	r5,r3
   2866c:	880f883a 	mov	r7,r17
   28670:	1009883a 	mov	r4,r2
   28674:	0023c900 	call	23c90 <__subdf3>
   28678:	d9c01b17 	ldw	r7,108(sp)
   2867c:	180b883a 	mov	r5,r3
   28680:	1009883a 	mov	r4,r2
   28684:	b00d883a 	mov	r6,r22
   28688:	00245c00 	call	245c0 <__ltdf2>
   2868c:	103d9116 	blt	r2,zero,27cd4 <_dtoa_r+0x6dc>
   28690:	d9800517 	ldw	r6,20(sp)
   28694:	d9000317 	ldw	r4,12(sp)
   28698:	3105883a 	add	r2,r6,r4
   2869c:	e0bd3426 	beq	fp,r2,27b70 <_dtoa_r+0x578>
   286a0:	04500934 	movhi	r17,16420
   286a4:	0021883a 	mov	r16,zero
   286a8:	b80b883a 	mov	r5,r23
   286ac:	b009883a 	mov	r4,r22
   286b0:	800d883a 	mov	r6,r16
   286b4:	880f883a 	mov	r7,r17
   286b8:	0023d840 	call	23d84 <__muldf3>
   286bc:	d9401517 	ldw	r5,84(sp)
   286c0:	d9001417 	ldw	r4,80(sp)
   286c4:	880f883a 	mov	r7,r17
   286c8:	000d883a 	mov	r6,zero
   286cc:	d8801a15 	stw	r2,104(sp)
   286d0:	d8c01b15 	stw	r3,108(sp)
   286d4:	0023d840 	call	23d84 <__muldf3>
   286d8:	180b883a 	mov	r5,r3
   286dc:	1009883a 	mov	r4,r2
   286e0:	1823883a 	mov	r17,r3
   286e4:	1021883a 	mov	r16,r2
   286e8:	00247c80 	call	247c8 <__fixdfsi>
   286ec:	1009883a 	mov	r4,r2
   286f0:	102b883a 	mov	r21,r2
   286f4:	00246d00 	call	246d0 <__floatsidf>
   286f8:	880b883a 	mov	r5,r17
   286fc:	8009883a 	mov	r4,r16
   28700:	180f883a 	mov	r7,r3
   28704:	100d883a 	mov	r6,r2
   28708:	0023c900 	call	23c90 <__subdf3>
   2870c:	1021883a 	mov	r16,r2
   28710:	d9001b17 	ldw	r4,108(sp)
   28714:	1823883a 	mov	r17,r3
   28718:	dc001415 	stw	r16,80(sp)
   2871c:	ad400c04 	addi	r21,r21,48
   28720:	dc401515 	stw	r17,84(sp)
   28724:	d8801a17 	ldw	r2,104(sp)
   28728:	e5400005 	stb	r21,0(fp)
   2872c:	202f883a 	mov	r23,r4
   28730:	d9c01b17 	ldw	r7,108(sp)
   28734:	d9001417 	ldw	r4,80(sp)
   28738:	880b883a 	mov	r5,r17
   2873c:	100d883a 	mov	r6,r2
   28740:	102d883a 	mov	r22,r2
   28744:	e7000044 	addi	fp,fp,1
   28748:	00245c00 	call	245c0 <__ltdf2>
   2874c:	103fc30e 	bge	r2,zero,2865c <_dtoa_r+0x1064>
   28750:	d9000417 	ldw	r4,16(sp)
   28754:	d9000d15 	stw	r4,52(sp)
   28758:	003d7106 	br	27d20 <_dtoa_r+0x728>
   2875c:	d9801717 	ldw	r6,92(sp)
   28760:	00800084 	movi	r2,2
   28764:	11bde60e 	bge	r2,r6,27f00 <_dtoa_r+0x908>
   28768:	203cfb1e 	bne	r4,zero,27b58 <_dtoa_r+0x560>
   2876c:	d9001617 	ldw	r4,88(sp)
   28770:	900b883a 	mov	r5,r18
   28774:	01800144 	movi	r6,5
   28778:	000f883a 	mov	r7,zero
   2877c:	002b4400 	call	2b440 <__multadd>
   28780:	d9000717 	ldw	r4,28(sp)
   28784:	100b883a 	mov	r5,r2
   28788:	1025883a 	mov	r18,r2
   2878c:	002a8e80 	call	2a8e8 <__mcmp>
   28790:	00bcf10e 	bge	zero,r2,27b58 <_dtoa_r+0x560>
   28794:	d8c00d17 	ldw	r3,52(sp)
   28798:	d9000517 	ldw	r4,20(sp)
   2879c:	d8000615 	stw	zero,24(sp)
   287a0:	18c00044 	addi	r3,r3,1
   287a4:	d8c00d15 	stw	r3,52(sp)
   287a8:	00800c44 	movi	r2,49
   287ac:	27000044 	addi	fp,r4,1
   287b0:	20800005 	stb	r2,0(r4)
   287b4:	003e8906 	br	281dc <_dtoa_r+0xbe4>
   287b8:	d8c00517 	ldw	r3,20(sp)
   287bc:	003bc206 	br	276c8 <_dtoa_r+0xd0>
   287c0:	018000f4 	movhi	r6,3
   287c4:	31bff404 	addi	r6,r6,-48
   287c8:	30c00917 	ldw	r3,36(r6)
   287cc:	30800817 	ldw	r2,32(r6)
   287d0:	d9001217 	ldw	r4,72(sp)
   287d4:	d9401317 	ldw	r5,76(sp)
   287d8:	180f883a 	mov	r7,r3
   287dc:	100d883a 	mov	r6,r2
   287e0:	00241480 	call	24148 <__divdf3>
   287e4:	948003cc 	andi	r18,r18,15
   287e8:	058000c4 	movi	r22,3
   287ec:	1029883a 	mov	r20,r2
   287f0:	182b883a 	mov	r21,r3
   287f4:	003c8906 	br	27a1c <_dtoa_r+0x424>
   287f8:	d9001017 	ldw	r4,64(sp)
   287fc:	d9800917 	ldw	r6,36(sp)
   28800:	0025883a 	mov	r18,zero
   28804:	1105c83a 	sub	r2,r2,r4
   28808:	2089883a 	add	r4,r4,r2
   2880c:	308d883a 	add	r6,r6,r2
   28810:	d9001015 	stw	r4,64(sp)
   28814:	d9800915 	stw	r6,36(sp)
   28818:	003e3206 	br	280e4 <_dtoa_r+0xaec>
   2881c:	28800044 	addi	r2,r5,1
   28820:	27000044 	addi	fp,r4,1
   28824:	20800005 	stb	r2,0(r4)
   28828:	003e6c06 	br	281dc <_dtoa_r+0xbe4>
   2882c:	d8800f17 	ldw	r2,60(sp)
   28830:	00bce016 	blt	zero,r2,27bb4 <_dtoa_r+0x5bc>
   28834:	d9800f17 	ldw	r6,60(sp)
   28838:	303cc51e 	bne	r6,zero,27b50 <_dtoa_r+0x558>
   2883c:	0005883a 	mov	r2,zero
   28840:	00d00534 	movhi	r3,16404
   28844:	980b883a 	mov	r5,r19
   28848:	180f883a 	mov	r7,r3
   2884c:	9009883a 	mov	r4,r18
   28850:	100d883a 	mov	r6,r2
   28854:	0023d840 	call	23d84 <__muldf3>
   28858:	180b883a 	mov	r5,r3
   2885c:	a80f883a 	mov	r7,r21
   28860:	1009883a 	mov	r4,r2
   28864:	a00d883a 	mov	r6,r20
   28868:	00245380 	call	24538 <__gedf2>
   2886c:	103cb80e 	bge	r2,zero,27b50 <_dtoa_r+0x558>
   28870:	0027883a 	mov	r19,zero
   28874:	0025883a 	mov	r18,zero
   28878:	003fc606 	br	28794 <_dtoa_r+0x119c>
   2887c:	99400117 	ldw	r5,4(r19)
   28880:	d9001617 	ldw	r4,88(sp)
   28884:	002ad0c0 	call	2ad0c <_Balloc>
   28888:	99800417 	ldw	r6,16(r19)
   2888c:	11000304 	addi	r4,r2,12
   28890:	99400304 	addi	r5,r19,12
   28894:	318d883a 	add	r6,r6,r6
   28898:	318d883a 	add	r6,r6,r6
   2889c:	31800204 	addi	r6,r6,8
   288a0:	1023883a 	mov	r17,r2
   288a4:	002a5740 	call	2a574 <memcpy>
   288a8:	d9001617 	ldw	r4,88(sp)
   288ac:	880b883a 	mov	r5,r17
   288b0:	01800044 	movi	r6,1
   288b4:	002b0d00 	call	2b0d0 <__lshift>
   288b8:	100b883a 	mov	r5,r2
   288bc:	003d9c06 	br	27f30 <_dtoa_r+0x938>
   288c0:	00800e44 	movi	r2,57
   288c4:	b8807026 	beq	r23,r2,28a88 <_dtoa_r+0x1490>
   288c8:	b8800044 	addi	r2,r23,1
   288cc:	b7000044 	addi	fp,r22,1
   288d0:	b0800005 	stb	r2,0(r22)
   288d4:	003e4106 	br	281dc <_dtoa_r+0xbe4>
   288d8:	d8800317 	ldw	r2,12(sp)
   288dc:	018000f4 	movhi	r6,3
   288e0:	31bfc204 	addi	r6,r6,-248
   288e4:	b009883a 	mov	r4,r22
   288e8:	100e90fa 	slli	r7,r2,3
   288ec:	b80b883a 	mov	r5,r23
   288f0:	398f883a 	add	r7,r7,r6
   288f4:	38bffe17 	ldw	r2,-8(r7)
   288f8:	d9800517 	ldw	r6,20(sp)
   288fc:	38ffff17 	ldw	r3,-4(r7)
   28900:	37000044 	addi	fp,r6,1
   28904:	180f883a 	mov	r7,r3
   28908:	100d883a 	mov	r6,r2
   2890c:	0023d840 	call	23d84 <__muldf3>
   28910:	a80b883a 	mov	r5,r21
   28914:	a009883a 	mov	r4,r20
   28918:	182f883a 	mov	r23,r3
   2891c:	102d883a 	mov	r22,r2
   28920:	00247c80 	call	247c8 <__fixdfsi>
   28924:	1009883a 	mov	r4,r2
   28928:	1027883a 	mov	r19,r2
   2892c:	00246d00 	call	246d0 <__floatsidf>
   28930:	a80b883a 	mov	r5,r21
   28934:	a009883a 	mov	r4,r20
   28938:	180f883a 	mov	r7,r3
   2893c:	100d883a 	mov	r6,r2
   28940:	0023c900 	call	23c90 <__subdf3>
   28944:	180b883a 	mov	r5,r3
   28948:	d8c00517 	ldw	r3,20(sp)
   2894c:	9cc00c04 	addi	r19,r19,48
   28950:	1009883a 	mov	r4,r2
   28954:	1cc00005 	stb	r19,0(r3)
   28958:	2021883a 	mov	r16,r4
   2895c:	d9000317 	ldw	r4,12(sp)
   28960:	00800044 	movi	r2,1
   28964:	2823883a 	mov	r17,r5
   28968:	20802226 	beq	r4,r2,289f4 <_dtoa_r+0x13fc>
   2896c:	1029883a 	mov	r20,r2
   28970:	0005883a 	mov	r2,zero
   28974:	00d00934 	movhi	r3,16420
   28978:	180f883a 	mov	r7,r3
   2897c:	100d883a 	mov	r6,r2
   28980:	880b883a 	mov	r5,r17
   28984:	8009883a 	mov	r4,r16
   28988:	0023d840 	call	23d84 <__muldf3>
   2898c:	180b883a 	mov	r5,r3
   28990:	1009883a 	mov	r4,r2
   28994:	1823883a 	mov	r17,r3
   28998:	1021883a 	mov	r16,r2
   2899c:	00247c80 	call	247c8 <__fixdfsi>
   289a0:	1009883a 	mov	r4,r2
   289a4:	102b883a 	mov	r21,r2
   289a8:	00246d00 	call	246d0 <__floatsidf>
   289ac:	880b883a 	mov	r5,r17
   289b0:	8009883a 	mov	r4,r16
   289b4:	180f883a 	mov	r7,r3
   289b8:	100d883a 	mov	r6,r2
   289bc:	0023c900 	call	23c90 <__subdf3>
   289c0:	180b883a 	mov	r5,r3
   289c4:	d8c00517 	ldw	r3,20(sp)
   289c8:	1009883a 	mov	r4,r2
   289cc:	ad400c04 	addi	r21,r21,48
   289d0:	1d05883a 	add	r2,r3,r20
   289d4:	15400005 	stb	r21,0(r2)
   289d8:	2021883a 	mov	r16,r4
   289dc:	d9000317 	ldw	r4,12(sp)
   289e0:	a5000044 	addi	r20,r20,1
   289e4:	2823883a 	mov	r17,r5
   289e8:	a13fe11e 	bne	r20,r4,28970 <_dtoa_r+0x1378>
   289ec:	e505883a 	add	r2,fp,r20
   289f0:	173fffc4 	addi	fp,r2,-1
   289f4:	0025883a 	mov	r18,zero
   289f8:	04cff834 	movhi	r19,16352
   289fc:	b009883a 	mov	r4,r22
   28a00:	b80b883a 	mov	r5,r23
   28a04:	900d883a 	mov	r6,r18
   28a08:	980f883a 	mov	r7,r19
   28a0c:	0023d100 	call	23d10 <__adddf3>
   28a10:	180b883a 	mov	r5,r3
   28a14:	1009883a 	mov	r4,r2
   28a18:	800d883a 	mov	r6,r16
   28a1c:	880f883a 	mov	r7,r17
   28a20:	00245c00 	call	245c0 <__ltdf2>
   28a24:	103cab16 	blt	r2,zero,27cd4 <_dtoa_r+0x6dc>
   28a28:	0009883a 	mov	r4,zero
   28a2c:	980b883a 	mov	r5,r19
   28a30:	b80f883a 	mov	r7,r23
   28a34:	b00d883a 	mov	r6,r22
   28a38:	0023c900 	call	23c90 <__subdf3>
   28a3c:	180b883a 	mov	r5,r3
   28a40:	880f883a 	mov	r7,r17
   28a44:	1009883a 	mov	r4,r2
   28a48:	800d883a 	mov	r6,r16
   28a4c:	00244b00 	call	244b0 <__gtdf2>
   28a50:	00bc470e 	bge	zero,r2,27b70 <_dtoa_r+0x578>
   28a54:	00c00c04 	movi	r3,48
   28a58:	e73fffc4 	addi	fp,fp,-1
   28a5c:	e0800007 	ldb	r2,0(fp)
   28a60:	10fffd26 	beq	r2,r3,28a58 <_dtoa_r+0x1460>
   28a64:	d9800417 	ldw	r6,16(sp)
   28a68:	e7000044 	addi	fp,fp,1
   28a6c:	d9800d15 	stw	r6,52(sp)
   28a70:	003cab06 	br	27d20 <_dtoa_r+0x728>
   28a74:	d8c00f17 	ldw	r3,60(sp)
   28a78:	d9001117 	ldw	r4,68(sp)
   28a7c:	20e1c83a 	sub	r16,r4,r3
   28a80:	0007883a 	mov	r3,zero
   28a84:	003d9b06 	br	280f4 <_dtoa_r+0xafc>
   28a88:	00800e44 	movi	r2,57
   28a8c:	b0800005 	stb	r2,0(r22)
   28a90:	b5800044 	addi	r22,r22,1
   28a94:	003dc106 	br	2819c <_dtoa_r+0xba4>
   28a98:	05800084 	movi	r22,2
   28a9c:	003bf706 	br	27a7c <_dtoa_r+0x484>
   28aa0:	d9000f17 	ldw	r4,60(sp)
   28aa4:	013c000e 	bge	zero,r4,27aa8 <_dtoa_r+0x4b0>
   28aa8:	d9800e17 	ldw	r6,56(sp)
   28aac:	01bc300e 	bge	zero,r6,27b70 <_dtoa_r+0x578>
   28ab0:	0005883a 	mov	r2,zero
   28ab4:	00d00934 	movhi	r3,16420
   28ab8:	a80b883a 	mov	r5,r21
   28abc:	180f883a 	mov	r7,r3
   28ac0:	a009883a 	mov	r4,r20
   28ac4:	100d883a 	mov	r6,r2
   28ac8:	0023d840 	call	23d84 <__muldf3>
   28acc:	b1000044 	addi	r4,r22,1
   28ad0:	1021883a 	mov	r16,r2
   28ad4:	1823883a 	mov	r17,r3
   28ad8:	00246d00 	call	246d0 <__floatsidf>
   28adc:	880b883a 	mov	r5,r17
   28ae0:	8009883a 	mov	r4,r16
   28ae4:	180f883a 	mov	r7,r3
   28ae8:	100d883a 	mov	r6,r2
   28aec:	0023d840 	call	23d84 <__muldf3>
   28af0:	0011883a 	mov	r8,zero
   28af4:	02500734 	movhi	r9,16412
   28af8:	180b883a 	mov	r5,r3
   28afc:	480f883a 	mov	r7,r9
   28b00:	1009883a 	mov	r4,r2
   28b04:	400d883a 	mov	r6,r8
   28b08:	0023d100 	call	23d10 <__adddf3>
   28b0c:	102d883a 	mov	r22,r2
   28b10:	00bf3034 	movhi	r2,64704
   28b14:	10ef883a 	add	r23,r2,r3
   28b18:	d8800d17 	ldw	r2,52(sp)
   28b1c:	d8c00e17 	ldw	r3,56(sp)
   28b20:	8029883a 	mov	r20,r16
   28b24:	10bfffc4 	addi	r2,r2,-1
   28b28:	882b883a 	mov	r21,r17
   28b2c:	d8800415 	stw	r2,16(sp)
   28b30:	d8c00315 	stw	r3,12(sp)
   28b34:	003e8306 	br	28544 <_dtoa_r+0xf4c>
   28b38:	d8800117 	ldw	r2,4(sp)
   28b3c:	dc001117 	ldw	r16,68(sp)
   28b40:	dc801017 	ldw	r18,64(sp)
   28b44:	00c00d84 	movi	r3,54
   28b48:	1887c83a 	sub	r3,r3,r2
   28b4c:	003d6906 	br	280f4 <_dtoa_r+0xafc>
   28b50:	01800044 	movi	r6,1
   28b54:	3021883a 	mov	r16,r6
   28b58:	d9800f15 	stw	r6,60(sp)
   28b5c:	d9802615 	stw	r6,152(sp)
   28b60:	d9800e15 	stw	r6,56(sp)
   28b64:	003b9306 	br	279b4 <_dtoa_r+0x3bc>
   28b68:	b021883a 	mov	r16,r22
   28b6c:	dd800f15 	stw	r22,60(sp)
   28b70:	003b9006 	br	279b4 <_dtoa_r+0x3bc>
   28b74:	103e221e 	bne	r2,zero,28400 <_dtoa_r+0xe08>
   28b78:	b880004c 	andi	r2,r23,1
   28b7c:	1005003a 	cmpeq	r2,r2,zero
   28b80:	103e1f1e 	bne	r2,zero,28400 <_dtoa_r+0xe08>
   28b84:	003e1b06 	br	283f4 <_dtoa_r+0xdfc>
   28b88:	d9001617 	ldw	r4,88(sp)
   28b8c:	980b883a 	mov	r5,r19
   28b90:	01800284 	movi	r6,10
   28b94:	000f883a 	mov	r7,zero
   28b98:	002b4400 	call	2b440 <__multadd>
   28b9c:	d8c00e17 	ldw	r3,56(sp)
   28ba0:	1027883a 	mov	r19,r2
   28ba4:	d8c00f15 	stw	r3,60(sp)
   28ba8:	003cd306 	br	27ef8 <_dtoa_r+0x900>

00028bac <_fflush_r>:
   28bac:	defffb04 	addi	sp,sp,-20
   28bb0:	dcc00315 	stw	r19,12(sp)
   28bb4:	dc800215 	stw	r18,8(sp)
   28bb8:	dfc00415 	stw	ra,16(sp)
   28bbc:	dc400115 	stw	r17,4(sp)
   28bc0:	dc000015 	stw	r16,0(sp)
   28bc4:	2027883a 	mov	r19,r4
   28bc8:	2825883a 	mov	r18,r5
   28bcc:	20000226 	beq	r4,zero,28bd8 <_fflush_r+0x2c>
   28bd0:	20800e17 	ldw	r2,56(r4)
   28bd4:	10005626 	beq	r2,zero,28d30 <_fflush_r+0x184>
   28bd8:	9100030b 	ldhu	r4,12(r18)
   28bdc:	20ffffcc 	andi	r3,r4,65535
   28be0:	18e0001c 	xori	r3,r3,32768
   28be4:	18e00004 	addi	r3,r3,-32768
   28be8:	1880020c 	andi	r2,r3,8
   28bec:	1000261e 	bne	r2,zero,28c88 <_fflush_r+0xdc>
   28bf0:	90c00117 	ldw	r3,4(r18)
   28bf4:	20820014 	ori	r2,r4,2048
   28bf8:	9080030d 	sth	r2,12(r18)
   28bfc:	1009883a 	mov	r4,r2
   28c00:	00c0400e 	bge	zero,r3,28d04 <_fflush_r+0x158>
   28c04:	92000a17 	ldw	r8,40(r18)
   28c08:	40004026 	beq	r8,zero,28d0c <_fflush_r+0x160>
   28c0c:	2084000c 	andi	r2,r4,4096
   28c10:	10005326 	beq	r2,zero,28d60 <_fflush_r+0x1b4>
   28c14:	94001417 	ldw	r16,80(r18)
   28c18:	9080030b 	ldhu	r2,12(r18)
   28c1c:	1080010c 	andi	r2,r2,4
   28c20:	1000481e 	bne	r2,zero,28d44 <_fflush_r+0x198>
   28c24:	91400717 	ldw	r5,28(r18)
   28c28:	9809883a 	mov	r4,r19
   28c2c:	800d883a 	mov	r6,r16
   28c30:	000f883a 	mov	r7,zero
   28c34:	403ee83a 	callr	r8
   28c38:	8080261e 	bne	r16,r2,28cd4 <_fflush_r+0x128>
   28c3c:	9080030b 	ldhu	r2,12(r18)
   28c40:	91000417 	ldw	r4,16(r18)
   28c44:	90000115 	stw	zero,4(r18)
   28c48:	10bdffcc 	andi	r2,r2,63487
   28c4c:	10ffffcc 	andi	r3,r2,65535
   28c50:	18c4000c 	andi	r3,r3,4096
   28c54:	9080030d 	sth	r2,12(r18)
   28c58:	91000015 	stw	r4,0(r18)
   28c5c:	18002b26 	beq	r3,zero,28d0c <_fflush_r+0x160>
   28c60:	0007883a 	mov	r3,zero
   28c64:	1805883a 	mov	r2,r3
   28c68:	94001415 	stw	r16,80(r18)
   28c6c:	dfc00417 	ldw	ra,16(sp)
   28c70:	dcc00317 	ldw	r19,12(sp)
   28c74:	dc800217 	ldw	r18,8(sp)
   28c78:	dc400117 	ldw	r17,4(sp)
   28c7c:	dc000017 	ldw	r16,0(sp)
   28c80:	dec00504 	addi	sp,sp,20
   28c84:	f800283a 	ret
   28c88:	94400417 	ldw	r17,16(r18)
   28c8c:	88001f26 	beq	r17,zero,28d0c <_fflush_r+0x160>
   28c90:	90800017 	ldw	r2,0(r18)
   28c94:	18c000cc 	andi	r3,r3,3
   28c98:	94400015 	stw	r17,0(r18)
   28c9c:	1461c83a 	sub	r16,r2,r17
   28ca0:	18002526 	beq	r3,zero,28d38 <_fflush_r+0x18c>
   28ca4:	0005883a 	mov	r2,zero
   28ca8:	90800215 	stw	r2,8(r18)
   28cac:	0400170e 	bge	zero,r16,28d0c <_fflush_r+0x160>
   28cb0:	90c00917 	ldw	r3,36(r18)
   28cb4:	91400717 	ldw	r5,28(r18)
   28cb8:	880d883a 	mov	r6,r17
   28cbc:	800f883a 	mov	r7,r16
   28cc0:	9809883a 	mov	r4,r19
   28cc4:	183ee83a 	callr	r3
   28cc8:	88a3883a 	add	r17,r17,r2
   28ccc:	80a1c83a 	sub	r16,r16,r2
   28cd0:	00bff616 	blt	zero,r2,28cac <_fflush_r+0x100>
   28cd4:	9080030b 	ldhu	r2,12(r18)
   28cd8:	00ffffc4 	movi	r3,-1
   28cdc:	10801014 	ori	r2,r2,64
   28ce0:	9080030d 	sth	r2,12(r18)
   28ce4:	1805883a 	mov	r2,r3
   28ce8:	dfc00417 	ldw	ra,16(sp)
   28cec:	dcc00317 	ldw	r19,12(sp)
   28cf0:	dc800217 	ldw	r18,8(sp)
   28cf4:	dc400117 	ldw	r17,4(sp)
   28cf8:	dc000017 	ldw	r16,0(sp)
   28cfc:	dec00504 	addi	sp,sp,20
   28d00:	f800283a 	ret
   28d04:	90800f17 	ldw	r2,60(r18)
   28d08:	00bfbe16 	blt	zero,r2,28c04 <_fflush_r+0x58>
   28d0c:	0007883a 	mov	r3,zero
   28d10:	1805883a 	mov	r2,r3
   28d14:	dfc00417 	ldw	ra,16(sp)
   28d18:	dcc00317 	ldw	r19,12(sp)
   28d1c:	dc800217 	ldw	r18,8(sp)
   28d20:	dc400117 	ldw	r17,4(sp)
   28d24:	dc000017 	ldw	r16,0(sp)
   28d28:	dec00504 	addi	sp,sp,20
   28d2c:	f800283a 	ret
   28d30:	0028e440 	call	28e44 <__sinit>
   28d34:	003fa806 	br	28bd8 <_fflush_r+0x2c>
   28d38:	90800517 	ldw	r2,20(r18)
   28d3c:	90800215 	stw	r2,8(r18)
   28d40:	003fda06 	br	28cac <_fflush_r+0x100>
   28d44:	90800117 	ldw	r2,4(r18)
   28d48:	90c00c17 	ldw	r3,48(r18)
   28d4c:	80a1c83a 	sub	r16,r16,r2
   28d50:	183fb426 	beq	r3,zero,28c24 <_fflush_r+0x78>
   28d54:	90800f17 	ldw	r2,60(r18)
   28d58:	80a1c83a 	sub	r16,r16,r2
   28d5c:	003fb106 	br	28c24 <_fflush_r+0x78>
   28d60:	91400717 	ldw	r5,28(r18)
   28d64:	9809883a 	mov	r4,r19
   28d68:	000d883a 	mov	r6,zero
   28d6c:	01c00044 	movi	r7,1
   28d70:	403ee83a 	callr	r8
   28d74:	1021883a 	mov	r16,r2
   28d78:	00bfffc4 	movi	r2,-1
   28d7c:	80800226 	beq	r16,r2,28d88 <_fflush_r+0x1dc>
   28d80:	92000a17 	ldw	r8,40(r18)
   28d84:	003fa406 	br	28c18 <_fflush_r+0x6c>
   28d88:	98c00017 	ldw	r3,0(r19)
   28d8c:	00800744 	movi	r2,29
   28d90:	18bfde26 	beq	r3,r2,28d0c <_fflush_r+0x160>
   28d94:	9080030b 	ldhu	r2,12(r18)
   28d98:	8007883a 	mov	r3,r16
   28d9c:	10801014 	ori	r2,r2,64
   28da0:	9080030d 	sth	r2,12(r18)
   28da4:	003fcf06 	br	28ce4 <_fflush_r+0x138>

00028da8 <fflush>:
   28da8:	014000f4 	movhi	r5,3
   28dac:	2962eb04 	addi	r5,r5,-29780
   28db0:	2007883a 	mov	r3,r4
   28db4:	20000526 	beq	r4,zero,28dcc <fflush+0x24>
   28db8:	008000f4 	movhi	r2,3
   28dbc:	1086af04 	addi	r2,r2,6844
   28dc0:	11000017 	ldw	r4,0(r2)
   28dc4:	180b883a 	mov	r5,r3
   28dc8:	0028bac1 	jmpi	28bac <_fflush_r>
   28dcc:	008000f4 	movhi	r2,3
   28dd0:	1086b004 	addi	r2,r2,6848
   28dd4:	11000017 	ldw	r4,0(r2)
   28dd8:	00299781 	jmpi	29978 <_fwalk_reent>

00028ddc <std>:
   28ddc:	008000f4 	movhi	r2,3
   28de0:	10af8904 	addi	r2,r2,-16860
   28de4:	20800b15 	stw	r2,44(r4)
   28de8:	008000f4 	movhi	r2,3
   28dec:	10afc404 	addi	r2,r2,-16624
   28df0:	20800815 	stw	r2,32(r4)
   28df4:	00c000f4 	movhi	r3,3
   28df8:	18efa504 	addi	r3,r3,-16748
   28dfc:	008000f4 	movhi	r2,3
   28e00:	10af8b04 	addi	r2,r2,-16852
   28e04:	2140030d 	sth	r5,12(r4)
   28e08:	2180038d 	sth	r6,14(r4)
   28e0c:	20c00915 	stw	r3,36(r4)
   28e10:	20800a15 	stw	r2,40(r4)
   28e14:	20000015 	stw	zero,0(r4)
   28e18:	20000115 	stw	zero,4(r4)
   28e1c:	20000215 	stw	zero,8(r4)
   28e20:	20000415 	stw	zero,16(r4)
   28e24:	20000515 	stw	zero,20(r4)
   28e28:	20000615 	stw	zero,24(r4)
   28e2c:	21000715 	stw	r4,28(r4)
   28e30:	f800283a 	ret

00028e34 <__sfp_lock_acquire>:
   28e34:	f800283a 	ret

00028e38 <__sfp_lock_release>:
   28e38:	f800283a 	ret

00028e3c <__sinit_lock_acquire>:
   28e3c:	f800283a 	ret

00028e40 <__sinit_lock_release>:
   28e40:	f800283a 	ret

00028e44 <__sinit>:
   28e44:	20800e17 	ldw	r2,56(r4)
   28e48:	defffd04 	addi	sp,sp,-12
   28e4c:	dc400115 	stw	r17,4(sp)
   28e50:	dc000015 	stw	r16,0(sp)
   28e54:	dfc00215 	stw	ra,8(sp)
   28e58:	04400044 	movi	r17,1
   28e5c:	01400104 	movi	r5,4
   28e60:	000d883a 	mov	r6,zero
   28e64:	2021883a 	mov	r16,r4
   28e68:	2200bb04 	addi	r8,r4,748
   28e6c:	200f883a 	mov	r7,r4
   28e70:	10000526 	beq	r2,zero,28e88 <__sinit+0x44>
   28e74:	dfc00217 	ldw	ra,8(sp)
   28e78:	dc400117 	ldw	r17,4(sp)
   28e7c:	dc000017 	ldw	r16,0(sp)
   28e80:	dec00304 	addi	sp,sp,12
   28e84:	f800283a 	ret
   28e88:	21000117 	ldw	r4,4(r4)
   28e8c:	008000f4 	movhi	r2,3
   28e90:	10a3ca04 	addi	r2,r2,-28888
   28e94:	00c000c4 	movi	r3,3
   28e98:	80800f15 	stw	r2,60(r16)
   28e9c:	80c0b915 	stw	r3,740(r16)
   28ea0:	8200ba15 	stw	r8,744(r16)
   28ea4:	84400e15 	stw	r17,56(r16)
   28ea8:	8000b815 	stw	zero,736(r16)
   28eac:	0028ddc0 	call	28ddc <std>
   28eb0:	81000217 	ldw	r4,8(r16)
   28eb4:	880d883a 	mov	r6,r17
   28eb8:	800f883a 	mov	r7,r16
   28ebc:	01400284 	movi	r5,10
   28ec0:	0028ddc0 	call	28ddc <std>
   28ec4:	81000317 	ldw	r4,12(r16)
   28ec8:	800f883a 	mov	r7,r16
   28ecc:	01400484 	movi	r5,18
   28ed0:	01800084 	movi	r6,2
   28ed4:	dfc00217 	ldw	ra,8(sp)
   28ed8:	dc400117 	ldw	r17,4(sp)
   28edc:	dc000017 	ldw	r16,0(sp)
   28ee0:	dec00304 	addi	sp,sp,12
   28ee4:	0028ddc1 	jmpi	28ddc <std>

00028ee8 <__fp_lock>:
   28ee8:	0005883a 	mov	r2,zero
   28eec:	f800283a 	ret

00028ef0 <__fp_unlock>:
   28ef0:	0005883a 	mov	r2,zero
   28ef4:	f800283a 	ret

00028ef8 <__fp_unlock_all>:
   28ef8:	008000f4 	movhi	r2,3
   28efc:	1086af04 	addi	r2,r2,6844
   28f00:	11000017 	ldw	r4,0(r2)
   28f04:	014000f4 	movhi	r5,3
   28f08:	2963bc04 	addi	r5,r5,-28944
   28f0c:	0029a401 	jmpi	29a40 <_fwalk>

00028f10 <__fp_lock_all>:
   28f10:	008000f4 	movhi	r2,3
   28f14:	1086af04 	addi	r2,r2,6844
   28f18:	11000017 	ldw	r4,0(r2)
   28f1c:	014000f4 	movhi	r5,3
   28f20:	2963ba04 	addi	r5,r5,-28952
   28f24:	0029a401 	jmpi	29a40 <_fwalk>

00028f28 <_cleanup_r>:
   28f28:	014000f4 	movhi	r5,3
   28f2c:	2970b604 	addi	r5,r5,-15656
   28f30:	0029a401 	jmpi	29a40 <_fwalk>

00028f34 <_cleanup>:
   28f34:	008000f4 	movhi	r2,3
   28f38:	1086b004 	addi	r2,r2,6848
   28f3c:	11000017 	ldw	r4,0(r2)
   28f40:	0028f281 	jmpi	28f28 <_cleanup_r>

00028f44 <__sfmoreglue>:
   28f44:	defffc04 	addi	sp,sp,-16
   28f48:	dc400115 	stw	r17,4(sp)
   28f4c:	2c401724 	muli	r17,r5,92
   28f50:	dc800215 	stw	r18,8(sp)
   28f54:	2825883a 	mov	r18,r5
   28f58:	89400304 	addi	r5,r17,12
   28f5c:	dc000015 	stw	r16,0(sp)
   28f60:	dfc00315 	stw	ra,12(sp)
   28f64:	0029d500 	call	29d50 <_malloc_r>
   28f68:	0021883a 	mov	r16,zero
   28f6c:	880d883a 	mov	r6,r17
   28f70:	000b883a 	mov	r5,zero
   28f74:	10000626 	beq	r2,zero,28f90 <__sfmoreglue+0x4c>
   28f78:	11000304 	addi	r4,r2,12
   28f7c:	14800115 	stw	r18,4(r2)
   28f80:	10000015 	stw	zero,0(r2)
   28f84:	11000215 	stw	r4,8(r2)
   28f88:	1021883a 	mov	r16,r2
   28f8c:	002a6f40 	call	2a6f4 <memset>
   28f90:	8005883a 	mov	r2,r16
   28f94:	dfc00317 	ldw	ra,12(sp)
   28f98:	dc800217 	ldw	r18,8(sp)
   28f9c:	dc400117 	ldw	r17,4(sp)
   28fa0:	dc000017 	ldw	r16,0(sp)
   28fa4:	dec00404 	addi	sp,sp,16
   28fa8:	f800283a 	ret

00028fac <__sfp>:
   28fac:	defffd04 	addi	sp,sp,-12
   28fb0:	008000f4 	movhi	r2,3
   28fb4:	1086b004 	addi	r2,r2,6848
   28fb8:	dc000015 	stw	r16,0(sp)
   28fbc:	14000017 	ldw	r16,0(r2)
   28fc0:	dc400115 	stw	r17,4(sp)
   28fc4:	dfc00215 	stw	ra,8(sp)
   28fc8:	80800e17 	ldw	r2,56(r16)
   28fcc:	2023883a 	mov	r17,r4
   28fd0:	10002626 	beq	r2,zero,2906c <__sfp+0xc0>
   28fd4:	8400b804 	addi	r16,r16,736
   28fd8:	80800117 	ldw	r2,4(r16)
   28fdc:	81000217 	ldw	r4,8(r16)
   28fe0:	10ffffc4 	addi	r3,r2,-1
   28fe4:	18000916 	blt	r3,zero,2900c <__sfp+0x60>
   28fe8:	2080030f 	ldh	r2,12(r4)
   28fec:	10000b26 	beq	r2,zero,2901c <__sfp+0x70>
   28ff0:	017fffc4 	movi	r5,-1
   28ff4:	00000206 	br	29000 <__sfp+0x54>
   28ff8:	2080030f 	ldh	r2,12(r4)
   28ffc:	10000726 	beq	r2,zero,2901c <__sfp+0x70>
   29000:	18ffffc4 	addi	r3,r3,-1
   29004:	21001704 	addi	r4,r4,92
   29008:	197ffb1e 	bne	r3,r5,28ff8 <__sfp+0x4c>
   2900c:	80800017 	ldw	r2,0(r16)
   29010:	10001926 	beq	r2,zero,29078 <__sfp+0xcc>
   29014:	1021883a 	mov	r16,r2
   29018:	003fef06 	br	28fd8 <__sfp+0x2c>
   2901c:	00bfffc4 	movi	r2,-1
   29020:	00c00044 	movi	r3,1
   29024:	2080038d 	sth	r2,14(r4)
   29028:	20c0030d 	sth	r3,12(r4)
   2902c:	20000015 	stw	zero,0(r4)
   29030:	20000215 	stw	zero,8(r4)
   29034:	20000115 	stw	zero,4(r4)
   29038:	20000415 	stw	zero,16(r4)
   2903c:	20000515 	stw	zero,20(r4)
   29040:	20000615 	stw	zero,24(r4)
   29044:	20000c15 	stw	zero,48(r4)
   29048:	20000d15 	stw	zero,52(r4)
   2904c:	20001115 	stw	zero,68(r4)
   29050:	20001215 	stw	zero,72(r4)
   29054:	2005883a 	mov	r2,r4
   29058:	dfc00217 	ldw	ra,8(sp)
   2905c:	dc400117 	ldw	r17,4(sp)
   29060:	dc000017 	ldw	r16,0(sp)
   29064:	dec00304 	addi	sp,sp,12
   29068:	f800283a 	ret
   2906c:	8009883a 	mov	r4,r16
   29070:	0028e440 	call	28e44 <__sinit>
   29074:	003fd706 	br	28fd4 <__sfp+0x28>
   29078:	8809883a 	mov	r4,r17
   2907c:	01400104 	movi	r5,4
   29080:	0028f440 	call	28f44 <__sfmoreglue>
   29084:	80800015 	stw	r2,0(r16)
   29088:	103fe21e 	bne	r2,zero,29014 <__sfp+0x68>
   2908c:	00800304 	movi	r2,12
   29090:	0009883a 	mov	r4,zero
   29094:	88800015 	stw	r2,0(r17)
   29098:	003fee06 	br	29054 <__sfp+0xa8>

0002909c <_malloc_trim_r>:
   2909c:	defffb04 	addi	sp,sp,-20
   290a0:	dcc00315 	stw	r19,12(sp)
   290a4:	04c000f4 	movhi	r19,3
   290a8:	9cc11b04 	addi	r19,r19,1132
   290ac:	dc800215 	stw	r18,8(sp)
   290b0:	dc400115 	stw	r17,4(sp)
   290b4:	dc000015 	stw	r16,0(sp)
   290b8:	2823883a 	mov	r17,r5
   290bc:	2025883a 	mov	r18,r4
   290c0:	dfc00415 	stw	ra,16(sp)
   290c4:	002d9b00 	call	2d9b0 <__malloc_lock>
   290c8:	98800217 	ldw	r2,8(r19)
   290cc:	9009883a 	mov	r4,r18
   290d0:	000b883a 	mov	r5,zero
   290d4:	10c00117 	ldw	r3,4(r2)
   290d8:	00bfff04 	movi	r2,-4
   290dc:	18a0703a 	and	r16,r3,r2
   290e0:	8463c83a 	sub	r17,r16,r17
   290e4:	8c43fbc4 	addi	r17,r17,4079
   290e8:	8822d33a 	srli	r17,r17,12
   290ec:	0083ffc4 	movi	r2,4095
   290f0:	8c7fffc4 	addi	r17,r17,-1
   290f4:	8822933a 	slli	r17,r17,12
   290f8:	1440060e 	bge	r2,r17,29114 <_malloc_trim_r+0x78>
   290fc:	002bdb40 	call	2bdb4 <_sbrk_r>
   29100:	98c00217 	ldw	r3,8(r19)
   29104:	9009883a 	mov	r4,r18
   29108:	044bc83a 	sub	r5,zero,r17
   2910c:	80c7883a 	add	r3,r16,r3
   29110:	10c00926 	beq	r2,r3,29138 <_malloc_trim_r+0x9c>
   29114:	002d9d00 	call	2d9d0 <__malloc_unlock>
   29118:	0005883a 	mov	r2,zero
   2911c:	dfc00417 	ldw	ra,16(sp)
   29120:	dcc00317 	ldw	r19,12(sp)
   29124:	dc800217 	ldw	r18,8(sp)
   29128:	dc400117 	ldw	r17,4(sp)
   2912c:	dc000017 	ldw	r16,0(sp)
   29130:	dec00504 	addi	sp,sp,20
   29134:	f800283a 	ret
   29138:	9009883a 	mov	r4,r18
   2913c:	002bdb40 	call	2bdb4 <_sbrk_r>
   29140:	844dc83a 	sub	r6,r16,r17
   29144:	00ffffc4 	movi	r3,-1
   29148:	9009883a 	mov	r4,r18
   2914c:	000b883a 	mov	r5,zero
   29150:	01c000f4 	movhi	r7,3
   29154:	39cd7404 	addi	r7,r7,13776
   29158:	31800054 	ori	r6,r6,1
   2915c:	10c00926 	beq	r2,r3,29184 <_malloc_trim_r+0xe8>
   29160:	38800017 	ldw	r2,0(r7)
   29164:	98c00217 	ldw	r3,8(r19)
   29168:	9009883a 	mov	r4,r18
   2916c:	1445c83a 	sub	r2,r2,r17
   29170:	38800015 	stw	r2,0(r7)
   29174:	19800115 	stw	r6,4(r3)
   29178:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2917c:	00800044 	movi	r2,1
   29180:	003fe606 	br	2911c <_malloc_trim_r+0x80>
   29184:	002bdb40 	call	2bdb4 <_sbrk_r>
   29188:	99800217 	ldw	r6,8(r19)
   2918c:	100f883a 	mov	r7,r2
   29190:	9009883a 	mov	r4,r18
   29194:	1187c83a 	sub	r3,r2,r6
   29198:	008003c4 	movi	r2,15
   2919c:	19400054 	ori	r5,r3,1
   291a0:	10ffdc0e 	bge	r2,r3,29114 <_malloc_trim_r+0x78>
   291a4:	008000f4 	movhi	r2,3
   291a8:	1086b404 	addi	r2,r2,6864
   291ac:	10c00017 	ldw	r3,0(r2)
   291b0:	008000f4 	movhi	r2,3
   291b4:	108d7404 	addi	r2,r2,13776
   291b8:	31400115 	stw	r5,4(r6)
   291bc:	38c7c83a 	sub	r3,r7,r3
   291c0:	10c00015 	stw	r3,0(r2)
   291c4:	003fd306 	br	29114 <_malloc_trim_r+0x78>

000291c8 <_free_r>:
   291c8:	defffd04 	addi	sp,sp,-12
   291cc:	dc400115 	stw	r17,4(sp)
   291d0:	dc000015 	stw	r16,0(sp)
   291d4:	dfc00215 	stw	ra,8(sp)
   291d8:	2821883a 	mov	r16,r5
   291dc:	2023883a 	mov	r17,r4
   291e0:	28005a26 	beq	r5,zero,2934c <_free_r+0x184>
   291e4:	002d9b00 	call	2d9b0 <__malloc_lock>
   291e8:	823ffe04 	addi	r8,r16,-8
   291ec:	41400117 	ldw	r5,4(r8)
   291f0:	00bfff84 	movi	r2,-2
   291f4:	028000f4 	movhi	r10,3
   291f8:	52811b04 	addi	r10,r10,1132
   291fc:	288e703a 	and	r7,r5,r2
   29200:	41cd883a 	add	r6,r8,r7
   29204:	30c00117 	ldw	r3,4(r6)
   29208:	51000217 	ldw	r4,8(r10)
   2920c:	00bfff04 	movi	r2,-4
   29210:	1892703a 	and	r9,r3,r2
   29214:	5017883a 	mov	r11,r10
   29218:	31006726 	beq	r6,r4,293b8 <_free_r+0x1f0>
   2921c:	2880004c 	andi	r2,r5,1
   29220:	1005003a 	cmpeq	r2,r2,zero
   29224:	32400115 	stw	r9,4(r6)
   29228:	10001a1e 	bne	r2,zero,29294 <_free_r+0xcc>
   2922c:	000b883a 	mov	r5,zero
   29230:	3247883a 	add	r3,r6,r9
   29234:	18800117 	ldw	r2,4(r3)
   29238:	1080004c 	andi	r2,r2,1
   2923c:	1000231e 	bne	r2,zero,292cc <_free_r+0x104>
   29240:	280ac03a 	cmpne	r5,r5,zero
   29244:	3a4f883a 	add	r7,r7,r9
   29248:	2800451e 	bne	r5,zero,29360 <_free_r+0x198>
   2924c:	31000217 	ldw	r4,8(r6)
   29250:	008000f4 	movhi	r2,3
   29254:	10811d04 	addi	r2,r2,1140
   29258:	20807b26 	beq	r4,r2,29448 <_free_r+0x280>
   2925c:	30800317 	ldw	r2,12(r6)
   29260:	3a07883a 	add	r3,r7,r8
   29264:	19c00015 	stw	r7,0(r3)
   29268:	11000215 	stw	r4,8(r2)
   2926c:	20800315 	stw	r2,12(r4)
   29270:	38800054 	ori	r2,r7,1
   29274:	40800115 	stw	r2,4(r8)
   29278:	28001a26 	beq	r5,zero,292e4 <_free_r+0x11c>
   2927c:	8809883a 	mov	r4,r17
   29280:	dfc00217 	ldw	ra,8(sp)
   29284:	dc400117 	ldw	r17,4(sp)
   29288:	dc000017 	ldw	r16,0(sp)
   2928c:	dec00304 	addi	sp,sp,12
   29290:	002d9d01 	jmpi	2d9d0 <__malloc_unlock>
   29294:	80bffe17 	ldw	r2,-8(r16)
   29298:	50c00204 	addi	r3,r10,8
   2929c:	4091c83a 	sub	r8,r8,r2
   292a0:	41000217 	ldw	r4,8(r8)
   292a4:	388f883a 	add	r7,r7,r2
   292a8:	20c06126 	beq	r4,r3,29430 <_free_r+0x268>
   292ac:	40800317 	ldw	r2,12(r8)
   292b0:	3247883a 	add	r3,r6,r9
   292b4:	000b883a 	mov	r5,zero
   292b8:	11000215 	stw	r4,8(r2)
   292bc:	20800315 	stw	r2,12(r4)
   292c0:	18800117 	ldw	r2,4(r3)
   292c4:	1080004c 	andi	r2,r2,1
   292c8:	103fdd26 	beq	r2,zero,29240 <_free_r+0x78>
   292cc:	38800054 	ori	r2,r7,1
   292d0:	3a07883a 	add	r3,r7,r8
   292d4:	280ac03a 	cmpne	r5,r5,zero
   292d8:	40800115 	stw	r2,4(r8)
   292dc:	19c00015 	stw	r7,0(r3)
   292e0:	283fe61e 	bne	r5,zero,2927c <_free_r+0xb4>
   292e4:	00807fc4 	movi	r2,511
   292e8:	11c01f2e 	bgeu	r2,r7,29368 <_free_r+0x1a0>
   292ec:	3806d27a 	srli	r3,r7,9
   292f0:	1800481e 	bne	r3,zero,29414 <_free_r+0x24c>
   292f4:	3804d0fa 	srli	r2,r7,3
   292f8:	100690fa 	slli	r3,r2,3
   292fc:	1acd883a 	add	r6,r3,r11
   29300:	31400217 	ldw	r5,8(r6)
   29304:	31405926 	beq	r6,r5,2946c <_free_r+0x2a4>
   29308:	28800117 	ldw	r2,4(r5)
   2930c:	00ffff04 	movi	r3,-4
   29310:	10c4703a 	and	r2,r2,r3
   29314:	3880022e 	bgeu	r7,r2,29320 <_free_r+0x158>
   29318:	29400217 	ldw	r5,8(r5)
   2931c:	317ffa1e 	bne	r6,r5,29308 <_free_r+0x140>
   29320:	29800317 	ldw	r6,12(r5)
   29324:	41800315 	stw	r6,12(r8)
   29328:	41400215 	stw	r5,8(r8)
   2932c:	8809883a 	mov	r4,r17
   29330:	2a000315 	stw	r8,12(r5)
   29334:	32000215 	stw	r8,8(r6)
   29338:	dfc00217 	ldw	ra,8(sp)
   2933c:	dc400117 	ldw	r17,4(sp)
   29340:	dc000017 	ldw	r16,0(sp)
   29344:	dec00304 	addi	sp,sp,12
   29348:	002d9d01 	jmpi	2d9d0 <__malloc_unlock>
   2934c:	dfc00217 	ldw	ra,8(sp)
   29350:	dc400117 	ldw	r17,4(sp)
   29354:	dc000017 	ldw	r16,0(sp)
   29358:	dec00304 	addi	sp,sp,12
   2935c:	f800283a 	ret
   29360:	31000217 	ldw	r4,8(r6)
   29364:	003fbd06 	br	2925c <_free_r+0x94>
   29368:	3806d0fa 	srli	r3,r7,3
   2936c:	00800044 	movi	r2,1
   29370:	51400117 	ldw	r5,4(r10)
   29374:	180890fa 	slli	r4,r3,3
   29378:	1807d0ba 	srai	r3,r3,2
   2937c:	22c9883a 	add	r4,r4,r11
   29380:	21800217 	ldw	r6,8(r4)
   29384:	10c4983a 	sll	r2,r2,r3
   29388:	41000315 	stw	r4,12(r8)
   2938c:	41800215 	stw	r6,8(r8)
   29390:	288ab03a 	or	r5,r5,r2
   29394:	22000215 	stw	r8,8(r4)
   29398:	8809883a 	mov	r4,r17
   2939c:	51400115 	stw	r5,4(r10)
   293a0:	32000315 	stw	r8,12(r6)
   293a4:	dfc00217 	ldw	ra,8(sp)
   293a8:	dc400117 	ldw	r17,4(sp)
   293ac:	dc000017 	ldw	r16,0(sp)
   293b0:	dec00304 	addi	sp,sp,12
   293b4:	002d9d01 	jmpi	2d9d0 <__malloc_unlock>
   293b8:	2880004c 	andi	r2,r5,1
   293bc:	3a4d883a 	add	r6,r7,r9
   293c0:	1000071e 	bne	r2,zero,293e0 <_free_r+0x218>
   293c4:	80bffe17 	ldw	r2,-8(r16)
   293c8:	4091c83a 	sub	r8,r8,r2
   293cc:	41000317 	ldw	r4,12(r8)
   293d0:	40c00217 	ldw	r3,8(r8)
   293d4:	308d883a 	add	r6,r6,r2
   293d8:	20c00215 	stw	r3,8(r4)
   293dc:	19000315 	stw	r4,12(r3)
   293e0:	008000f4 	movhi	r2,3
   293e4:	1086b304 	addi	r2,r2,6860
   293e8:	11000017 	ldw	r4,0(r2)
   293ec:	30c00054 	ori	r3,r6,1
   293f0:	52000215 	stw	r8,8(r10)
   293f4:	40c00115 	stw	r3,4(r8)
   293f8:	313fa036 	bltu	r6,r4,2927c <_free_r+0xb4>
   293fc:	008000f4 	movhi	r2,3
   29400:	108d6a04 	addi	r2,r2,13736
   29404:	11400017 	ldw	r5,0(r2)
   29408:	8809883a 	mov	r4,r17
   2940c:	002909c0 	call	2909c <_malloc_trim_r>
   29410:	003f9a06 	br	2927c <_free_r+0xb4>
   29414:	00800104 	movi	r2,4
   29418:	10c0072e 	bgeu	r2,r3,29438 <_free_r+0x270>
   2941c:	00800504 	movi	r2,20
   29420:	10c01936 	bltu	r2,r3,29488 <_free_r+0x2c0>
   29424:	188016c4 	addi	r2,r3,91
   29428:	100690fa 	slli	r3,r2,3
   2942c:	003fb306 	br	292fc <_free_r+0x134>
   29430:	01400044 	movi	r5,1
   29434:	003f7e06 	br	29230 <_free_r+0x68>
   29438:	3804d1ba 	srli	r2,r7,6
   2943c:	10800e04 	addi	r2,r2,56
   29440:	100690fa 	slli	r3,r2,3
   29444:	003fad06 	br	292fc <_free_r+0x134>
   29448:	22000315 	stw	r8,12(r4)
   2944c:	22000215 	stw	r8,8(r4)
   29450:	3a05883a 	add	r2,r7,r8
   29454:	38c00054 	ori	r3,r7,1
   29458:	11c00015 	stw	r7,0(r2)
   2945c:	41000215 	stw	r4,8(r8)
   29460:	40c00115 	stw	r3,4(r8)
   29464:	41000315 	stw	r4,12(r8)
   29468:	003f8406 	br	2927c <_free_r+0xb4>
   2946c:	1005d0ba 	srai	r2,r2,2
   29470:	00c00044 	movi	r3,1
   29474:	51000117 	ldw	r4,4(r10)
   29478:	1886983a 	sll	r3,r3,r2
   2947c:	20c8b03a 	or	r4,r4,r3
   29480:	51000115 	stw	r4,4(r10)
   29484:	003fa706 	br	29324 <_free_r+0x15c>
   29488:	00801504 	movi	r2,84
   2948c:	10c00436 	bltu	r2,r3,294a0 <_free_r+0x2d8>
   29490:	3804d33a 	srli	r2,r7,12
   29494:	10801b84 	addi	r2,r2,110
   29498:	100690fa 	slli	r3,r2,3
   2949c:	003f9706 	br	292fc <_free_r+0x134>
   294a0:	00805504 	movi	r2,340
   294a4:	10c00436 	bltu	r2,r3,294b8 <_free_r+0x2f0>
   294a8:	3804d3fa 	srli	r2,r7,15
   294ac:	10801dc4 	addi	r2,r2,119
   294b0:	100690fa 	slli	r3,r2,3
   294b4:	003f9106 	br	292fc <_free_r+0x134>
   294b8:	00815504 	movi	r2,1364
   294bc:	10c0032e 	bgeu	r2,r3,294cc <_free_r+0x304>
   294c0:	00801f84 	movi	r2,126
   294c4:	00c0fc04 	movi	r3,1008
   294c8:	003f8c06 	br	292fc <_free_r+0x134>
   294cc:	3804d4ba 	srli	r2,r7,18
   294d0:	10801f04 	addi	r2,r2,124
   294d4:	100690fa 	slli	r3,r2,3
   294d8:	003f8806 	br	292fc <_free_r+0x134>

000294dc <__sfvwrite_r>:
   294dc:	30800217 	ldw	r2,8(r6)
   294e0:	defff504 	addi	sp,sp,-44
   294e4:	df000915 	stw	fp,36(sp)
   294e8:	dd800715 	stw	r22,28(sp)
   294ec:	dc800315 	stw	r18,12(sp)
   294f0:	dfc00a15 	stw	ra,40(sp)
   294f4:	ddc00815 	stw	r23,32(sp)
   294f8:	dd400615 	stw	r21,24(sp)
   294fc:	dd000515 	stw	r20,20(sp)
   29500:	dcc00415 	stw	r19,16(sp)
   29504:	dc400215 	stw	r17,8(sp)
   29508:	dc000115 	stw	r16,4(sp)
   2950c:	302d883a 	mov	r22,r6
   29510:	2039883a 	mov	fp,r4
   29514:	2825883a 	mov	r18,r5
   29518:	10001c26 	beq	r2,zero,2958c <__sfvwrite_r+0xb0>
   2951c:	29c0030b 	ldhu	r7,12(r5)
   29520:	3880020c 	andi	r2,r7,8
   29524:	10002726 	beq	r2,zero,295c4 <__sfvwrite_r+0xe8>
   29528:	28800417 	ldw	r2,16(r5)
   2952c:	10002526 	beq	r2,zero,295c4 <__sfvwrite_r+0xe8>
   29530:	3880008c 	andi	r2,r7,2
   29534:	b5400017 	ldw	r21,0(r22)
   29538:	10002826 	beq	r2,zero,295dc <__sfvwrite_r+0x100>
   2953c:	0021883a 	mov	r16,zero
   29540:	0023883a 	mov	r17,zero
   29544:	880d883a 	mov	r6,r17
   29548:	e009883a 	mov	r4,fp
   2954c:	00810004 	movi	r2,1024
   29550:	80006e26 	beq	r16,zero,2970c <__sfvwrite_r+0x230>
   29554:	800f883a 	mov	r7,r16
   29558:	91400717 	ldw	r5,28(r18)
   2955c:	1400012e 	bgeu	r2,r16,29564 <__sfvwrite_r+0x88>
   29560:	100f883a 	mov	r7,r2
   29564:	90c00917 	ldw	r3,36(r18)
   29568:	183ee83a 	callr	r3
   2956c:	1007883a 	mov	r3,r2
   29570:	80a1c83a 	sub	r16,r16,r2
   29574:	88a3883a 	add	r17,r17,r2
   29578:	00806d0e 	bge	zero,r2,29730 <__sfvwrite_r+0x254>
   2957c:	b0800217 	ldw	r2,8(r22)
   29580:	10c5c83a 	sub	r2,r2,r3
   29584:	b0800215 	stw	r2,8(r22)
   29588:	103fee1e 	bne	r2,zero,29544 <__sfvwrite_r+0x68>
   2958c:	0009883a 	mov	r4,zero
   29590:	2005883a 	mov	r2,r4
   29594:	dfc00a17 	ldw	ra,40(sp)
   29598:	df000917 	ldw	fp,36(sp)
   2959c:	ddc00817 	ldw	r23,32(sp)
   295a0:	dd800717 	ldw	r22,28(sp)
   295a4:	dd400617 	ldw	r21,24(sp)
   295a8:	dd000517 	ldw	r20,20(sp)
   295ac:	dcc00417 	ldw	r19,16(sp)
   295b0:	dc800317 	ldw	r18,12(sp)
   295b4:	dc400217 	ldw	r17,8(sp)
   295b8:	dc000117 	ldw	r16,4(sp)
   295bc:	dec00b04 	addi	sp,sp,44
   295c0:	f800283a 	ret
   295c4:	00272a40 	call	272a4 <__swsetup_r>
   295c8:	1000e41e 	bne	r2,zero,2995c <__sfvwrite_r+0x480>
   295cc:	91c0030b 	ldhu	r7,12(r18)
   295d0:	b5400017 	ldw	r21,0(r22)
   295d4:	3880008c 	andi	r2,r7,2
   295d8:	103fd81e 	bne	r2,zero,2953c <__sfvwrite_r+0x60>
   295dc:	3880004c 	andi	r2,r7,1
   295e0:	1005003a 	cmpeq	r2,r2,zero
   295e4:	10005726 	beq	r2,zero,29744 <__sfvwrite_r+0x268>
   295e8:	0029883a 	mov	r20,zero
   295ec:	002f883a 	mov	r23,zero
   295f0:	a0004226 	beq	r20,zero,296fc <__sfvwrite_r+0x220>
   295f4:	3880800c 	andi	r2,r7,512
   295f8:	94000217 	ldw	r16,8(r18)
   295fc:	10008b26 	beq	r2,zero,2982c <__sfvwrite_r+0x350>
   29600:	800d883a 	mov	r6,r16
   29604:	a400a536 	bltu	r20,r16,2989c <__sfvwrite_r+0x3c0>
   29608:	3881200c 	andi	r2,r7,1152
   2960c:	10002726 	beq	r2,zero,296ac <__sfvwrite_r+0x1d0>
   29610:	90800517 	ldw	r2,20(r18)
   29614:	92000417 	ldw	r8,16(r18)
   29618:	91400017 	ldw	r5,0(r18)
   2961c:	1087883a 	add	r3,r2,r2
   29620:	1887883a 	add	r3,r3,r2
   29624:	1808d7fa 	srli	r4,r3,31
   29628:	2a21c83a 	sub	r16,r5,r8
   2962c:	80800044 	addi	r2,r16,1
   29630:	20c9883a 	add	r4,r4,r3
   29634:	2027d07a 	srai	r19,r4,1
   29638:	a085883a 	add	r2,r20,r2
   2963c:	980d883a 	mov	r6,r19
   29640:	9880022e 	bgeu	r19,r2,2964c <__sfvwrite_r+0x170>
   29644:	1027883a 	mov	r19,r2
   29648:	100d883a 	mov	r6,r2
   2964c:	3881000c 	andi	r2,r7,1024
   29650:	1000b826 	beq	r2,zero,29934 <__sfvwrite_r+0x458>
   29654:	300b883a 	mov	r5,r6
   29658:	e009883a 	mov	r4,fp
   2965c:	0029d500 	call	29d50 <_malloc_r>
   29660:	10003126 	beq	r2,zero,29728 <__sfvwrite_r+0x24c>
   29664:	91400417 	ldw	r5,16(r18)
   29668:	1009883a 	mov	r4,r2
   2966c:	800d883a 	mov	r6,r16
   29670:	1023883a 	mov	r17,r2
   29674:	002a5740 	call	2a574 <memcpy>
   29678:	90c0030b 	ldhu	r3,12(r18)
   2967c:	00beffc4 	movi	r2,-1025
   29680:	1886703a 	and	r3,r3,r2
   29684:	18c02014 	ori	r3,r3,128
   29688:	90c0030d 	sth	r3,12(r18)
   2968c:	9c07c83a 	sub	r3,r19,r16
   29690:	8c05883a 	add	r2,r17,r16
   29694:	a00d883a 	mov	r6,r20
   29698:	a021883a 	mov	r16,r20
   2969c:	90800015 	stw	r2,0(r18)
   296a0:	90c00215 	stw	r3,8(r18)
   296a4:	94400415 	stw	r17,16(r18)
   296a8:	94c00515 	stw	r19,20(r18)
   296ac:	91000017 	ldw	r4,0(r18)
   296b0:	b80b883a 	mov	r5,r23
   296b4:	a023883a 	mov	r17,r20
   296b8:	002a6140 	call	2a614 <memmove>
   296bc:	90c00217 	ldw	r3,8(r18)
   296c0:	90800017 	ldw	r2,0(r18)
   296c4:	a027883a 	mov	r19,r20
   296c8:	1c07c83a 	sub	r3,r3,r16
   296cc:	1405883a 	add	r2,r2,r16
   296d0:	90c00215 	stw	r3,8(r18)
   296d4:	a021883a 	mov	r16,r20
   296d8:	90800015 	stw	r2,0(r18)
   296dc:	b0800217 	ldw	r2,8(r22)
   296e0:	1405c83a 	sub	r2,r2,r16
   296e4:	b0800215 	stw	r2,8(r22)
   296e8:	103fa826 	beq	r2,zero,2958c <__sfvwrite_r+0xb0>
   296ec:	a469c83a 	sub	r20,r20,r17
   296f0:	91c0030b 	ldhu	r7,12(r18)
   296f4:	bcef883a 	add	r23,r23,r19
   296f8:	a03fbe1e 	bne	r20,zero,295f4 <__sfvwrite_r+0x118>
   296fc:	adc00017 	ldw	r23,0(r21)
   29700:	ad000117 	ldw	r20,4(r21)
   29704:	ad400204 	addi	r21,r21,8
   29708:	003fb906 	br	295f0 <__sfvwrite_r+0x114>
   2970c:	ac400017 	ldw	r17,0(r21)
   29710:	ac000117 	ldw	r16,4(r21)
   29714:	ad400204 	addi	r21,r21,8
   29718:	003f8a06 	br	29544 <__sfvwrite_r+0x68>
   2971c:	91400417 	ldw	r5,16(r18)
   29720:	e009883a 	mov	r4,fp
   29724:	00291c80 	call	291c8 <_free_r>
   29728:	00800304 	movi	r2,12
   2972c:	e0800015 	stw	r2,0(fp)
   29730:	9080030b 	ldhu	r2,12(r18)
   29734:	013fffc4 	movi	r4,-1
   29738:	10801014 	ori	r2,r2,64
   2973c:	9080030d 	sth	r2,12(r18)
   29740:	003f9306 	br	29590 <__sfvwrite_r+0xb4>
   29744:	0027883a 	mov	r19,zero
   29748:	002f883a 	mov	r23,zero
   2974c:	d8000015 	stw	zero,0(sp)
   29750:	0029883a 	mov	r20,zero
   29754:	98001e26 	beq	r19,zero,297d0 <__sfvwrite_r+0x2f4>
   29758:	d8c00017 	ldw	r3,0(sp)
   2975c:	1804c03a 	cmpne	r2,r3,zero
   29760:	10005e26 	beq	r2,zero,298dc <__sfvwrite_r+0x400>
   29764:	9821883a 	mov	r16,r19
   29768:	a4c0012e 	bgeu	r20,r19,29770 <__sfvwrite_r+0x294>
   2976c:	a021883a 	mov	r16,r20
   29770:	91000017 	ldw	r4,0(r18)
   29774:	90800417 	ldw	r2,16(r18)
   29778:	91800217 	ldw	r6,8(r18)
   2977c:	91c00517 	ldw	r7,20(r18)
   29780:	1100022e 	bgeu	r2,r4,2978c <__sfvwrite_r+0x2b0>
   29784:	31e3883a 	add	r17,r6,r7
   29788:	8c001616 	blt	r17,r16,297e4 <__sfvwrite_r+0x308>
   2978c:	81c03816 	blt	r16,r7,29870 <__sfvwrite_r+0x394>
   29790:	90c00917 	ldw	r3,36(r18)
   29794:	91400717 	ldw	r5,28(r18)
   29798:	e009883a 	mov	r4,fp
   2979c:	b80d883a 	mov	r6,r23
   297a0:	183ee83a 	callr	r3
   297a4:	1023883a 	mov	r17,r2
   297a8:	00bfe10e 	bge	zero,r2,29730 <__sfvwrite_r+0x254>
   297ac:	a469c83a 	sub	r20,r20,r17
   297b0:	a0001826 	beq	r20,zero,29814 <__sfvwrite_r+0x338>
   297b4:	b0800217 	ldw	r2,8(r22)
   297b8:	1445c83a 	sub	r2,r2,r17
   297bc:	b0800215 	stw	r2,8(r22)
   297c0:	103f7226 	beq	r2,zero,2958c <__sfvwrite_r+0xb0>
   297c4:	9c67c83a 	sub	r19,r19,r17
   297c8:	bc6f883a 	add	r23,r23,r17
   297cc:	983fe21e 	bne	r19,zero,29758 <__sfvwrite_r+0x27c>
   297d0:	adc00017 	ldw	r23,0(r21)
   297d4:	acc00117 	ldw	r19,4(r21)
   297d8:	ad400204 	addi	r21,r21,8
   297dc:	d8000015 	stw	zero,0(sp)
   297e0:	003fdc06 	br	29754 <__sfvwrite_r+0x278>
   297e4:	b80b883a 	mov	r5,r23
   297e8:	880d883a 	mov	r6,r17
   297ec:	002a6140 	call	2a614 <memmove>
   297f0:	90c00017 	ldw	r3,0(r18)
   297f4:	e009883a 	mov	r4,fp
   297f8:	900b883a 	mov	r5,r18
   297fc:	1c47883a 	add	r3,r3,r17
   29800:	90c00015 	stw	r3,0(r18)
   29804:	0028bac0 	call	28bac <_fflush_r>
   29808:	103fc91e 	bne	r2,zero,29730 <__sfvwrite_r+0x254>
   2980c:	a469c83a 	sub	r20,r20,r17
   29810:	a03fe81e 	bne	r20,zero,297b4 <__sfvwrite_r+0x2d8>
   29814:	e009883a 	mov	r4,fp
   29818:	900b883a 	mov	r5,r18
   2981c:	0028bac0 	call	28bac <_fflush_r>
   29820:	103fc31e 	bne	r2,zero,29730 <__sfvwrite_r+0x254>
   29824:	d8000015 	stw	zero,0(sp)
   29828:	003fe206 	br	297b4 <__sfvwrite_r+0x2d8>
   2982c:	91000017 	ldw	r4,0(r18)
   29830:	90800417 	ldw	r2,16(r18)
   29834:	1100022e 	bgeu	r2,r4,29840 <__sfvwrite_r+0x364>
   29838:	8023883a 	mov	r17,r16
   2983c:	85003136 	bltu	r16,r20,29904 <__sfvwrite_r+0x428>
   29840:	91c00517 	ldw	r7,20(r18)
   29844:	a1c01836 	bltu	r20,r7,298a8 <__sfvwrite_r+0x3cc>
   29848:	90c00917 	ldw	r3,36(r18)
   2984c:	91400717 	ldw	r5,28(r18)
   29850:	e009883a 	mov	r4,fp
   29854:	b80d883a 	mov	r6,r23
   29858:	183ee83a 	callr	r3
   2985c:	1021883a 	mov	r16,r2
   29860:	00bfb30e 	bge	zero,r2,29730 <__sfvwrite_r+0x254>
   29864:	1023883a 	mov	r17,r2
   29868:	1027883a 	mov	r19,r2
   2986c:	003f9b06 	br	296dc <__sfvwrite_r+0x200>
   29870:	b80b883a 	mov	r5,r23
   29874:	800d883a 	mov	r6,r16
   29878:	002a6140 	call	2a614 <memmove>
   2987c:	90c00217 	ldw	r3,8(r18)
   29880:	90800017 	ldw	r2,0(r18)
   29884:	8023883a 	mov	r17,r16
   29888:	1c07c83a 	sub	r3,r3,r16
   2988c:	1405883a 	add	r2,r2,r16
   29890:	90c00215 	stw	r3,8(r18)
   29894:	90800015 	stw	r2,0(r18)
   29898:	003fc406 	br	297ac <__sfvwrite_r+0x2d0>
   2989c:	a00d883a 	mov	r6,r20
   298a0:	a021883a 	mov	r16,r20
   298a4:	003f8106 	br	296ac <__sfvwrite_r+0x1d0>
   298a8:	b80b883a 	mov	r5,r23
   298ac:	a00d883a 	mov	r6,r20
   298b0:	002a6140 	call	2a614 <memmove>
   298b4:	90c00217 	ldw	r3,8(r18)
   298b8:	90800017 	ldw	r2,0(r18)
   298bc:	a021883a 	mov	r16,r20
   298c0:	1d07c83a 	sub	r3,r3,r20
   298c4:	1505883a 	add	r2,r2,r20
   298c8:	a023883a 	mov	r17,r20
   298cc:	a027883a 	mov	r19,r20
   298d0:	90c00215 	stw	r3,8(r18)
   298d4:	90800015 	stw	r2,0(r18)
   298d8:	003f8006 	br	296dc <__sfvwrite_r+0x200>
   298dc:	b809883a 	mov	r4,r23
   298e0:	01400284 	movi	r5,10
   298e4:	980d883a 	mov	r6,r19
   298e8:	002a4900 	call	2a490 <memchr>
   298ec:	10001726 	beq	r2,zero,2994c <__sfvwrite_r+0x470>
   298f0:	15c5c83a 	sub	r2,r2,r23
   298f4:	15000044 	addi	r20,r2,1
   298f8:	00800044 	movi	r2,1
   298fc:	d8800015 	stw	r2,0(sp)
   29900:	003f9806 	br	29764 <__sfvwrite_r+0x288>
   29904:	b80b883a 	mov	r5,r23
   29908:	800d883a 	mov	r6,r16
   2990c:	002a6140 	call	2a614 <memmove>
   29910:	90c00017 	ldw	r3,0(r18)
   29914:	e009883a 	mov	r4,fp
   29918:	900b883a 	mov	r5,r18
   2991c:	1c07883a 	add	r3,r3,r16
   29920:	90c00015 	stw	r3,0(r18)
   29924:	8027883a 	mov	r19,r16
   29928:	0028bac0 	call	28bac <_fflush_r>
   2992c:	103f6b26 	beq	r2,zero,296dc <__sfvwrite_r+0x200>
   29930:	003f7f06 	br	29730 <__sfvwrite_r+0x254>
   29934:	400b883a 	mov	r5,r8
   29938:	e009883a 	mov	r4,fp
   2993c:	002b7800 	call	2b780 <_realloc_r>
   29940:	103f7626 	beq	r2,zero,2971c <__sfvwrite_r+0x240>
   29944:	1023883a 	mov	r17,r2
   29948:	003f5006 	br	2968c <__sfvwrite_r+0x1b0>
   2994c:	00c00044 	movi	r3,1
   29950:	9d000044 	addi	r20,r19,1
   29954:	d8c00015 	stw	r3,0(sp)
   29958:	003f8206 	br	29764 <__sfvwrite_r+0x288>
   2995c:	9080030b 	ldhu	r2,12(r18)
   29960:	00c00244 	movi	r3,9
   29964:	013fffc4 	movi	r4,-1
   29968:	10801014 	ori	r2,r2,64
   2996c:	9080030d 	sth	r2,12(r18)
   29970:	e0c00015 	stw	r3,0(fp)
   29974:	003f0606 	br	29590 <__sfvwrite_r+0xb4>

00029978 <_fwalk_reent>:
   29978:	defff704 	addi	sp,sp,-36
   2997c:	dcc00315 	stw	r19,12(sp)
   29980:	24c0b804 	addi	r19,r4,736
   29984:	dd800615 	stw	r22,24(sp)
   29988:	dd400515 	stw	r21,20(sp)
   2998c:	dfc00815 	stw	ra,32(sp)
   29990:	ddc00715 	stw	r23,28(sp)
   29994:	dd000415 	stw	r20,16(sp)
   29998:	dc800215 	stw	r18,8(sp)
   2999c:	dc400115 	stw	r17,4(sp)
   299a0:	dc000015 	stw	r16,0(sp)
   299a4:	202b883a 	mov	r21,r4
   299a8:	282d883a 	mov	r22,r5
   299ac:	0028e340 	call	28e34 <__sfp_lock_acquire>
   299b0:	98002126 	beq	r19,zero,29a38 <_fwalk_reent+0xc0>
   299b4:	002f883a 	mov	r23,zero
   299b8:	9c800117 	ldw	r18,4(r19)
   299bc:	9c000217 	ldw	r16,8(r19)
   299c0:	90bfffc4 	addi	r2,r18,-1
   299c4:	10000d16 	blt	r2,zero,299fc <_fwalk_reent+0x84>
   299c8:	0023883a 	mov	r17,zero
   299cc:	053fffc4 	movi	r20,-1
   299d0:	8080030f 	ldh	r2,12(r16)
   299d4:	8c400044 	addi	r17,r17,1
   299d8:	10000626 	beq	r2,zero,299f4 <_fwalk_reent+0x7c>
   299dc:	8080038f 	ldh	r2,14(r16)
   299e0:	800b883a 	mov	r5,r16
   299e4:	a809883a 	mov	r4,r21
   299e8:	15000226 	beq	r2,r20,299f4 <_fwalk_reent+0x7c>
   299ec:	b03ee83a 	callr	r22
   299f0:	b8aeb03a 	or	r23,r23,r2
   299f4:	84001704 	addi	r16,r16,92
   299f8:	947ff51e 	bne	r18,r17,299d0 <_fwalk_reent+0x58>
   299fc:	9cc00017 	ldw	r19,0(r19)
   29a00:	983fed1e 	bne	r19,zero,299b8 <_fwalk_reent+0x40>
   29a04:	0028e380 	call	28e38 <__sfp_lock_release>
   29a08:	b805883a 	mov	r2,r23
   29a0c:	dfc00817 	ldw	ra,32(sp)
   29a10:	ddc00717 	ldw	r23,28(sp)
   29a14:	dd800617 	ldw	r22,24(sp)
   29a18:	dd400517 	ldw	r21,20(sp)
   29a1c:	dd000417 	ldw	r20,16(sp)
   29a20:	dcc00317 	ldw	r19,12(sp)
   29a24:	dc800217 	ldw	r18,8(sp)
   29a28:	dc400117 	ldw	r17,4(sp)
   29a2c:	dc000017 	ldw	r16,0(sp)
   29a30:	dec00904 	addi	sp,sp,36
   29a34:	f800283a 	ret
   29a38:	002f883a 	mov	r23,zero
   29a3c:	003ff106 	br	29a04 <_fwalk_reent+0x8c>

00029a40 <_fwalk>:
   29a40:	defff804 	addi	sp,sp,-32
   29a44:	dcc00315 	stw	r19,12(sp)
   29a48:	24c0b804 	addi	r19,r4,736
   29a4c:	dd400515 	stw	r21,20(sp)
   29a50:	dfc00715 	stw	ra,28(sp)
   29a54:	dd800615 	stw	r22,24(sp)
   29a58:	dd000415 	stw	r20,16(sp)
   29a5c:	dc800215 	stw	r18,8(sp)
   29a60:	dc400115 	stw	r17,4(sp)
   29a64:	dc000015 	stw	r16,0(sp)
   29a68:	282b883a 	mov	r21,r5
   29a6c:	0028e340 	call	28e34 <__sfp_lock_acquire>
   29a70:	98001f26 	beq	r19,zero,29af0 <_fwalk+0xb0>
   29a74:	002d883a 	mov	r22,zero
   29a78:	9c800117 	ldw	r18,4(r19)
   29a7c:	9c000217 	ldw	r16,8(r19)
   29a80:	90bfffc4 	addi	r2,r18,-1
   29a84:	10000c16 	blt	r2,zero,29ab8 <_fwalk+0x78>
   29a88:	0023883a 	mov	r17,zero
   29a8c:	053fffc4 	movi	r20,-1
   29a90:	8080030f 	ldh	r2,12(r16)
   29a94:	8c400044 	addi	r17,r17,1
   29a98:	10000526 	beq	r2,zero,29ab0 <_fwalk+0x70>
   29a9c:	8080038f 	ldh	r2,14(r16)
   29aa0:	8009883a 	mov	r4,r16
   29aa4:	15000226 	beq	r2,r20,29ab0 <_fwalk+0x70>
   29aa8:	a83ee83a 	callr	r21
   29aac:	b0acb03a 	or	r22,r22,r2
   29ab0:	84001704 	addi	r16,r16,92
   29ab4:	947ff61e 	bne	r18,r17,29a90 <_fwalk+0x50>
   29ab8:	9cc00017 	ldw	r19,0(r19)
   29abc:	983fee1e 	bne	r19,zero,29a78 <_fwalk+0x38>
   29ac0:	0028e380 	call	28e38 <__sfp_lock_release>
   29ac4:	b005883a 	mov	r2,r22
   29ac8:	dfc00717 	ldw	ra,28(sp)
   29acc:	dd800617 	ldw	r22,24(sp)
   29ad0:	dd400517 	ldw	r21,20(sp)
   29ad4:	dd000417 	ldw	r20,16(sp)
   29ad8:	dcc00317 	ldw	r19,12(sp)
   29adc:	dc800217 	ldw	r18,8(sp)
   29ae0:	dc400117 	ldw	r17,4(sp)
   29ae4:	dc000017 	ldw	r16,0(sp)
   29ae8:	dec00804 	addi	sp,sp,32
   29aec:	f800283a 	ret
   29af0:	002d883a 	mov	r22,zero
   29af4:	003ff206 	br	29ac0 <_fwalk+0x80>

00029af8 <__locale_charset>:
   29af8:	d0a01317 	ldw	r2,-32692(gp)
   29afc:	f800283a 	ret

00029b00 <_localeconv_r>:
   29b00:	008000f4 	movhi	r2,3
   29b04:	10bfb604 	addi	r2,r2,-296
   29b08:	f800283a 	ret

00029b0c <localeconv>:
   29b0c:	008000f4 	movhi	r2,3
   29b10:	1086af04 	addi	r2,r2,6844
   29b14:	11000017 	ldw	r4,0(r2)
   29b18:	0029b001 	jmpi	29b00 <_localeconv_r>

00029b1c <_setlocale_r>:
   29b1c:	defffc04 	addi	sp,sp,-16
   29b20:	00c000f4 	movhi	r3,3
   29b24:	18ff8c04 	addi	r3,r3,-464
   29b28:	dc800215 	stw	r18,8(sp)
   29b2c:	dc400115 	stw	r17,4(sp)
   29b30:	dc000015 	stw	r16,0(sp)
   29b34:	2023883a 	mov	r17,r4
   29b38:	2825883a 	mov	r18,r5
   29b3c:	dfc00315 	stw	ra,12(sp)
   29b40:	3021883a 	mov	r16,r6
   29b44:	3009883a 	mov	r4,r6
   29b48:	180b883a 	mov	r5,r3
   29b4c:	30000926 	beq	r6,zero,29b74 <_setlocale_r+0x58>
   29b50:	002bf700 	call	2bf70 <strcmp>
   29b54:	8009883a 	mov	r4,r16
   29b58:	014000f4 	movhi	r5,3
   29b5c:	297f9d04 	addi	r5,r5,-396
   29b60:	10000b1e 	bne	r2,zero,29b90 <_setlocale_r+0x74>
   29b64:	8c000d15 	stw	r16,52(r17)
   29b68:	8c800c15 	stw	r18,48(r17)
   29b6c:	00c000f4 	movhi	r3,3
   29b70:	18ff8c04 	addi	r3,r3,-464
   29b74:	1805883a 	mov	r2,r3
   29b78:	dfc00317 	ldw	ra,12(sp)
   29b7c:	dc800217 	ldw	r18,8(sp)
   29b80:	dc400117 	ldw	r17,4(sp)
   29b84:	dc000017 	ldw	r16,0(sp)
   29b88:	dec00404 	addi	sp,sp,16
   29b8c:	f800283a 	ret
   29b90:	002bf700 	call	2bf70 <strcmp>
   29b94:	0007883a 	mov	r3,zero
   29b98:	103ff226 	beq	r2,zero,29b64 <_setlocale_r+0x48>
   29b9c:	003ff506 	br	29b74 <_setlocale_r+0x58>

00029ba0 <setlocale>:
   29ba0:	018000f4 	movhi	r6,3
   29ba4:	3186af04 	addi	r6,r6,6844
   29ba8:	2007883a 	mov	r3,r4
   29bac:	31000017 	ldw	r4,0(r6)
   29bb0:	280d883a 	mov	r6,r5
   29bb4:	180b883a 	mov	r5,r3
   29bb8:	0029b1c1 	jmpi	29b1c <_setlocale_r>

00029bbc <__smakebuf_r>:
   29bbc:	2880030b 	ldhu	r2,12(r5)
   29bc0:	deffed04 	addi	sp,sp,-76
   29bc4:	dc401015 	stw	r17,64(sp)
   29bc8:	1080008c 	andi	r2,r2,2
   29bcc:	dc000f15 	stw	r16,60(sp)
   29bd0:	dfc01215 	stw	ra,72(sp)
   29bd4:	dc801115 	stw	r18,68(sp)
   29bd8:	2821883a 	mov	r16,r5
   29bdc:	2023883a 	mov	r17,r4
   29be0:	10000b26 	beq	r2,zero,29c10 <__smakebuf_r+0x54>
   29be4:	28c010c4 	addi	r3,r5,67
   29be8:	00800044 	movi	r2,1
   29bec:	28800515 	stw	r2,20(r5)
   29bf0:	28c00415 	stw	r3,16(r5)
   29bf4:	28c00015 	stw	r3,0(r5)
   29bf8:	dfc01217 	ldw	ra,72(sp)
   29bfc:	dc801117 	ldw	r18,68(sp)
   29c00:	dc401017 	ldw	r17,64(sp)
   29c04:	dc000f17 	ldw	r16,60(sp)
   29c08:	dec01304 	addi	sp,sp,76
   29c0c:	f800283a 	ret
   29c10:	2940038f 	ldh	r5,14(r5)
   29c14:	28002116 	blt	r5,zero,29c9c <__smakebuf_r+0xe0>
   29c18:	d80d883a 	mov	r6,sp
   29c1c:	002c2ec0 	call	2c2ec <_fstat_r>
   29c20:	10001e16 	blt	r2,zero,29c9c <__smakebuf_r+0xe0>
   29c24:	d8800117 	ldw	r2,4(sp)
   29c28:	00e00014 	movui	r3,32768
   29c2c:	113c000c 	andi	r4,r2,61440
   29c30:	20c03126 	beq	r4,r3,29cf8 <__smakebuf_r+0x13c>
   29c34:	8080030b 	ldhu	r2,12(r16)
   29c38:	00c80004 	movi	r3,8192
   29c3c:	10820014 	ori	r2,r2,2048
   29c40:	8080030d 	sth	r2,12(r16)
   29c44:	20c01e26 	beq	r4,r3,29cc0 <__smakebuf_r+0x104>
   29c48:	04810004 	movi	r18,1024
   29c4c:	8809883a 	mov	r4,r17
   29c50:	900b883a 	mov	r5,r18
   29c54:	0029d500 	call	29d50 <_malloc_r>
   29c58:	1009883a 	mov	r4,r2
   29c5c:	10003126 	beq	r2,zero,29d24 <__smakebuf_r+0x168>
   29c60:	80c0030b 	ldhu	r3,12(r16)
   29c64:	008000f4 	movhi	r2,3
   29c68:	10a3ca04 	addi	r2,r2,-28888
   29c6c:	88800f15 	stw	r2,60(r17)
   29c70:	18c02014 	ori	r3,r3,128
   29c74:	84800515 	stw	r18,20(r16)
   29c78:	80c0030d 	sth	r3,12(r16)
   29c7c:	81000415 	stw	r4,16(r16)
   29c80:	81000015 	stw	r4,0(r16)
   29c84:	dfc01217 	ldw	ra,72(sp)
   29c88:	dc801117 	ldw	r18,68(sp)
   29c8c:	dc401017 	ldw	r17,64(sp)
   29c90:	dc000f17 	ldw	r16,60(sp)
   29c94:	dec01304 	addi	sp,sp,76
   29c98:	f800283a 	ret
   29c9c:	80c0030b 	ldhu	r3,12(r16)
   29ca0:	1880200c 	andi	r2,r3,128
   29ca4:	10000426 	beq	r2,zero,29cb8 <__smakebuf_r+0xfc>
   29ca8:	04801004 	movi	r18,64
   29cac:	18820014 	ori	r2,r3,2048
   29cb0:	8080030d 	sth	r2,12(r16)
   29cb4:	003fe506 	br	29c4c <__smakebuf_r+0x90>
   29cb8:	04810004 	movi	r18,1024
   29cbc:	003ffb06 	br	29cac <__smakebuf_r+0xf0>
   29cc0:	8140038f 	ldh	r5,14(r16)
   29cc4:	8809883a 	mov	r4,r17
   29cc8:	002c3600 	call	2c360 <_isatty_r>
   29ccc:	103fde26 	beq	r2,zero,29c48 <__smakebuf_r+0x8c>
   29cd0:	8080030b 	ldhu	r2,12(r16)
   29cd4:	80c010c4 	addi	r3,r16,67
   29cd8:	04810004 	movi	r18,1024
   29cdc:	10800054 	ori	r2,r2,1
   29ce0:	8080030d 	sth	r2,12(r16)
   29ce4:	00800044 	movi	r2,1
   29ce8:	80c00415 	stw	r3,16(r16)
   29cec:	80800515 	stw	r2,20(r16)
   29cf0:	80c00015 	stw	r3,0(r16)
   29cf4:	003fd506 	br	29c4c <__smakebuf_r+0x90>
   29cf8:	80c00a17 	ldw	r3,40(r16)
   29cfc:	008000f4 	movhi	r2,3
   29d00:	10af8b04 	addi	r2,r2,-16852
   29d04:	18bfcb1e 	bne	r3,r2,29c34 <__smakebuf_r+0x78>
   29d08:	8080030b 	ldhu	r2,12(r16)
   29d0c:	00c10004 	movi	r3,1024
   29d10:	1825883a 	mov	r18,r3
   29d14:	10c4b03a 	or	r2,r2,r3
   29d18:	8080030d 	sth	r2,12(r16)
   29d1c:	80c01315 	stw	r3,76(r16)
   29d20:	003fca06 	br	29c4c <__smakebuf_r+0x90>
   29d24:	8100030b 	ldhu	r4,12(r16)
   29d28:	2080800c 	andi	r2,r4,512
   29d2c:	103fb21e 	bne	r2,zero,29bf8 <__smakebuf_r+0x3c>
   29d30:	80c010c4 	addi	r3,r16,67
   29d34:	21000094 	ori	r4,r4,2
   29d38:	00800044 	movi	r2,1
   29d3c:	80800515 	stw	r2,20(r16)
   29d40:	8100030d 	sth	r4,12(r16)
   29d44:	80c00415 	stw	r3,16(r16)
   29d48:	80c00015 	stw	r3,0(r16)
   29d4c:	003faa06 	br	29bf8 <__smakebuf_r+0x3c>

00029d50 <_malloc_r>:
   29d50:	defff604 	addi	sp,sp,-40
   29d54:	28c002c4 	addi	r3,r5,11
   29d58:	00800584 	movi	r2,22
   29d5c:	dc800215 	stw	r18,8(sp)
   29d60:	dfc00915 	stw	ra,36(sp)
   29d64:	df000815 	stw	fp,32(sp)
   29d68:	ddc00715 	stw	r23,28(sp)
   29d6c:	dd800615 	stw	r22,24(sp)
   29d70:	dd400515 	stw	r21,20(sp)
   29d74:	dd000415 	stw	r20,16(sp)
   29d78:	dcc00315 	stw	r19,12(sp)
   29d7c:	dc400115 	stw	r17,4(sp)
   29d80:	dc000015 	stw	r16,0(sp)
   29d84:	2025883a 	mov	r18,r4
   29d88:	10c01236 	bltu	r2,r3,29dd4 <_malloc_r+0x84>
   29d8c:	04400404 	movi	r17,16
   29d90:	8940142e 	bgeu	r17,r5,29de4 <_malloc_r+0x94>
   29d94:	00800304 	movi	r2,12
   29d98:	0007883a 	mov	r3,zero
   29d9c:	90800015 	stw	r2,0(r18)
   29da0:	1805883a 	mov	r2,r3
   29da4:	dfc00917 	ldw	ra,36(sp)
   29da8:	df000817 	ldw	fp,32(sp)
   29dac:	ddc00717 	ldw	r23,28(sp)
   29db0:	dd800617 	ldw	r22,24(sp)
   29db4:	dd400517 	ldw	r21,20(sp)
   29db8:	dd000417 	ldw	r20,16(sp)
   29dbc:	dcc00317 	ldw	r19,12(sp)
   29dc0:	dc800217 	ldw	r18,8(sp)
   29dc4:	dc400117 	ldw	r17,4(sp)
   29dc8:	dc000017 	ldw	r16,0(sp)
   29dcc:	dec00a04 	addi	sp,sp,40
   29dd0:	f800283a 	ret
   29dd4:	00bffe04 	movi	r2,-8
   29dd8:	18a2703a 	and	r17,r3,r2
   29ddc:	883fed16 	blt	r17,zero,29d94 <_malloc_r+0x44>
   29de0:	897fec36 	bltu	r17,r5,29d94 <_malloc_r+0x44>
   29de4:	9009883a 	mov	r4,r18
   29de8:	002d9b00 	call	2d9b0 <__malloc_lock>
   29dec:	00807dc4 	movi	r2,503
   29df0:	14402b2e 	bgeu	r2,r17,29ea0 <_malloc_r+0x150>
   29df4:	8806d27a 	srli	r3,r17,9
   29df8:	18003f1e 	bne	r3,zero,29ef8 <_malloc_r+0x1a8>
   29dfc:	880cd0fa 	srli	r6,r17,3
   29e00:	300490fa 	slli	r2,r6,3
   29e04:	02c000f4 	movhi	r11,3
   29e08:	5ac11b04 	addi	r11,r11,1132
   29e0c:	12cb883a 	add	r5,r2,r11
   29e10:	2c000317 	ldw	r16,12(r5)
   29e14:	580f883a 	mov	r7,r11
   29e18:	2c00041e 	bne	r5,r16,29e2c <_malloc_r+0xdc>
   29e1c:	00000a06 	br	29e48 <_malloc_r+0xf8>
   29e20:	1800860e 	bge	r3,zero,2a03c <_malloc_r+0x2ec>
   29e24:	84000317 	ldw	r16,12(r16)
   29e28:	2c000726 	beq	r5,r16,29e48 <_malloc_r+0xf8>
   29e2c:	80800117 	ldw	r2,4(r16)
   29e30:	00ffff04 	movi	r3,-4
   29e34:	10c8703a 	and	r4,r2,r3
   29e38:	2447c83a 	sub	r3,r4,r17
   29e3c:	008003c4 	movi	r2,15
   29e40:	10fff70e 	bge	r2,r3,29e20 <_malloc_r+0xd0>
   29e44:	31bfffc4 	addi	r6,r6,-1
   29e48:	32400044 	addi	r9,r6,1
   29e4c:	028000f4 	movhi	r10,3
   29e50:	52811d04 	addi	r10,r10,1140
   29e54:	54000217 	ldw	r16,8(r10)
   29e58:	8280a026 	beq	r16,r10,2a0dc <_malloc_r+0x38c>
   29e5c:	80800117 	ldw	r2,4(r16)
   29e60:	00ffff04 	movi	r3,-4
   29e64:	10ca703a 	and	r5,r2,r3
   29e68:	2c4dc83a 	sub	r6,r5,r17
   29e6c:	008003c4 	movi	r2,15
   29e70:	11808316 	blt	r2,r6,2a080 <_malloc_r+0x330>
   29e74:	52800315 	stw	r10,12(r10)
   29e78:	52800215 	stw	r10,8(r10)
   29e7c:	30002916 	blt	r6,zero,29f24 <_malloc_r+0x1d4>
   29e80:	8147883a 	add	r3,r16,r5
   29e84:	18800117 	ldw	r2,4(r3)
   29e88:	9009883a 	mov	r4,r18
   29e8c:	10800054 	ori	r2,r2,1
   29e90:	18800115 	stw	r2,4(r3)
   29e94:	002d9d00 	call	2d9d0 <__malloc_unlock>
   29e98:	80c00204 	addi	r3,r16,8
   29e9c:	003fc006 	br	29da0 <_malloc_r+0x50>
   29ea0:	02c000f4 	movhi	r11,3
   29ea4:	5ac11b04 	addi	r11,r11,1132
   29ea8:	8ac5883a 	add	r2,r17,r11
   29eac:	14000317 	ldw	r16,12(r2)
   29eb0:	580f883a 	mov	r7,r11
   29eb4:	8806d0fa 	srli	r3,r17,3
   29eb8:	14006c26 	beq	r2,r16,2a06c <_malloc_r+0x31c>
   29ebc:	80c00117 	ldw	r3,4(r16)
   29ec0:	00bfff04 	movi	r2,-4
   29ec4:	81800317 	ldw	r6,12(r16)
   29ec8:	1886703a 	and	r3,r3,r2
   29ecc:	80c7883a 	add	r3,r16,r3
   29ed0:	18800117 	ldw	r2,4(r3)
   29ed4:	81400217 	ldw	r5,8(r16)
   29ed8:	9009883a 	mov	r4,r18
   29edc:	10800054 	ori	r2,r2,1
   29ee0:	18800115 	stw	r2,4(r3)
   29ee4:	31400215 	stw	r5,8(r6)
   29ee8:	29800315 	stw	r6,12(r5)
   29eec:	002d9d00 	call	2d9d0 <__malloc_unlock>
   29ef0:	80c00204 	addi	r3,r16,8
   29ef4:	003faa06 	br	29da0 <_malloc_r+0x50>
   29ef8:	00800104 	movi	r2,4
   29efc:	10c0052e 	bgeu	r2,r3,29f14 <_malloc_r+0x1c4>
   29f00:	00800504 	movi	r2,20
   29f04:	10c07836 	bltu	r2,r3,2a0e8 <_malloc_r+0x398>
   29f08:	198016c4 	addi	r6,r3,91
   29f0c:	300490fa 	slli	r2,r6,3
   29f10:	003fbc06 	br	29e04 <_malloc_r+0xb4>
   29f14:	8804d1ba 	srli	r2,r17,6
   29f18:	11800e04 	addi	r6,r2,56
   29f1c:	300490fa 	slli	r2,r6,3
   29f20:	003fb806 	br	29e04 <_malloc_r+0xb4>
   29f24:	00807fc4 	movi	r2,511
   29f28:	1140bb36 	bltu	r2,r5,2a218 <_malloc_r+0x4c8>
   29f2c:	2806d0fa 	srli	r3,r5,3
   29f30:	573ffe04 	addi	fp,r10,-8
   29f34:	00800044 	movi	r2,1
   29f38:	180890fa 	slli	r4,r3,3
   29f3c:	1807d0ba 	srai	r3,r3,2
   29f40:	e1c00117 	ldw	r7,4(fp)
   29f44:	5909883a 	add	r4,r11,r4
   29f48:	21400217 	ldw	r5,8(r4)
   29f4c:	10c4983a 	sll	r2,r2,r3
   29f50:	81000315 	stw	r4,12(r16)
   29f54:	81400215 	stw	r5,8(r16)
   29f58:	388eb03a 	or	r7,r7,r2
   29f5c:	2c000315 	stw	r16,12(r5)
   29f60:	24000215 	stw	r16,8(r4)
   29f64:	e1c00115 	stw	r7,4(fp)
   29f68:	4807883a 	mov	r3,r9
   29f6c:	4800cd16 	blt	r9,zero,2a2a4 <_malloc_r+0x554>
   29f70:	1807d0ba 	srai	r3,r3,2
   29f74:	00800044 	movi	r2,1
   29f78:	10c8983a 	sll	r4,r2,r3
   29f7c:	39004436 	bltu	r7,r4,2a090 <_malloc_r+0x340>
   29f80:	21c4703a 	and	r2,r4,r7
   29f84:	10000a1e 	bne	r2,zero,29fb0 <_malloc_r+0x260>
   29f88:	2109883a 	add	r4,r4,r4
   29f8c:	00bfff04 	movi	r2,-4
   29f90:	4884703a 	and	r2,r9,r2
   29f94:	3906703a 	and	r3,r7,r4
   29f98:	12400104 	addi	r9,r2,4
   29f9c:	1800041e 	bne	r3,zero,29fb0 <_malloc_r+0x260>
   29fa0:	2109883a 	add	r4,r4,r4
   29fa4:	3904703a 	and	r2,r7,r4
   29fa8:	4a400104 	addi	r9,r9,4
   29fac:	103ffc26 	beq	r2,zero,29fa0 <_malloc_r+0x250>
   29fb0:	480490fa 	slli	r2,r9,3
   29fb4:	4819883a 	mov	r12,r9
   29fb8:	023fff04 	movi	r8,-4
   29fbc:	589b883a 	add	r13,r11,r2
   29fc0:	6807883a 	mov	r3,r13
   29fc4:	014003c4 	movi	r5,15
   29fc8:	1c000317 	ldw	r16,12(r3)
   29fcc:	1c00041e 	bne	r3,r16,29fe0 <_malloc_r+0x290>
   29fd0:	0000a706 	br	2a270 <_malloc_r+0x520>
   29fd4:	3000ab0e 	bge	r6,zero,2a284 <_malloc_r+0x534>
   29fd8:	84000317 	ldw	r16,12(r16)
   29fdc:	1c00a426 	beq	r3,r16,2a270 <_malloc_r+0x520>
   29fe0:	80800117 	ldw	r2,4(r16)
   29fe4:	1204703a 	and	r2,r2,r8
   29fe8:	144dc83a 	sub	r6,r2,r17
   29fec:	29bff90e 	bge	r5,r6,29fd4 <_malloc_r+0x284>
   29ff0:	81000317 	ldw	r4,12(r16)
   29ff4:	80c00217 	ldw	r3,8(r16)
   29ff8:	89400054 	ori	r5,r17,1
   29ffc:	8445883a 	add	r2,r16,r17
   2a000:	20c00215 	stw	r3,8(r4)
   2a004:	19000315 	stw	r4,12(r3)
   2a008:	81400115 	stw	r5,4(r16)
   2a00c:	1187883a 	add	r3,r2,r6
   2a010:	31000054 	ori	r4,r6,1
   2a014:	50800315 	stw	r2,12(r10)
   2a018:	50800215 	stw	r2,8(r10)
   2a01c:	19800015 	stw	r6,0(r3)
   2a020:	11000115 	stw	r4,4(r2)
   2a024:	12800215 	stw	r10,8(r2)
   2a028:	12800315 	stw	r10,12(r2)
   2a02c:	9009883a 	mov	r4,r18
   2a030:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2a034:	80c00204 	addi	r3,r16,8
   2a038:	003f5906 	br	29da0 <_malloc_r+0x50>
   2a03c:	8109883a 	add	r4,r16,r4
   2a040:	20800117 	ldw	r2,4(r4)
   2a044:	80c00217 	ldw	r3,8(r16)
   2a048:	81400317 	ldw	r5,12(r16)
   2a04c:	10800054 	ori	r2,r2,1
   2a050:	20800115 	stw	r2,4(r4)
   2a054:	28c00215 	stw	r3,8(r5)
   2a058:	19400315 	stw	r5,12(r3)
   2a05c:	9009883a 	mov	r4,r18
   2a060:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2a064:	80c00204 	addi	r3,r16,8
   2a068:	003f4d06 	br	29da0 <_malloc_r+0x50>
   2a06c:	80800204 	addi	r2,r16,8
   2a070:	14000317 	ldw	r16,12(r2)
   2a074:	143f911e 	bne	r2,r16,29ebc <_malloc_r+0x16c>
   2a078:	1a400084 	addi	r9,r3,2
   2a07c:	003f7306 	br	29e4c <_malloc_r+0xfc>
   2a080:	88c00054 	ori	r3,r17,1
   2a084:	8445883a 	add	r2,r16,r17
   2a088:	80c00115 	stw	r3,4(r16)
   2a08c:	003fdf06 	br	2a00c <_malloc_r+0x2bc>
   2a090:	e4000217 	ldw	r16,8(fp)
   2a094:	00bfff04 	movi	r2,-4
   2a098:	80c00117 	ldw	r3,4(r16)
   2a09c:	802d883a 	mov	r22,r16
   2a0a0:	18aa703a 	and	r21,r3,r2
   2a0a4:	ac401636 	bltu	r21,r17,2a100 <_malloc_r+0x3b0>
   2a0a8:	ac49c83a 	sub	r4,r21,r17
   2a0ac:	008003c4 	movi	r2,15
   2a0b0:	1100130e 	bge	r2,r4,2a100 <_malloc_r+0x3b0>
   2a0b4:	88800054 	ori	r2,r17,1
   2a0b8:	8447883a 	add	r3,r16,r17
   2a0bc:	80800115 	stw	r2,4(r16)
   2a0c0:	20800054 	ori	r2,r4,1
   2a0c4:	18800115 	stw	r2,4(r3)
   2a0c8:	e0c00215 	stw	r3,8(fp)
   2a0cc:	9009883a 	mov	r4,r18
   2a0d0:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2a0d4:	80c00204 	addi	r3,r16,8
   2a0d8:	003f3106 	br	29da0 <_malloc_r+0x50>
   2a0dc:	39c00117 	ldw	r7,4(r7)
   2a0e0:	573ffe04 	addi	fp,r10,-8
   2a0e4:	003fa006 	br	29f68 <_malloc_r+0x218>
   2a0e8:	00801504 	movi	r2,84
   2a0ec:	10c06736 	bltu	r2,r3,2a28c <_malloc_r+0x53c>
   2a0f0:	8804d33a 	srli	r2,r17,12
   2a0f4:	11801b84 	addi	r6,r2,110
   2a0f8:	300490fa 	slli	r2,r6,3
   2a0fc:	003f4106 	br	29e04 <_malloc_r+0xb4>
   2a100:	d0a6cb17 	ldw	r2,-25812(gp)
   2a104:	d0e01517 	ldw	r3,-32684(gp)
   2a108:	053fffc4 	movi	r20,-1
   2a10c:	10800404 	addi	r2,r2,16
   2a110:	88a7883a 	add	r19,r17,r2
   2a114:	1d000326 	beq	r3,r20,2a124 <_malloc_r+0x3d4>
   2a118:	98c3ffc4 	addi	r3,r19,4095
   2a11c:	00bc0004 	movi	r2,-4096
   2a120:	18a6703a 	and	r19,r3,r2
   2a124:	9009883a 	mov	r4,r18
   2a128:	980b883a 	mov	r5,r19
   2a12c:	002bdb40 	call	2bdb4 <_sbrk_r>
   2a130:	1009883a 	mov	r4,r2
   2a134:	15000426 	beq	r2,r20,2a148 <_malloc_r+0x3f8>
   2a138:	854b883a 	add	r5,r16,r21
   2a13c:	1029883a 	mov	r20,r2
   2a140:	11405a2e 	bgeu	r2,r5,2a2ac <_malloc_r+0x55c>
   2a144:	87000c26 	beq	r16,fp,2a178 <_malloc_r+0x428>
   2a148:	e4000217 	ldw	r16,8(fp)
   2a14c:	80c00117 	ldw	r3,4(r16)
   2a150:	00bfff04 	movi	r2,-4
   2a154:	1884703a 	and	r2,r3,r2
   2a158:	14400336 	bltu	r2,r17,2a168 <_malloc_r+0x418>
   2a15c:	1449c83a 	sub	r4,r2,r17
   2a160:	008003c4 	movi	r2,15
   2a164:	113fd316 	blt	r2,r4,2a0b4 <_malloc_r+0x364>
   2a168:	9009883a 	mov	r4,r18
   2a16c:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2a170:	0007883a 	mov	r3,zero
   2a174:	003f0a06 	br	29da0 <_malloc_r+0x50>
   2a178:	05c000f4 	movhi	r23,3
   2a17c:	bdcd7404 	addi	r23,r23,13776
   2a180:	b8800017 	ldw	r2,0(r23)
   2a184:	988d883a 	add	r6,r19,r2
   2a188:	b9800015 	stw	r6,0(r23)
   2a18c:	d0e01517 	ldw	r3,-32684(gp)
   2a190:	00bfffc4 	movi	r2,-1
   2a194:	18808e26 	beq	r3,r2,2a3d0 <_malloc_r+0x680>
   2a198:	2145c83a 	sub	r2,r4,r5
   2a19c:	3085883a 	add	r2,r6,r2
   2a1a0:	b8800015 	stw	r2,0(r23)
   2a1a4:	20c001cc 	andi	r3,r4,7
   2a1a8:	18005f1e 	bne	r3,zero,2a328 <_malloc_r+0x5d8>
   2a1ac:	000b883a 	mov	r5,zero
   2a1b0:	a4c5883a 	add	r2,r20,r19
   2a1b4:	1083ffcc 	andi	r2,r2,4095
   2a1b8:	00c40004 	movi	r3,4096
   2a1bc:	1887c83a 	sub	r3,r3,r2
   2a1c0:	28e7883a 	add	r19,r5,r3
   2a1c4:	9009883a 	mov	r4,r18
   2a1c8:	980b883a 	mov	r5,r19
   2a1cc:	002bdb40 	call	2bdb4 <_sbrk_r>
   2a1d0:	1007883a 	mov	r3,r2
   2a1d4:	00bfffc4 	movi	r2,-1
   2a1d8:	18807a26 	beq	r3,r2,2a3c4 <_malloc_r+0x674>
   2a1dc:	1d05c83a 	sub	r2,r3,r20
   2a1e0:	9885883a 	add	r2,r19,r2
   2a1e4:	10c00054 	ori	r3,r2,1
   2a1e8:	b8800017 	ldw	r2,0(r23)
   2a1ec:	a021883a 	mov	r16,r20
   2a1f0:	a0c00115 	stw	r3,4(r20)
   2a1f4:	9885883a 	add	r2,r19,r2
   2a1f8:	b8800015 	stw	r2,0(r23)
   2a1fc:	e5000215 	stw	r20,8(fp)
   2a200:	b7003626 	beq	r22,fp,2a2dc <_malloc_r+0x58c>
   2a204:	018003c4 	movi	r6,15
   2a208:	35404b36 	bltu	r6,r21,2a338 <_malloc_r+0x5e8>
   2a20c:	00800044 	movi	r2,1
   2a210:	a0800115 	stw	r2,4(r20)
   2a214:	003fcd06 	br	2a14c <_malloc_r+0x3fc>
   2a218:	2808d27a 	srli	r4,r5,9
   2a21c:	2000371e 	bne	r4,zero,2a2fc <_malloc_r+0x5ac>
   2a220:	2808d0fa 	srli	r4,r5,3
   2a224:	200690fa 	slli	r3,r4,3
   2a228:	1ad1883a 	add	r8,r3,r11
   2a22c:	41800217 	ldw	r6,8(r8)
   2a230:	41805b26 	beq	r8,r6,2a3a0 <_malloc_r+0x650>
   2a234:	30800117 	ldw	r2,4(r6)
   2a238:	00ffff04 	movi	r3,-4
   2a23c:	10c4703a 	and	r2,r2,r3
   2a240:	2880022e 	bgeu	r5,r2,2a24c <_malloc_r+0x4fc>
   2a244:	31800217 	ldw	r6,8(r6)
   2a248:	41bffa1e 	bne	r8,r6,2a234 <_malloc_r+0x4e4>
   2a24c:	32000317 	ldw	r8,12(r6)
   2a250:	39c00117 	ldw	r7,4(r7)
   2a254:	82000315 	stw	r8,12(r16)
   2a258:	81800215 	stw	r6,8(r16)
   2a25c:	070000f4 	movhi	fp,3
   2a260:	e7011b04 	addi	fp,fp,1132
   2a264:	34000315 	stw	r16,12(r6)
   2a268:	44000215 	stw	r16,8(r8)
   2a26c:	003f3e06 	br	29f68 <_malloc_r+0x218>
   2a270:	63000044 	addi	r12,r12,1
   2a274:	608000cc 	andi	r2,r12,3
   2a278:	10005d26 	beq	r2,zero,2a3f0 <_malloc_r+0x6a0>
   2a27c:	18c00204 	addi	r3,r3,8
   2a280:	003f5106 	br	29fc8 <_malloc_r+0x278>
   2a284:	8089883a 	add	r4,r16,r2
   2a288:	003f6d06 	br	2a040 <_malloc_r+0x2f0>
   2a28c:	00805504 	movi	r2,340
   2a290:	10c02036 	bltu	r2,r3,2a314 <_malloc_r+0x5c4>
   2a294:	8804d3fa 	srli	r2,r17,15
   2a298:	11801dc4 	addi	r6,r2,119
   2a29c:	300490fa 	slli	r2,r6,3
   2a2a0:	003ed806 	br	29e04 <_malloc_r+0xb4>
   2a2a4:	48c000c4 	addi	r3,r9,3
   2a2a8:	003f3106 	br	29f70 <_malloc_r+0x220>
   2a2ac:	05c000f4 	movhi	r23,3
   2a2b0:	bdcd7404 	addi	r23,r23,13776
   2a2b4:	b8800017 	ldw	r2,0(r23)
   2a2b8:	988d883a 	add	r6,r19,r2
   2a2bc:	b9800015 	stw	r6,0(r23)
   2a2c0:	293fb21e 	bne	r5,r4,2a18c <_malloc_r+0x43c>
   2a2c4:	2083ffcc 	andi	r2,r4,4095
   2a2c8:	103fb01e 	bne	r2,zero,2a18c <_malloc_r+0x43c>
   2a2cc:	e4000217 	ldw	r16,8(fp)
   2a2d0:	9d45883a 	add	r2,r19,r21
   2a2d4:	10800054 	ori	r2,r2,1
   2a2d8:	80800115 	stw	r2,4(r16)
   2a2dc:	b8c00017 	ldw	r3,0(r23)
   2a2e0:	d0a6cc17 	ldw	r2,-25808(gp)
   2a2e4:	10c0012e 	bgeu	r2,r3,2a2ec <_malloc_r+0x59c>
   2a2e8:	d0e6cc15 	stw	r3,-25808(gp)
   2a2ec:	d0a6cd17 	ldw	r2,-25804(gp)
   2a2f0:	10ff962e 	bgeu	r2,r3,2a14c <_malloc_r+0x3fc>
   2a2f4:	d0e6cd15 	stw	r3,-25804(gp)
   2a2f8:	003f9406 	br	2a14c <_malloc_r+0x3fc>
   2a2fc:	00800104 	movi	r2,4
   2a300:	11001e36 	bltu	r2,r4,2a37c <_malloc_r+0x62c>
   2a304:	2804d1ba 	srli	r2,r5,6
   2a308:	11000e04 	addi	r4,r2,56
   2a30c:	200690fa 	slli	r3,r4,3
   2a310:	003fc506 	br	2a228 <_malloc_r+0x4d8>
   2a314:	00815504 	movi	r2,1364
   2a318:	10c01d2e 	bgeu	r2,r3,2a390 <_malloc_r+0x640>
   2a31c:	01801f84 	movi	r6,126
   2a320:	0080fc04 	movi	r2,1008
   2a324:	003eb706 	br	29e04 <_malloc_r+0xb4>
   2a328:	00800204 	movi	r2,8
   2a32c:	10cbc83a 	sub	r5,r2,r3
   2a330:	2169883a 	add	r20,r4,r5
   2a334:	003f9e06 	br	2a1b0 <_malloc_r+0x460>
   2a338:	00bffe04 	movi	r2,-8
   2a33c:	a93ffd04 	addi	r4,r21,-12
   2a340:	2088703a 	and	r4,r4,r2
   2a344:	b10b883a 	add	r5,r22,r4
   2a348:	00c00144 	movi	r3,5
   2a34c:	28c00215 	stw	r3,8(r5)
   2a350:	28c00115 	stw	r3,4(r5)
   2a354:	b0800117 	ldw	r2,4(r22)
   2a358:	1080004c 	andi	r2,r2,1
   2a35c:	2084b03a 	or	r2,r4,r2
   2a360:	b0800115 	stw	r2,4(r22)
   2a364:	313fdd2e 	bgeu	r6,r4,2a2dc <_malloc_r+0x58c>
   2a368:	b1400204 	addi	r5,r22,8
   2a36c:	9009883a 	mov	r4,r18
   2a370:	00291c80 	call	291c8 <_free_r>
   2a374:	e4000217 	ldw	r16,8(fp)
   2a378:	003fd806 	br	2a2dc <_malloc_r+0x58c>
   2a37c:	00800504 	movi	r2,20
   2a380:	11001536 	bltu	r2,r4,2a3d8 <_malloc_r+0x688>
   2a384:	210016c4 	addi	r4,r4,91
   2a388:	200690fa 	slli	r3,r4,3
   2a38c:	003fa606 	br	2a228 <_malloc_r+0x4d8>
   2a390:	8804d4ba 	srli	r2,r17,18
   2a394:	11801f04 	addi	r6,r2,124
   2a398:	300490fa 	slli	r2,r6,3
   2a39c:	003e9906 	br	29e04 <_malloc_r+0xb4>
   2a3a0:	2009d0ba 	srai	r4,r4,2
   2a3a4:	014000f4 	movhi	r5,3
   2a3a8:	29411b04 	addi	r5,r5,1132
   2a3ac:	00c00044 	movi	r3,1
   2a3b0:	28800117 	ldw	r2,4(r5)
   2a3b4:	1906983a 	sll	r3,r3,r4
   2a3b8:	10c4b03a 	or	r2,r2,r3
   2a3bc:	28800115 	stw	r2,4(r5)
   2a3c0:	003fa306 	br	2a250 <_malloc_r+0x500>
   2a3c4:	0027883a 	mov	r19,zero
   2a3c8:	00c00044 	movi	r3,1
   2a3cc:	003f8606 	br	2a1e8 <_malloc_r+0x498>
   2a3d0:	d1201515 	stw	r4,-32684(gp)
   2a3d4:	003f7306 	br	2a1a4 <_malloc_r+0x454>
   2a3d8:	00801504 	movi	r2,84
   2a3dc:	11001936 	bltu	r2,r4,2a444 <_malloc_r+0x6f4>
   2a3e0:	2804d33a 	srli	r2,r5,12
   2a3e4:	11001b84 	addi	r4,r2,110
   2a3e8:	200690fa 	slli	r3,r4,3
   2a3ec:	003f8e06 	br	2a228 <_malloc_r+0x4d8>
   2a3f0:	480b883a 	mov	r5,r9
   2a3f4:	6807883a 	mov	r3,r13
   2a3f8:	288000cc 	andi	r2,r5,3
   2a3fc:	18fffe04 	addi	r3,r3,-8
   2a400:	297fffc4 	addi	r5,r5,-1
   2a404:	10001526 	beq	r2,zero,2a45c <_malloc_r+0x70c>
   2a408:	18800217 	ldw	r2,8(r3)
   2a40c:	10fffa26 	beq	r2,r3,2a3f8 <_malloc_r+0x6a8>
   2a410:	2109883a 	add	r4,r4,r4
   2a414:	393f1e36 	bltu	r7,r4,2a090 <_malloc_r+0x340>
   2a418:	203f1d26 	beq	r4,zero,2a090 <_malloc_r+0x340>
   2a41c:	21c4703a 	and	r2,r4,r7
   2a420:	10000226 	beq	r2,zero,2a42c <_malloc_r+0x6dc>
   2a424:	6013883a 	mov	r9,r12
   2a428:	003ee106 	br	29fb0 <_malloc_r+0x260>
   2a42c:	2109883a 	add	r4,r4,r4
   2a430:	3904703a 	and	r2,r7,r4
   2a434:	63000104 	addi	r12,r12,4
   2a438:	103ffc26 	beq	r2,zero,2a42c <_malloc_r+0x6dc>
   2a43c:	6013883a 	mov	r9,r12
   2a440:	003edb06 	br	29fb0 <_malloc_r+0x260>
   2a444:	00805504 	movi	r2,340
   2a448:	11000836 	bltu	r2,r4,2a46c <_malloc_r+0x71c>
   2a44c:	2804d3fa 	srli	r2,r5,15
   2a450:	11001dc4 	addi	r4,r2,119
   2a454:	200690fa 	slli	r3,r4,3
   2a458:	003f7306 	br	2a228 <_malloc_r+0x4d8>
   2a45c:	0104303a 	nor	r2,zero,r4
   2a460:	388e703a 	and	r7,r7,r2
   2a464:	e1c00115 	stw	r7,4(fp)
   2a468:	003fe906 	br	2a410 <_malloc_r+0x6c0>
   2a46c:	00815504 	movi	r2,1364
   2a470:	1100032e 	bgeu	r2,r4,2a480 <_malloc_r+0x730>
   2a474:	01001f84 	movi	r4,126
   2a478:	00c0fc04 	movi	r3,1008
   2a47c:	003f6a06 	br	2a228 <_malloc_r+0x4d8>
   2a480:	2804d4ba 	srli	r2,r5,18
   2a484:	11001f04 	addi	r4,r2,124
   2a488:	200690fa 	slli	r3,r4,3
   2a48c:	003f6606 	br	2a228 <_malloc_r+0x4d8>

0002a490 <memchr>:
   2a490:	008000c4 	movi	r2,3
   2a494:	29403fcc 	andi	r5,r5,255
   2a498:	2007883a 	mov	r3,r4
   2a49c:	1180022e 	bgeu	r2,r6,2a4a8 <memchr+0x18>
   2a4a0:	2084703a 	and	r2,r4,r2
   2a4a4:	10000b26 	beq	r2,zero,2a4d4 <memchr+0x44>
   2a4a8:	313fffc4 	addi	r4,r6,-1
   2a4ac:	3000051e 	bne	r6,zero,2a4c4 <memchr+0x34>
   2a4b0:	00002c06 	br	2a564 <memchr+0xd4>
   2a4b4:	213fffc4 	addi	r4,r4,-1
   2a4b8:	00bfffc4 	movi	r2,-1
   2a4bc:	18c00044 	addi	r3,r3,1
   2a4c0:	20802826 	beq	r4,r2,2a564 <memchr+0xd4>
   2a4c4:	18800003 	ldbu	r2,0(r3)
   2a4c8:	28bffa1e 	bne	r5,r2,2a4b4 <memchr+0x24>
   2a4cc:	1805883a 	mov	r2,r3
   2a4d0:	f800283a 	ret
   2a4d4:	0011883a 	mov	r8,zero
   2a4d8:	0007883a 	mov	r3,zero
   2a4dc:	01c00104 	movi	r7,4
   2a4e0:	4004923a 	slli	r2,r8,8
   2a4e4:	18c00044 	addi	r3,r3,1
   2a4e8:	1151883a 	add	r8,r2,r5
   2a4ec:	19fffc1e 	bne	r3,r7,2a4e0 <memchr+0x50>
   2a4f0:	02bfbff4 	movhi	r10,65279
   2a4f4:	52bfbfc4 	addi	r10,r10,-257
   2a4f8:	02602074 	movhi	r9,32897
   2a4fc:	4a602004 	addi	r9,r9,-32640
   2a500:	02c000c4 	movi	r11,3
   2a504:	20800017 	ldw	r2,0(r4)
   2a508:	31bfff04 	addi	r6,r6,-4
   2a50c:	200f883a 	mov	r7,r4
   2a510:	1204f03a 	xor	r2,r2,r8
   2a514:	1287883a 	add	r3,r2,r10
   2a518:	1a46703a 	and	r3,r3,r9
   2a51c:	0084303a 	nor	r2,zero,r2
   2a520:	10c4703a 	and	r2,r2,r3
   2a524:	10000b26 	beq	r2,zero,2a554 <memchr+0xc4>
   2a528:	20800003 	ldbu	r2,0(r4)
   2a52c:	28800f26 	beq	r5,r2,2a56c <memchr+0xdc>
   2a530:	20800043 	ldbu	r2,1(r4)
   2a534:	21c00044 	addi	r7,r4,1
   2a538:	28800c26 	beq	r5,r2,2a56c <memchr+0xdc>
   2a53c:	20800083 	ldbu	r2,2(r4)
   2a540:	21c00084 	addi	r7,r4,2
   2a544:	28800926 	beq	r5,r2,2a56c <memchr+0xdc>
   2a548:	208000c3 	ldbu	r2,3(r4)
   2a54c:	21c000c4 	addi	r7,r4,3
   2a550:	28800626 	beq	r5,r2,2a56c <memchr+0xdc>
   2a554:	21000104 	addi	r4,r4,4
   2a558:	59bfea36 	bltu	r11,r6,2a504 <memchr+0x74>
   2a55c:	2007883a 	mov	r3,r4
   2a560:	003fd106 	br	2a4a8 <memchr+0x18>
   2a564:	0005883a 	mov	r2,zero
   2a568:	f800283a 	ret
   2a56c:	3805883a 	mov	r2,r7
   2a570:	f800283a 	ret

0002a574 <memcpy>:
   2a574:	01c003c4 	movi	r7,15
   2a578:	2007883a 	mov	r3,r4
   2a57c:	3980032e 	bgeu	r7,r6,2a58c <memcpy+0x18>
   2a580:	2904b03a 	or	r2,r5,r4
   2a584:	108000cc 	andi	r2,r2,3
   2a588:	10000926 	beq	r2,zero,2a5b0 <memcpy+0x3c>
   2a58c:	30000626 	beq	r6,zero,2a5a8 <memcpy+0x34>
   2a590:	30cd883a 	add	r6,r6,r3
   2a594:	28800003 	ldbu	r2,0(r5)
   2a598:	29400044 	addi	r5,r5,1
   2a59c:	18800005 	stb	r2,0(r3)
   2a5a0:	18c00044 	addi	r3,r3,1
   2a5a4:	30fffb1e 	bne	r6,r3,2a594 <memcpy+0x20>
   2a5a8:	2005883a 	mov	r2,r4
   2a5ac:	f800283a 	ret
   2a5b0:	3811883a 	mov	r8,r7
   2a5b4:	200f883a 	mov	r7,r4
   2a5b8:	28c00017 	ldw	r3,0(r5)
   2a5bc:	31bffc04 	addi	r6,r6,-16
   2a5c0:	38c00015 	stw	r3,0(r7)
   2a5c4:	28800117 	ldw	r2,4(r5)
   2a5c8:	38800115 	stw	r2,4(r7)
   2a5cc:	28c00217 	ldw	r3,8(r5)
   2a5d0:	38c00215 	stw	r3,8(r7)
   2a5d4:	28800317 	ldw	r2,12(r5)
   2a5d8:	29400404 	addi	r5,r5,16
   2a5dc:	38800315 	stw	r2,12(r7)
   2a5e0:	39c00404 	addi	r7,r7,16
   2a5e4:	41bff436 	bltu	r8,r6,2a5b8 <memcpy+0x44>
   2a5e8:	008000c4 	movi	r2,3
   2a5ec:	1180072e 	bgeu	r2,r6,2a60c <memcpy+0x98>
   2a5f0:	1007883a 	mov	r3,r2
   2a5f4:	28800017 	ldw	r2,0(r5)
   2a5f8:	31bfff04 	addi	r6,r6,-4
   2a5fc:	29400104 	addi	r5,r5,4
   2a600:	38800015 	stw	r2,0(r7)
   2a604:	39c00104 	addi	r7,r7,4
   2a608:	19bffa36 	bltu	r3,r6,2a5f4 <memcpy+0x80>
   2a60c:	3807883a 	mov	r3,r7
   2a610:	003fde06 	br	2a58c <memcpy+0x18>

0002a614 <memmove>:
   2a614:	2807883a 	mov	r3,r5
   2a618:	2011883a 	mov	r8,r4
   2a61c:	29000c2e 	bgeu	r5,r4,2a650 <memmove+0x3c>
   2a620:	298f883a 	add	r7,r5,r6
   2a624:	21c00a2e 	bgeu	r4,r7,2a650 <memmove+0x3c>
   2a628:	30000726 	beq	r6,zero,2a648 <memmove+0x34>
   2a62c:	2187883a 	add	r3,r4,r6
   2a630:	198dc83a 	sub	r6,r3,r6
   2a634:	39ffffc4 	addi	r7,r7,-1
   2a638:	38800003 	ldbu	r2,0(r7)
   2a63c:	18ffffc4 	addi	r3,r3,-1
   2a640:	18800005 	stb	r2,0(r3)
   2a644:	19bffb1e 	bne	r3,r6,2a634 <memmove+0x20>
   2a648:	2005883a 	mov	r2,r4
   2a64c:	f800283a 	ret
   2a650:	01c003c4 	movi	r7,15
   2a654:	39800a36 	bltu	r7,r6,2a680 <memmove+0x6c>
   2a658:	303ffb26 	beq	r6,zero,2a648 <memmove+0x34>
   2a65c:	400f883a 	mov	r7,r8
   2a660:	320d883a 	add	r6,r6,r8
   2a664:	28800003 	ldbu	r2,0(r5)
   2a668:	29400044 	addi	r5,r5,1
   2a66c:	38800005 	stb	r2,0(r7)
   2a670:	39c00044 	addi	r7,r7,1
   2a674:	39bffb1e 	bne	r7,r6,2a664 <memmove+0x50>
   2a678:	2005883a 	mov	r2,r4
   2a67c:	f800283a 	ret
   2a680:	1904b03a 	or	r2,r3,r4
   2a684:	108000cc 	andi	r2,r2,3
   2a688:	103ff31e 	bne	r2,zero,2a658 <memmove+0x44>
   2a68c:	3811883a 	mov	r8,r7
   2a690:	180b883a 	mov	r5,r3
   2a694:	200f883a 	mov	r7,r4
   2a698:	28c00017 	ldw	r3,0(r5)
   2a69c:	31bffc04 	addi	r6,r6,-16
   2a6a0:	38c00015 	stw	r3,0(r7)
   2a6a4:	28800117 	ldw	r2,4(r5)
   2a6a8:	38800115 	stw	r2,4(r7)
   2a6ac:	28c00217 	ldw	r3,8(r5)
   2a6b0:	38c00215 	stw	r3,8(r7)
   2a6b4:	28800317 	ldw	r2,12(r5)
   2a6b8:	29400404 	addi	r5,r5,16
   2a6bc:	38800315 	stw	r2,12(r7)
   2a6c0:	39c00404 	addi	r7,r7,16
   2a6c4:	41bff436 	bltu	r8,r6,2a698 <memmove+0x84>
   2a6c8:	008000c4 	movi	r2,3
   2a6cc:	1180072e 	bgeu	r2,r6,2a6ec <memmove+0xd8>
   2a6d0:	1007883a 	mov	r3,r2
   2a6d4:	28800017 	ldw	r2,0(r5)
   2a6d8:	31bfff04 	addi	r6,r6,-4
   2a6dc:	29400104 	addi	r5,r5,4
   2a6e0:	38800015 	stw	r2,0(r7)
   2a6e4:	39c00104 	addi	r7,r7,4
   2a6e8:	19bffa36 	bltu	r3,r6,2a6d4 <memmove+0xc0>
   2a6ec:	3811883a 	mov	r8,r7
   2a6f0:	003fd906 	br	2a658 <memmove+0x44>

0002a6f4 <memset>:
   2a6f4:	008000c4 	movi	r2,3
   2a6f8:	29403fcc 	andi	r5,r5,255
   2a6fc:	2007883a 	mov	r3,r4
   2a700:	1180022e 	bgeu	r2,r6,2a70c <memset+0x18>
   2a704:	2084703a 	and	r2,r4,r2
   2a708:	10000826 	beq	r2,zero,2a72c <memset+0x38>
   2a70c:	30000526 	beq	r6,zero,2a724 <memset+0x30>
   2a710:	2805883a 	mov	r2,r5
   2a714:	30cd883a 	add	r6,r6,r3
   2a718:	18800005 	stb	r2,0(r3)
   2a71c:	18c00044 	addi	r3,r3,1
   2a720:	19bffd1e 	bne	r3,r6,2a718 <memset+0x24>
   2a724:	2005883a 	mov	r2,r4
   2a728:	f800283a 	ret
   2a72c:	2804923a 	slli	r2,r5,8
   2a730:	020003c4 	movi	r8,15
   2a734:	200f883a 	mov	r7,r4
   2a738:	2884b03a 	or	r2,r5,r2
   2a73c:	1006943a 	slli	r3,r2,16
   2a740:	10c6b03a 	or	r3,r2,r3
   2a744:	41800a2e 	bgeu	r8,r6,2a770 <memset+0x7c>
   2a748:	4005883a 	mov	r2,r8
   2a74c:	31bffc04 	addi	r6,r6,-16
   2a750:	38c00015 	stw	r3,0(r7)
   2a754:	38c00115 	stw	r3,4(r7)
   2a758:	38c00215 	stw	r3,8(r7)
   2a75c:	38c00315 	stw	r3,12(r7)
   2a760:	39c00404 	addi	r7,r7,16
   2a764:	11bff936 	bltu	r2,r6,2a74c <memset+0x58>
   2a768:	008000c4 	movi	r2,3
   2a76c:	1180052e 	bgeu	r2,r6,2a784 <memset+0x90>
   2a770:	31bfff04 	addi	r6,r6,-4
   2a774:	008000c4 	movi	r2,3
   2a778:	38c00015 	stw	r3,0(r7)
   2a77c:	39c00104 	addi	r7,r7,4
   2a780:	11bffb36 	bltu	r2,r6,2a770 <memset+0x7c>
   2a784:	3807883a 	mov	r3,r7
   2a788:	003fe006 	br	2a70c <memset+0x18>

0002a78c <_Bfree>:
   2a78c:	28000826 	beq	r5,zero,2a7b0 <_Bfree+0x24>
   2a790:	28800117 	ldw	r2,4(r5)
   2a794:	21001317 	ldw	r4,76(r4)
   2a798:	1085883a 	add	r2,r2,r2
   2a79c:	1085883a 	add	r2,r2,r2
   2a7a0:	1105883a 	add	r2,r2,r4
   2a7a4:	10c00017 	ldw	r3,0(r2)
   2a7a8:	28c00015 	stw	r3,0(r5)
   2a7ac:	11400015 	stw	r5,0(r2)
   2a7b0:	f800283a 	ret

0002a7b4 <__hi0bits>:
   2a7b4:	20bfffec 	andhi	r2,r4,65535
   2a7b8:	10001426 	beq	r2,zero,2a80c <__hi0bits+0x58>
   2a7bc:	0007883a 	mov	r3,zero
   2a7c0:	20bfc02c 	andhi	r2,r4,65280
   2a7c4:	1000021e 	bne	r2,zero,2a7d0 <__hi0bits+0x1c>
   2a7c8:	2008923a 	slli	r4,r4,8
   2a7cc:	18c00204 	addi	r3,r3,8
   2a7d0:	20bc002c 	andhi	r2,r4,61440
   2a7d4:	1000021e 	bne	r2,zero,2a7e0 <__hi0bits+0x2c>
   2a7d8:	2008913a 	slli	r4,r4,4
   2a7dc:	18c00104 	addi	r3,r3,4
   2a7e0:	20b0002c 	andhi	r2,r4,49152
   2a7e4:	1000031e 	bne	r2,zero,2a7f4 <__hi0bits+0x40>
   2a7e8:	2105883a 	add	r2,r4,r4
   2a7ec:	18c00084 	addi	r3,r3,2
   2a7f0:	1089883a 	add	r4,r2,r2
   2a7f4:	20000316 	blt	r4,zero,2a804 <__hi0bits+0x50>
   2a7f8:	2090002c 	andhi	r2,r4,16384
   2a7fc:	10000626 	beq	r2,zero,2a818 <__hi0bits+0x64>
   2a800:	18c00044 	addi	r3,r3,1
   2a804:	1805883a 	mov	r2,r3
   2a808:	f800283a 	ret
   2a80c:	2008943a 	slli	r4,r4,16
   2a810:	00c00404 	movi	r3,16
   2a814:	003fea06 	br	2a7c0 <__hi0bits+0xc>
   2a818:	00c00804 	movi	r3,32
   2a81c:	1805883a 	mov	r2,r3
   2a820:	f800283a 	ret

0002a824 <__lo0bits>:
   2a824:	20c00017 	ldw	r3,0(r4)
   2a828:	188001cc 	andi	r2,r3,7
   2a82c:	10000a26 	beq	r2,zero,2a858 <__lo0bits+0x34>
   2a830:	1880004c 	andi	r2,r3,1
   2a834:	1005003a 	cmpeq	r2,r2,zero
   2a838:	10002126 	beq	r2,zero,2a8c0 <__lo0bits+0x9c>
   2a83c:	1880008c 	andi	r2,r3,2
   2a840:	1000251e 	bne	r2,zero,2a8d8 <__lo0bits+0xb4>
   2a844:	1804d0ba 	srli	r2,r3,2
   2a848:	01400084 	movi	r5,2
   2a84c:	20800015 	stw	r2,0(r4)
   2a850:	2805883a 	mov	r2,r5
   2a854:	f800283a 	ret
   2a858:	18bfffcc 	andi	r2,r3,65535
   2a85c:	10001526 	beq	r2,zero,2a8b4 <__lo0bits+0x90>
   2a860:	000b883a 	mov	r5,zero
   2a864:	18803fcc 	andi	r2,r3,255
   2a868:	1000021e 	bne	r2,zero,2a874 <__lo0bits+0x50>
   2a86c:	1806d23a 	srli	r3,r3,8
   2a870:	29400204 	addi	r5,r5,8
   2a874:	188003cc 	andi	r2,r3,15
   2a878:	1000021e 	bne	r2,zero,2a884 <__lo0bits+0x60>
   2a87c:	1806d13a 	srli	r3,r3,4
   2a880:	29400104 	addi	r5,r5,4
   2a884:	188000cc 	andi	r2,r3,3
   2a888:	1000021e 	bne	r2,zero,2a894 <__lo0bits+0x70>
   2a88c:	1806d0ba 	srli	r3,r3,2
   2a890:	29400084 	addi	r5,r5,2
   2a894:	1880004c 	andi	r2,r3,1
   2a898:	1000031e 	bne	r2,zero,2a8a8 <__lo0bits+0x84>
   2a89c:	1806d07a 	srli	r3,r3,1
   2a8a0:	18000a26 	beq	r3,zero,2a8cc <__lo0bits+0xa8>
   2a8a4:	29400044 	addi	r5,r5,1
   2a8a8:	2805883a 	mov	r2,r5
   2a8ac:	20c00015 	stw	r3,0(r4)
   2a8b0:	f800283a 	ret
   2a8b4:	1806d43a 	srli	r3,r3,16
   2a8b8:	01400404 	movi	r5,16
   2a8bc:	003fe906 	br	2a864 <__lo0bits+0x40>
   2a8c0:	000b883a 	mov	r5,zero
   2a8c4:	2805883a 	mov	r2,r5
   2a8c8:	f800283a 	ret
   2a8cc:	01400804 	movi	r5,32
   2a8d0:	2805883a 	mov	r2,r5
   2a8d4:	f800283a 	ret
   2a8d8:	1804d07a 	srli	r2,r3,1
   2a8dc:	01400044 	movi	r5,1
   2a8e0:	20800015 	stw	r2,0(r4)
   2a8e4:	003fda06 	br	2a850 <__lo0bits+0x2c>

0002a8e8 <__mcmp>:
   2a8e8:	20800417 	ldw	r2,16(r4)
   2a8ec:	28c00417 	ldw	r3,16(r5)
   2a8f0:	10cfc83a 	sub	r7,r2,r3
   2a8f4:	38000c1e 	bne	r7,zero,2a928 <__mcmp+0x40>
   2a8f8:	18c5883a 	add	r2,r3,r3
   2a8fc:	1085883a 	add	r2,r2,r2
   2a900:	10c00504 	addi	r3,r2,20
   2a904:	21000504 	addi	r4,r4,20
   2a908:	28cb883a 	add	r5,r5,r3
   2a90c:	2085883a 	add	r2,r4,r2
   2a910:	10bfff04 	addi	r2,r2,-4
   2a914:	297fff04 	addi	r5,r5,-4
   2a918:	11800017 	ldw	r6,0(r2)
   2a91c:	28c00017 	ldw	r3,0(r5)
   2a920:	30c0031e 	bne	r6,r3,2a930 <__mcmp+0x48>
   2a924:	20bffa36 	bltu	r4,r2,2a910 <__mcmp+0x28>
   2a928:	3805883a 	mov	r2,r7
   2a92c:	f800283a 	ret
   2a930:	30c00336 	bltu	r6,r3,2a940 <__mcmp+0x58>
   2a934:	01c00044 	movi	r7,1
   2a938:	3805883a 	mov	r2,r7
   2a93c:	f800283a 	ret
   2a940:	01ffffc4 	movi	r7,-1
   2a944:	003ff806 	br	2a928 <__mcmp+0x40>

0002a948 <__ulp>:
   2a948:	295ffc2c 	andhi	r5,r5,32752
   2a94c:	013f3034 	movhi	r4,64704
   2a950:	290b883a 	add	r5,r5,r4
   2a954:	0145c83a 	sub	r2,zero,r5
   2a958:	1007d53a 	srai	r3,r2,20
   2a95c:	000d883a 	mov	r6,zero
   2a960:	0140040e 	bge	zero,r5,2a974 <__ulp+0x2c>
   2a964:	280f883a 	mov	r7,r5
   2a968:	3807883a 	mov	r3,r7
   2a96c:	3005883a 	mov	r2,r6
   2a970:	f800283a 	ret
   2a974:	008004c4 	movi	r2,19
   2a978:	193ffb04 	addi	r4,r3,-20
   2a97c:	10c00c0e 	bge	r2,r3,2a9b0 <__ulp+0x68>
   2a980:	008007c4 	movi	r2,31
   2a984:	1107c83a 	sub	r3,r2,r4
   2a988:	00800784 	movi	r2,30
   2a98c:	01400044 	movi	r5,1
   2a990:	11000216 	blt	r2,r4,2a99c <__ulp+0x54>
   2a994:	00800044 	movi	r2,1
   2a998:	10ca983a 	sll	r5,r2,r3
   2a99c:	000f883a 	mov	r7,zero
   2a9a0:	280d883a 	mov	r6,r5
   2a9a4:	3807883a 	mov	r3,r7
   2a9a8:	3005883a 	mov	r2,r6
   2a9ac:	f800283a 	ret
   2a9b0:	00800234 	movhi	r2,8
   2a9b4:	10cfd83a 	sra	r7,r2,r3
   2a9b8:	000d883a 	mov	r6,zero
   2a9bc:	3005883a 	mov	r2,r6
   2a9c0:	3807883a 	mov	r3,r7
   2a9c4:	f800283a 	ret

0002a9c8 <__b2d>:
   2a9c8:	20800417 	ldw	r2,16(r4)
   2a9cc:	defff904 	addi	sp,sp,-28
   2a9d0:	dd000415 	stw	r20,16(sp)
   2a9d4:	1085883a 	add	r2,r2,r2
   2a9d8:	25000504 	addi	r20,r4,20
   2a9dc:	1085883a 	add	r2,r2,r2
   2a9e0:	dc000015 	stw	r16,0(sp)
   2a9e4:	a0a1883a 	add	r16,r20,r2
   2a9e8:	dd400515 	stw	r21,20(sp)
   2a9ec:	857fff17 	ldw	r21,-4(r16)
   2a9f0:	dc400115 	stw	r17,4(sp)
   2a9f4:	dfc00615 	stw	ra,24(sp)
   2a9f8:	a809883a 	mov	r4,r21
   2a9fc:	2823883a 	mov	r17,r5
   2aa00:	dcc00315 	stw	r19,12(sp)
   2aa04:	dc800215 	stw	r18,8(sp)
   2aa08:	002a7b40 	call	2a7b4 <__hi0bits>
   2aa0c:	100b883a 	mov	r5,r2
   2aa10:	00800804 	movi	r2,32
   2aa14:	1145c83a 	sub	r2,r2,r5
   2aa18:	88800015 	stw	r2,0(r17)
   2aa1c:	00800284 	movi	r2,10
   2aa20:	80ffff04 	addi	r3,r16,-4
   2aa24:	11401416 	blt	r2,r5,2aa78 <__b2d+0xb0>
   2aa28:	008002c4 	movi	r2,11
   2aa2c:	1149c83a 	sub	r4,r2,r5
   2aa30:	a0c02736 	bltu	r20,r3,2aad0 <__b2d+0x108>
   2aa34:	000d883a 	mov	r6,zero
   2aa38:	28800544 	addi	r2,r5,21
   2aa3c:	a906d83a 	srl	r3,r21,r4
   2aa40:	a884983a 	sll	r2,r21,r2
   2aa44:	1ccffc34 	orhi	r19,r3,16368
   2aa48:	11a4b03a 	or	r18,r2,r6
   2aa4c:	9005883a 	mov	r2,r18
   2aa50:	9807883a 	mov	r3,r19
   2aa54:	dfc00617 	ldw	ra,24(sp)
   2aa58:	dd400517 	ldw	r21,20(sp)
   2aa5c:	dd000417 	ldw	r20,16(sp)
   2aa60:	dcc00317 	ldw	r19,12(sp)
   2aa64:	dc800217 	ldw	r18,8(sp)
   2aa68:	dc400117 	ldw	r17,4(sp)
   2aa6c:	dc000017 	ldw	r16,0(sp)
   2aa70:	dec00704 	addi	sp,sp,28
   2aa74:	f800283a 	ret
   2aa78:	a0c00e36 	bltu	r20,r3,2aab4 <__b2d+0xec>
   2aa7c:	293ffd44 	addi	r4,r5,-11
   2aa80:	000d883a 	mov	r6,zero
   2aa84:	20000f26 	beq	r4,zero,2aac4 <__b2d+0xfc>
   2aa88:	00800804 	movi	r2,32
   2aa8c:	110bc83a 	sub	r5,r2,r4
   2aa90:	a0c01236 	bltu	r20,r3,2aadc <__b2d+0x114>
   2aa94:	000f883a 	mov	r7,zero
   2aa98:	a904983a 	sll	r2,r21,r4
   2aa9c:	3146d83a 	srl	r3,r6,r5
   2aaa0:	3108983a 	sll	r4,r6,r4
   2aaa4:	108ffc34 	orhi	r2,r2,16368
   2aaa8:	18a6b03a 	or	r19,r3,r2
   2aaac:	3924b03a 	or	r18,r7,r4
   2aab0:	003fe606 	br	2aa4c <__b2d+0x84>
   2aab4:	293ffd44 	addi	r4,r5,-11
   2aab8:	81bffe17 	ldw	r6,-8(r16)
   2aabc:	80fffe04 	addi	r3,r16,-8
   2aac0:	203ff11e 	bne	r4,zero,2aa88 <__b2d+0xc0>
   2aac4:	accffc34 	orhi	r19,r21,16368
   2aac8:	3025883a 	mov	r18,r6
   2aacc:	003fdf06 	br	2aa4c <__b2d+0x84>
   2aad0:	18bfff17 	ldw	r2,-4(r3)
   2aad4:	110cd83a 	srl	r6,r2,r4
   2aad8:	003fd706 	br	2aa38 <__b2d+0x70>
   2aadc:	18bfff17 	ldw	r2,-4(r3)
   2aae0:	114ed83a 	srl	r7,r2,r5
   2aae4:	003fec06 	br	2aa98 <__b2d+0xd0>

0002aae8 <__ratio>:
   2aae8:	defff904 	addi	sp,sp,-28
   2aaec:	dc400215 	stw	r17,8(sp)
   2aaf0:	2823883a 	mov	r17,r5
   2aaf4:	d80b883a 	mov	r5,sp
   2aaf8:	dfc00615 	stw	ra,24(sp)
   2aafc:	dd000515 	stw	r20,20(sp)
   2ab00:	dcc00415 	stw	r19,16(sp)
   2ab04:	dc800315 	stw	r18,12(sp)
   2ab08:	2025883a 	mov	r18,r4
   2ab0c:	002a9c80 	call	2a9c8 <__b2d>
   2ab10:	8809883a 	mov	r4,r17
   2ab14:	d9400104 	addi	r5,sp,4
   2ab18:	1027883a 	mov	r19,r2
   2ab1c:	1829883a 	mov	r20,r3
   2ab20:	002a9c80 	call	2a9c8 <__b2d>
   2ab24:	89000417 	ldw	r4,16(r17)
   2ab28:	91c00417 	ldw	r7,16(r18)
   2ab2c:	d9800117 	ldw	r6,4(sp)
   2ab30:	180b883a 	mov	r5,r3
   2ab34:	390fc83a 	sub	r7,r7,r4
   2ab38:	1009883a 	mov	r4,r2
   2ab3c:	d8800017 	ldw	r2,0(sp)
   2ab40:	380e917a 	slli	r7,r7,5
   2ab44:	2011883a 	mov	r8,r4
   2ab48:	1185c83a 	sub	r2,r2,r6
   2ab4c:	11c5883a 	add	r2,r2,r7
   2ab50:	1006953a 	slli	r3,r2,20
   2ab54:	2813883a 	mov	r9,r5
   2ab58:	00800d0e 	bge	zero,r2,2ab90 <__ratio+0xa8>
   2ab5c:	1d29883a 	add	r20,r3,r20
   2ab60:	a00b883a 	mov	r5,r20
   2ab64:	480f883a 	mov	r7,r9
   2ab68:	9809883a 	mov	r4,r19
   2ab6c:	400d883a 	mov	r6,r8
   2ab70:	00241480 	call	24148 <__divdf3>
   2ab74:	dfc00617 	ldw	ra,24(sp)
   2ab78:	dd000517 	ldw	r20,20(sp)
   2ab7c:	dcc00417 	ldw	r19,16(sp)
   2ab80:	dc800317 	ldw	r18,12(sp)
   2ab84:	dc400217 	ldw	r17,8(sp)
   2ab88:	dec00704 	addi	sp,sp,28
   2ab8c:	f800283a 	ret
   2ab90:	28d3c83a 	sub	r9,r5,r3
   2ab94:	003ff206 	br	2ab60 <__ratio+0x78>

0002ab98 <_mprec_log10>:
   2ab98:	defffe04 	addi	sp,sp,-8
   2ab9c:	008005c4 	movi	r2,23
   2aba0:	dc000015 	stw	r16,0(sp)
   2aba4:	dfc00115 	stw	ra,4(sp)
   2aba8:	2021883a 	mov	r16,r4
   2abac:	11000c16 	blt	r2,r4,2abe0 <_mprec_log10+0x48>
   2abb0:	200490fa 	slli	r2,r4,3
   2abb4:	00c000f4 	movhi	r3,3
   2abb8:	18ffc204 	addi	r3,r3,-248
   2abbc:	10c5883a 	add	r2,r2,r3
   2abc0:	12400117 	ldw	r9,4(r2)
   2abc4:	12000017 	ldw	r8,0(r2)
   2abc8:	4807883a 	mov	r3,r9
   2abcc:	4005883a 	mov	r2,r8
   2abd0:	dfc00117 	ldw	ra,4(sp)
   2abd4:	dc000017 	ldw	r16,0(sp)
   2abd8:	dec00204 	addi	sp,sp,8
   2abdc:	f800283a 	ret
   2abe0:	0011883a 	mov	r8,zero
   2abe4:	024ffc34 	movhi	r9,16368
   2abe8:	0005883a 	mov	r2,zero
   2abec:	00d00934 	movhi	r3,16420
   2abf0:	480b883a 	mov	r5,r9
   2abf4:	4009883a 	mov	r4,r8
   2abf8:	180f883a 	mov	r7,r3
   2abfc:	100d883a 	mov	r6,r2
   2ac00:	0023d840 	call	23d84 <__muldf3>
   2ac04:	843fffc4 	addi	r16,r16,-1
   2ac08:	1011883a 	mov	r8,r2
   2ac0c:	1813883a 	mov	r9,r3
   2ac10:	803ff51e 	bne	r16,zero,2abe8 <_mprec_log10+0x50>
   2ac14:	4005883a 	mov	r2,r8
   2ac18:	4807883a 	mov	r3,r9
   2ac1c:	dfc00117 	ldw	ra,4(sp)
   2ac20:	dc000017 	ldw	r16,0(sp)
   2ac24:	dec00204 	addi	sp,sp,8
   2ac28:	f800283a 	ret

0002ac2c <__copybits>:
   2ac2c:	297fffc4 	addi	r5,r5,-1
   2ac30:	30800417 	ldw	r2,16(r6)
   2ac34:	280bd17a 	srai	r5,r5,5
   2ac38:	31800504 	addi	r6,r6,20
   2ac3c:	1085883a 	add	r2,r2,r2
   2ac40:	294b883a 	add	r5,r5,r5
   2ac44:	294b883a 	add	r5,r5,r5
   2ac48:	1085883a 	add	r2,r2,r2
   2ac4c:	290b883a 	add	r5,r5,r4
   2ac50:	3087883a 	add	r3,r6,r2
   2ac54:	29400104 	addi	r5,r5,4
   2ac58:	30c0052e 	bgeu	r6,r3,2ac70 <__copybits+0x44>
   2ac5c:	30800017 	ldw	r2,0(r6)
   2ac60:	31800104 	addi	r6,r6,4
   2ac64:	20800015 	stw	r2,0(r4)
   2ac68:	21000104 	addi	r4,r4,4
   2ac6c:	30fffb36 	bltu	r6,r3,2ac5c <__copybits+0x30>
   2ac70:	2140032e 	bgeu	r4,r5,2ac80 <__copybits+0x54>
   2ac74:	20000015 	stw	zero,0(r4)
   2ac78:	21000104 	addi	r4,r4,4
   2ac7c:	217ffd36 	bltu	r4,r5,2ac74 <__copybits+0x48>
   2ac80:	f800283a 	ret

0002ac84 <__any_on>:
   2ac84:	20800417 	ldw	r2,16(r4)
   2ac88:	2807d17a 	srai	r3,r5,5
   2ac8c:	21000504 	addi	r4,r4,20
   2ac90:	10c00d0e 	bge	r2,r3,2acc8 <__any_on+0x44>
   2ac94:	1085883a 	add	r2,r2,r2
   2ac98:	1085883a 	add	r2,r2,r2
   2ac9c:	208d883a 	add	r6,r4,r2
   2aca0:	2180182e 	bgeu	r4,r6,2ad04 <__any_on+0x80>
   2aca4:	30bfff17 	ldw	r2,-4(r6)
   2aca8:	30ffff04 	addi	r3,r6,-4
   2acac:	1000041e 	bne	r2,zero,2acc0 <__any_on+0x3c>
   2acb0:	20c0142e 	bgeu	r4,r3,2ad04 <__any_on+0x80>
   2acb4:	18ffff04 	addi	r3,r3,-4
   2acb8:	18800017 	ldw	r2,0(r3)
   2acbc:	103ffc26 	beq	r2,zero,2acb0 <__any_on+0x2c>
   2acc0:	00800044 	movi	r2,1
   2acc4:	f800283a 	ret
   2acc8:	18800a0e 	bge	r3,r2,2acf4 <__any_on+0x70>
   2accc:	294007cc 	andi	r5,r5,31
   2acd0:	28000826 	beq	r5,zero,2acf4 <__any_on+0x70>
   2acd4:	18c5883a 	add	r2,r3,r3
   2acd8:	1085883a 	add	r2,r2,r2
   2acdc:	208d883a 	add	r6,r4,r2
   2ace0:	30c00017 	ldw	r3,0(r6)
   2ace4:	1944d83a 	srl	r2,r3,r5
   2ace8:	1144983a 	sll	r2,r2,r5
   2acec:	18bff41e 	bne	r3,r2,2acc0 <__any_on+0x3c>
   2acf0:	003feb06 	br	2aca0 <__any_on+0x1c>
   2acf4:	18c5883a 	add	r2,r3,r3
   2acf8:	1085883a 	add	r2,r2,r2
   2acfc:	208d883a 	add	r6,r4,r2
   2ad00:	003fe706 	br	2aca0 <__any_on+0x1c>
   2ad04:	0005883a 	mov	r2,zero
   2ad08:	f800283a 	ret

0002ad0c <_Balloc>:
   2ad0c:	20c01317 	ldw	r3,76(r4)
   2ad10:	defffb04 	addi	sp,sp,-20
   2ad14:	dcc00315 	stw	r19,12(sp)
   2ad18:	dc800215 	stw	r18,8(sp)
   2ad1c:	dfc00415 	stw	ra,16(sp)
   2ad20:	2825883a 	mov	r18,r5
   2ad24:	dc400115 	stw	r17,4(sp)
   2ad28:	dc000015 	stw	r16,0(sp)
   2ad2c:	2027883a 	mov	r19,r4
   2ad30:	01800404 	movi	r6,16
   2ad34:	01400104 	movi	r5,4
   2ad38:	18001726 	beq	r3,zero,2ad98 <_Balloc+0x8c>
   2ad3c:	01400044 	movi	r5,1
   2ad40:	9485883a 	add	r2,r18,r18
   2ad44:	2ca2983a 	sll	r17,r5,r18
   2ad48:	1085883a 	add	r2,r2,r2
   2ad4c:	10c7883a 	add	r3,r2,r3
   2ad50:	1c000017 	ldw	r16,0(r3)
   2ad54:	8c4d883a 	add	r6,r17,r17
   2ad58:	318d883a 	add	r6,r6,r6
   2ad5c:	9809883a 	mov	r4,r19
   2ad60:	31800504 	addi	r6,r6,20
   2ad64:	80001226 	beq	r16,zero,2adb0 <_Balloc+0xa4>
   2ad68:	80800017 	ldw	r2,0(r16)
   2ad6c:	18800015 	stw	r2,0(r3)
   2ad70:	80000415 	stw	zero,16(r16)
   2ad74:	80000315 	stw	zero,12(r16)
   2ad78:	8005883a 	mov	r2,r16
   2ad7c:	dfc00417 	ldw	ra,16(sp)
   2ad80:	dcc00317 	ldw	r19,12(sp)
   2ad84:	dc800217 	ldw	r18,8(sp)
   2ad88:	dc400117 	ldw	r17,4(sp)
   2ad8c:	dc000017 	ldw	r16,0(sp)
   2ad90:	dec00504 	addi	sp,sp,20
   2ad94:	f800283a 	ret
   2ad98:	002c0a40 	call	2c0a4 <_calloc_r>
   2ad9c:	1007883a 	mov	r3,r2
   2ada0:	0021883a 	mov	r16,zero
   2ada4:	98801315 	stw	r2,76(r19)
   2ada8:	103fe41e 	bne	r2,zero,2ad3c <_Balloc+0x30>
   2adac:	003ff206 	br	2ad78 <_Balloc+0x6c>
   2adb0:	002c0a40 	call	2c0a4 <_calloc_r>
   2adb4:	103ff026 	beq	r2,zero,2ad78 <_Balloc+0x6c>
   2adb8:	1021883a 	mov	r16,r2
   2adbc:	14800115 	stw	r18,4(r2)
   2adc0:	14400215 	stw	r17,8(r2)
   2adc4:	003fea06 	br	2ad70 <_Balloc+0x64>

0002adc8 <__d2b>:
   2adc8:	defff504 	addi	sp,sp,-44
   2adcc:	dcc00515 	stw	r19,20(sp)
   2add0:	04c00044 	movi	r19,1
   2add4:	dc000215 	stw	r16,8(sp)
   2add8:	2821883a 	mov	r16,r5
   2addc:	980b883a 	mov	r5,r19
   2ade0:	ddc00915 	stw	r23,36(sp)
   2ade4:	dd800815 	stw	r22,32(sp)
   2ade8:	dd400715 	stw	r21,28(sp)
   2adec:	dd000615 	stw	r20,24(sp)
   2adf0:	dc800415 	stw	r18,16(sp)
   2adf4:	dc400315 	stw	r17,12(sp)
   2adf8:	dfc00a15 	stw	ra,40(sp)
   2adfc:	3023883a 	mov	r17,r6
   2ae00:	382d883a 	mov	r22,r7
   2ae04:	ddc00b17 	ldw	r23,44(sp)
   2ae08:	002ad0c0 	call	2ad0c <_Balloc>
   2ae0c:	1025883a 	mov	r18,r2
   2ae10:	00a00034 	movhi	r2,32768
   2ae14:	10bfffc4 	addi	r2,r2,-1
   2ae18:	8888703a 	and	r4,r17,r2
   2ae1c:	202ad53a 	srli	r21,r4,20
   2ae20:	00800434 	movhi	r2,16
   2ae24:	10bfffc4 	addi	r2,r2,-1
   2ae28:	8886703a 	and	r3,r17,r2
   2ae2c:	a829003a 	cmpeq	r20,r21,zero
   2ae30:	800b883a 	mov	r5,r16
   2ae34:	d8c00115 	stw	r3,4(sp)
   2ae38:	94000504 	addi	r16,r18,20
   2ae3c:	a000021e 	bne	r20,zero,2ae48 <__d2b+0x80>
   2ae40:	18c00434 	orhi	r3,r3,16
   2ae44:	d8c00115 	stw	r3,4(sp)
   2ae48:	28002726 	beq	r5,zero,2aee8 <__d2b+0x120>
   2ae4c:	d809883a 	mov	r4,sp
   2ae50:	d9400015 	stw	r5,0(sp)
   2ae54:	002a8240 	call	2a824 <__lo0bits>
   2ae58:	100d883a 	mov	r6,r2
   2ae5c:	10003526 	beq	r2,zero,2af34 <__d2b+0x16c>
   2ae60:	d8c00117 	ldw	r3,4(sp)
   2ae64:	00800804 	movi	r2,32
   2ae68:	1185c83a 	sub	r2,r2,r6
   2ae6c:	d9000017 	ldw	r4,0(sp)
   2ae70:	1886983a 	sll	r3,r3,r2
   2ae74:	1906b03a 	or	r3,r3,r4
   2ae78:	90c00515 	stw	r3,20(r18)
   2ae7c:	d8c00117 	ldw	r3,4(sp)
   2ae80:	1986d83a 	srl	r3,r3,r6
   2ae84:	d8c00115 	stw	r3,4(sp)
   2ae88:	180b003a 	cmpeq	r5,r3,zero
   2ae8c:	00800084 	movi	r2,2
   2ae90:	114bc83a 	sub	r5,r2,r5
   2ae94:	80c00115 	stw	r3,4(r16)
   2ae98:	91400415 	stw	r5,16(r18)
   2ae9c:	a0001a1e 	bne	r20,zero,2af08 <__d2b+0x140>
   2aea0:	3545883a 	add	r2,r6,r21
   2aea4:	10bef344 	addi	r2,r2,-1075
   2aea8:	00c00d44 	movi	r3,53
   2aeac:	b0800015 	stw	r2,0(r22)
   2aeb0:	1987c83a 	sub	r3,r3,r6
   2aeb4:	b8c00015 	stw	r3,0(r23)
   2aeb8:	9005883a 	mov	r2,r18
   2aebc:	dfc00a17 	ldw	ra,40(sp)
   2aec0:	ddc00917 	ldw	r23,36(sp)
   2aec4:	dd800817 	ldw	r22,32(sp)
   2aec8:	dd400717 	ldw	r21,28(sp)
   2aecc:	dd000617 	ldw	r20,24(sp)
   2aed0:	dcc00517 	ldw	r19,20(sp)
   2aed4:	dc800417 	ldw	r18,16(sp)
   2aed8:	dc400317 	ldw	r17,12(sp)
   2aedc:	dc000217 	ldw	r16,8(sp)
   2aee0:	dec00b04 	addi	sp,sp,44
   2aee4:	f800283a 	ret
   2aee8:	d9000104 	addi	r4,sp,4
   2aeec:	002a8240 	call	2a824 <__lo0bits>
   2aef0:	11800804 	addi	r6,r2,32
   2aef4:	d8800117 	ldw	r2,4(sp)
   2aef8:	94c00415 	stw	r19,16(r18)
   2aefc:	980b883a 	mov	r5,r19
   2af00:	90800515 	stw	r2,20(r18)
   2af04:	a03fe626 	beq	r20,zero,2aea0 <__d2b+0xd8>
   2af08:	2945883a 	add	r2,r5,r5
   2af0c:	1085883a 	add	r2,r2,r2
   2af10:	1405883a 	add	r2,r2,r16
   2af14:	113fff17 	ldw	r4,-4(r2)
   2af18:	30fef384 	addi	r3,r6,-1074
   2af1c:	2820917a 	slli	r16,r5,5
   2af20:	b0c00015 	stw	r3,0(r22)
   2af24:	002a7b40 	call	2a7b4 <__hi0bits>
   2af28:	80a1c83a 	sub	r16,r16,r2
   2af2c:	bc000015 	stw	r16,0(r23)
   2af30:	003fe106 	br	2aeb8 <__d2b+0xf0>
   2af34:	d8800017 	ldw	r2,0(sp)
   2af38:	90800515 	stw	r2,20(r18)
   2af3c:	d8c00117 	ldw	r3,4(sp)
   2af40:	003fd106 	br	2ae88 <__d2b+0xc0>

0002af44 <__mdiff>:
   2af44:	defffb04 	addi	sp,sp,-20
   2af48:	dc000015 	stw	r16,0(sp)
   2af4c:	2821883a 	mov	r16,r5
   2af50:	dc800215 	stw	r18,8(sp)
   2af54:	300b883a 	mov	r5,r6
   2af58:	2025883a 	mov	r18,r4
   2af5c:	8009883a 	mov	r4,r16
   2af60:	dc400115 	stw	r17,4(sp)
   2af64:	dfc00415 	stw	ra,16(sp)
   2af68:	dcc00315 	stw	r19,12(sp)
   2af6c:	3023883a 	mov	r17,r6
   2af70:	002a8e80 	call	2a8e8 <__mcmp>
   2af74:	10004226 	beq	r2,zero,2b080 <__mdiff+0x13c>
   2af78:	10005016 	blt	r2,zero,2b0bc <__mdiff+0x178>
   2af7c:	0027883a 	mov	r19,zero
   2af80:	81400117 	ldw	r5,4(r16)
   2af84:	9009883a 	mov	r4,r18
   2af88:	002ad0c0 	call	2ad0c <_Balloc>
   2af8c:	1019883a 	mov	r12,r2
   2af90:	82800417 	ldw	r10,16(r16)
   2af94:	88800417 	ldw	r2,16(r17)
   2af98:	81800504 	addi	r6,r16,20
   2af9c:	5287883a 	add	r3,r10,r10
   2afa0:	1085883a 	add	r2,r2,r2
   2afa4:	18c7883a 	add	r3,r3,r3
   2afa8:	1085883a 	add	r2,r2,r2
   2afac:	8a000504 	addi	r8,r17,20
   2afb0:	64c00315 	stw	r19,12(r12)
   2afb4:	30db883a 	add	r13,r6,r3
   2afb8:	4097883a 	add	r11,r8,r2
   2afbc:	61c00504 	addi	r7,r12,20
   2afc0:	0013883a 	mov	r9,zero
   2afc4:	31000017 	ldw	r4,0(r6)
   2afc8:	41400017 	ldw	r5,0(r8)
   2afcc:	42000104 	addi	r8,r8,4
   2afd0:	20bfffcc 	andi	r2,r4,65535
   2afd4:	28ffffcc 	andi	r3,r5,65535
   2afd8:	10c5c83a 	sub	r2,r2,r3
   2afdc:	1245883a 	add	r2,r2,r9
   2afe0:	2008d43a 	srli	r4,r4,16
   2afe4:	280ad43a 	srli	r5,r5,16
   2afe8:	1007d43a 	srai	r3,r2,16
   2afec:	3880000d 	sth	r2,0(r7)
   2aff0:	2149c83a 	sub	r4,r4,r5
   2aff4:	20c9883a 	add	r4,r4,r3
   2aff8:	3900008d 	sth	r4,2(r7)
   2affc:	31800104 	addi	r6,r6,4
   2b000:	39c00104 	addi	r7,r7,4
   2b004:	2013d43a 	srai	r9,r4,16
   2b008:	42ffee36 	bltu	r8,r11,2afc4 <__mdiff+0x80>
   2b00c:	33400c2e 	bgeu	r6,r13,2b040 <__mdiff+0xfc>
   2b010:	30800017 	ldw	r2,0(r6)
   2b014:	31800104 	addi	r6,r6,4
   2b018:	10ffffcc 	andi	r3,r2,65535
   2b01c:	1a47883a 	add	r3,r3,r9
   2b020:	1004d43a 	srli	r2,r2,16
   2b024:	1809d43a 	srai	r4,r3,16
   2b028:	38c0000d 	sth	r3,0(r7)
   2b02c:	1105883a 	add	r2,r2,r4
   2b030:	3880008d 	sth	r2,2(r7)
   2b034:	1013d43a 	srai	r9,r2,16
   2b038:	39c00104 	addi	r7,r7,4
   2b03c:	337ff436 	bltu	r6,r13,2b010 <__mdiff+0xcc>
   2b040:	38bfff17 	ldw	r2,-4(r7)
   2b044:	38ffff04 	addi	r3,r7,-4
   2b048:	1000041e 	bne	r2,zero,2b05c <__mdiff+0x118>
   2b04c:	18ffff04 	addi	r3,r3,-4
   2b050:	18800017 	ldw	r2,0(r3)
   2b054:	52bfffc4 	addi	r10,r10,-1
   2b058:	103ffc26 	beq	r2,zero,2b04c <__mdiff+0x108>
   2b05c:	6005883a 	mov	r2,r12
   2b060:	62800415 	stw	r10,16(r12)
   2b064:	dfc00417 	ldw	ra,16(sp)
   2b068:	dcc00317 	ldw	r19,12(sp)
   2b06c:	dc800217 	ldw	r18,8(sp)
   2b070:	dc400117 	ldw	r17,4(sp)
   2b074:	dc000017 	ldw	r16,0(sp)
   2b078:	dec00504 	addi	sp,sp,20
   2b07c:	f800283a 	ret
   2b080:	9009883a 	mov	r4,r18
   2b084:	000b883a 	mov	r5,zero
   2b088:	002ad0c0 	call	2ad0c <_Balloc>
   2b08c:	1019883a 	mov	r12,r2
   2b090:	00800044 	movi	r2,1
   2b094:	60800415 	stw	r2,16(r12)
   2b098:	6005883a 	mov	r2,r12
   2b09c:	60000515 	stw	zero,20(r12)
   2b0a0:	dfc00417 	ldw	ra,16(sp)
   2b0a4:	dcc00317 	ldw	r19,12(sp)
   2b0a8:	dc800217 	ldw	r18,8(sp)
   2b0ac:	dc400117 	ldw	r17,4(sp)
   2b0b0:	dc000017 	ldw	r16,0(sp)
   2b0b4:	dec00504 	addi	sp,sp,20
   2b0b8:	f800283a 	ret
   2b0bc:	880d883a 	mov	r6,r17
   2b0c0:	04c00044 	movi	r19,1
   2b0c4:	8023883a 	mov	r17,r16
   2b0c8:	3021883a 	mov	r16,r6
   2b0cc:	003fac06 	br	2af80 <__mdiff+0x3c>

0002b0d0 <__lshift>:
   2b0d0:	defff904 	addi	sp,sp,-28
   2b0d4:	28800417 	ldw	r2,16(r5)
   2b0d8:	dc000015 	stw	r16,0(sp)
   2b0dc:	3021d17a 	srai	r16,r6,5
   2b0e0:	28c00217 	ldw	r3,8(r5)
   2b0e4:	10800044 	addi	r2,r2,1
   2b0e8:	dc400115 	stw	r17,4(sp)
   2b0ec:	80a3883a 	add	r17,r16,r2
   2b0f0:	dd400515 	stw	r21,20(sp)
   2b0f4:	dd000415 	stw	r20,16(sp)
   2b0f8:	dc800215 	stw	r18,8(sp)
   2b0fc:	dfc00615 	stw	ra,24(sp)
   2b100:	2825883a 	mov	r18,r5
   2b104:	dcc00315 	stw	r19,12(sp)
   2b108:	3029883a 	mov	r20,r6
   2b10c:	202b883a 	mov	r21,r4
   2b110:	29400117 	ldw	r5,4(r5)
   2b114:	1c40030e 	bge	r3,r17,2b124 <__lshift+0x54>
   2b118:	18c7883a 	add	r3,r3,r3
   2b11c:	29400044 	addi	r5,r5,1
   2b120:	1c7ffd16 	blt	r3,r17,2b118 <__lshift+0x48>
   2b124:	a809883a 	mov	r4,r21
   2b128:	002ad0c0 	call	2ad0c <_Balloc>
   2b12c:	1027883a 	mov	r19,r2
   2b130:	11400504 	addi	r5,r2,20
   2b134:	0400090e 	bge	zero,r16,2b15c <__lshift+0x8c>
   2b138:	2805883a 	mov	r2,r5
   2b13c:	0007883a 	mov	r3,zero
   2b140:	18c00044 	addi	r3,r3,1
   2b144:	10000015 	stw	zero,0(r2)
   2b148:	10800104 	addi	r2,r2,4
   2b14c:	80fffc1e 	bne	r16,r3,2b140 <__lshift+0x70>
   2b150:	8405883a 	add	r2,r16,r16
   2b154:	1085883a 	add	r2,r2,r2
   2b158:	288b883a 	add	r5,r5,r2
   2b15c:	90800417 	ldw	r2,16(r18)
   2b160:	91000504 	addi	r4,r18,20
   2b164:	a18007cc 	andi	r6,r20,31
   2b168:	1085883a 	add	r2,r2,r2
   2b16c:	1085883a 	add	r2,r2,r2
   2b170:	208f883a 	add	r7,r4,r2
   2b174:	30001e26 	beq	r6,zero,2b1f0 <__lshift+0x120>
   2b178:	00800804 	movi	r2,32
   2b17c:	1191c83a 	sub	r8,r2,r6
   2b180:	0007883a 	mov	r3,zero
   2b184:	20800017 	ldw	r2,0(r4)
   2b188:	1184983a 	sll	r2,r2,r6
   2b18c:	1884b03a 	or	r2,r3,r2
   2b190:	28800015 	stw	r2,0(r5)
   2b194:	20c00017 	ldw	r3,0(r4)
   2b198:	21000104 	addi	r4,r4,4
   2b19c:	29400104 	addi	r5,r5,4
   2b1a0:	1a06d83a 	srl	r3,r3,r8
   2b1a4:	21fff736 	bltu	r4,r7,2b184 <__lshift+0xb4>
   2b1a8:	28c00015 	stw	r3,0(r5)
   2b1ac:	18000126 	beq	r3,zero,2b1b4 <__lshift+0xe4>
   2b1b0:	8c400044 	addi	r17,r17,1
   2b1b4:	88bfffc4 	addi	r2,r17,-1
   2b1b8:	98800415 	stw	r2,16(r19)
   2b1bc:	a809883a 	mov	r4,r21
   2b1c0:	900b883a 	mov	r5,r18
   2b1c4:	002a78c0 	call	2a78c <_Bfree>
   2b1c8:	9805883a 	mov	r2,r19
   2b1cc:	dfc00617 	ldw	ra,24(sp)
   2b1d0:	dd400517 	ldw	r21,20(sp)
   2b1d4:	dd000417 	ldw	r20,16(sp)
   2b1d8:	dcc00317 	ldw	r19,12(sp)
   2b1dc:	dc800217 	ldw	r18,8(sp)
   2b1e0:	dc400117 	ldw	r17,4(sp)
   2b1e4:	dc000017 	ldw	r16,0(sp)
   2b1e8:	dec00704 	addi	sp,sp,28
   2b1ec:	f800283a 	ret
   2b1f0:	20800017 	ldw	r2,0(r4)
   2b1f4:	21000104 	addi	r4,r4,4
   2b1f8:	28800015 	stw	r2,0(r5)
   2b1fc:	29400104 	addi	r5,r5,4
   2b200:	21ffec2e 	bgeu	r4,r7,2b1b4 <__lshift+0xe4>
   2b204:	20800017 	ldw	r2,0(r4)
   2b208:	21000104 	addi	r4,r4,4
   2b20c:	28800015 	stw	r2,0(r5)
   2b210:	29400104 	addi	r5,r5,4
   2b214:	21fff636 	bltu	r4,r7,2b1f0 <__lshift+0x120>
   2b218:	003fe606 	br	2b1b4 <__lshift+0xe4>

0002b21c <__multiply>:
   2b21c:	defff904 	addi	sp,sp,-28
   2b220:	dcc00315 	stw	r19,12(sp)
   2b224:	dc800215 	stw	r18,8(sp)
   2b228:	2cc00417 	ldw	r19,16(r5)
   2b22c:	34800417 	ldw	r18,16(r6)
   2b230:	dd000415 	stw	r20,16(sp)
   2b234:	dc400115 	stw	r17,4(sp)
   2b238:	dfc00615 	stw	ra,24(sp)
   2b23c:	dd400515 	stw	r21,20(sp)
   2b240:	dc000015 	stw	r16,0(sp)
   2b244:	2823883a 	mov	r17,r5
   2b248:	3029883a 	mov	r20,r6
   2b24c:	9c80040e 	bge	r19,r18,2b260 <__multiply+0x44>
   2b250:	9027883a 	mov	r19,r18
   2b254:	2c800417 	ldw	r18,16(r5)
   2b258:	2829883a 	mov	r20,r5
   2b25c:	3023883a 	mov	r17,r6
   2b260:	88800217 	ldw	r2,8(r17)
   2b264:	9ca1883a 	add	r16,r19,r18
   2b268:	89400117 	ldw	r5,4(r17)
   2b26c:	1400010e 	bge	r2,r16,2b274 <__multiply+0x58>
   2b270:	29400044 	addi	r5,r5,1
   2b274:	002ad0c0 	call	2ad0c <_Balloc>
   2b278:	102b883a 	mov	r21,r2
   2b27c:	8405883a 	add	r2,r16,r16
   2b280:	1085883a 	add	r2,r2,r2
   2b284:	a9000504 	addi	r4,r21,20
   2b288:	209d883a 	add	r14,r4,r2
   2b28c:	2380042e 	bgeu	r4,r14,2b2a0 <__multiply+0x84>
   2b290:	2005883a 	mov	r2,r4
   2b294:	10000015 	stw	zero,0(r2)
   2b298:	10800104 	addi	r2,r2,4
   2b29c:	13bffd36 	bltu	r2,r14,2b294 <__multiply+0x78>
   2b2a0:	9485883a 	add	r2,r18,r18
   2b2a4:	9cc7883a 	add	r3,r19,r19
   2b2a8:	a1800504 	addi	r6,r20,20
   2b2ac:	1085883a 	add	r2,r2,r2
   2b2b0:	8b400504 	addi	r13,r17,20
   2b2b4:	18c7883a 	add	r3,r3,r3
   2b2b8:	309f883a 	add	r15,r6,r2
   2b2bc:	68d7883a 	add	r11,r13,r3
   2b2c0:	33c03b2e 	bgeu	r6,r15,2b3b0 <__multiply+0x194>
   2b2c4:	2019883a 	mov	r12,r4
   2b2c8:	30800017 	ldw	r2,0(r6)
   2b2cc:	127fffcc 	andi	r9,r2,65535
   2b2d0:	48001826 	beq	r9,zero,2b334 <__multiply+0x118>
   2b2d4:	6811883a 	mov	r8,r13
   2b2d8:	600f883a 	mov	r7,r12
   2b2dc:	0015883a 	mov	r10,zero
   2b2e0:	40c00017 	ldw	r3,0(r8)
   2b2e4:	39400017 	ldw	r5,0(r7)
   2b2e8:	42000104 	addi	r8,r8,4
   2b2ec:	193fffcc 	andi	r4,r3,65535
   2b2f0:	4909383a 	mul	r4,r9,r4
   2b2f4:	1806d43a 	srli	r3,r3,16
   2b2f8:	28bfffcc 	andi	r2,r5,65535
   2b2fc:	5085883a 	add	r2,r10,r2
   2b300:	2089883a 	add	r4,r4,r2
   2b304:	48c7383a 	mul	r3,r9,r3
   2b308:	280ad43a 	srli	r5,r5,16
   2b30c:	2004d43a 	srli	r2,r4,16
   2b310:	3900000d 	sth	r4,0(r7)
   2b314:	1947883a 	add	r3,r3,r5
   2b318:	10c5883a 	add	r2,r2,r3
   2b31c:	3880008d 	sth	r2,2(r7)
   2b320:	1014d43a 	srli	r10,r2,16
   2b324:	39c00104 	addi	r7,r7,4
   2b328:	42ffed36 	bltu	r8,r11,2b2e0 <__multiply+0xc4>
   2b32c:	3a800015 	stw	r10,0(r7)
   2b330:	30800017 	ldw	r2,0(r6)
   2b334:	1012d43a 	srli	r9,r2,16
   2b338:	48001926 	beq	r9,zero,2b3a0 <__multiply+0x184>
   2b33c:	60800017 	ldw	r2,0(r12)
   2b340:	6811883a 	mov	r8,r13
   2b344:	600f883a 	mov	r7,r12
   2b348:	0015883a 	mov	r10,zero
   2b34c:	100b883a 	mov	r5,r2
   2b350:	41000017 	ldw	r4,0(r8)
   2b354:	2806d43a 	srli	r3,r5,16
   2b358:	3880000d 	sth	r2,0(r7)
   2b35c:	20bfffcc 	andi	r2,r4,65535
   2b360:	4885383a 	mul	r2,r9,r2
   2b364:	50c7883a 	add	r3,r10,r3
   2b368:	2008d43a 	srli	r4,r4,16
   2b36c:	10c5883a 	add	r2,r2,r3
   2b370:	3880008d 	sth	r2,2(r7)
   2b374:	39c00104 	addi	r7,r7,4
   2b378:	39400017 	ldw	r5,0(r7)
   2b37c:	4909383a 	mul	r4,r9,r4
   2b380:	1004d43a 	srli	r2,r2,16
   2b384:	28ffffcc 	andi	r3,r5,65535
   2b388:	20c9883a 	add	r4,r4,r3
   2b38c:	1105883a 	add	r2,r2,r4
   2b390:	42000104 	addi	r8,r8,4
   2b394:	1014d43a 	srli	r10,r2,16
   2b398:	42ffed36 	bltu	r8,r11,2b350 <__multiply+0x134>
   2b39c:	38800015 	stw	r2,0(r7)
   2b3a0:	31800104 	addi	r6,r6,4
   2b3a4:	33c0022e 	bgeu	r6,r15,2b3b0 <__multiply+0x194>
   2b3a8:	63000104 	addi	r12,r12,4
   2b3ac:	003fc606 	br	2b2c8 <__multiply+0xac>
   2b3b0:	0400090e 	bge	zero,r16,2b3d8 <__multiply+0x1bc>
   2b3b4:	70bfff17 	ldw	r2,-4(r14)
   2b3b8:	70ffff04 	addi	r3,r14,-4
   2b3bc:	10000326 	beq	r2,zero,2b3cc <__multiply+0x1b0>
   2b3c0:	00000506 	br	2b3d8 <__multiply+0x1bc>
   2b3c4:	18800017 	ldw	r2,0(r3)
   2b3c8:	1000031e 	bne	r2,zero,2b3d8 <__multiply+0x1bc>
   2b3cc:	843fffc4 	addi	r16,r16,-1
   2b3d0:	18ffff04 	addi	r3,r3,-4
   2b3d4:	803ffb1e 	bne	r16,zero,2b3c4 <__multiply+0x1a8>
   2b3d8:	a805883a 	mov	r2,r21
   2b3dc:	ac000415 	stw	r16,16(r21)
   2b3e0:	dfc00617 	ldw	ra,24(sp)
   2b3e4:	dd400517 	ldw	r21,20(sp)
   2b3e8:	dd000417 	ldw	r20,16(sp)
   2b3ec:	dcc00317 	ldw	r19,12(sp)
   2b3f0:	dc800217 	ldw	r18,8(sp)
   2b3f4:	dc400117 	ldw	r17,4(sp)
   2b3f8:	dc000017 	ldw	r16,0(sp)
   2b3fc:	dec00704 	addi	sp,sp,28
   2b400:	f800283a 	ret

0002b404 <__i2b>:
   2b404:	defffd04 	addi	sp,sp,-12
   2b408:	dc000015 	stw	r16,0(sp)
   2b40c:	04000044 	movi	r16,1
   2b410:	dc800115 	stw	r18,4(sp)
   2b414:	2825883a 	mov	r18,r5
   2b418:	800b883a 	mov	r5,r16
   2b41c:	dfc00215 	stw	ra,8(sp)
   2b420:	002ad0c0 	call	2ad0c <_Balloc>
   2b424:	14000415 	stw	r16,16(r2)
   2b428:	14800515 	stw	r18,20(r2)
   2b42c:	dfc00217 	ldw	ra,8(sp)
   2b430:	dc800117 	ldw	r18,4(sp)
   2b434:	dc000017 	ldw	r16,0(sp)
   2b438:	dec00304 	addi	sp,sp,12
   2b43c:	f800283a 	ret

0002b440 <__multadd>:
   2b440:	defffa04 	addi	sp,sp,-24
   2b444:	dc800215 	stw	r18,8(sp)
   2b448:	2c800417 	ldw	r18,16(r5)
   2b44c:	dd000415 	stw	r20,16(sp)
   2b450:	dcc00315 	stw	r19,12(sp)
   2b454:	dc000015 	stw	r16,0(sp)
   2b458:	dfc00515 	stw	ra,20(sp)
   2b45c:	3821883a 	mov	r16,r7
   2b460:	dc400115 	stw	r17,4(sp)
   2b464:	2827883a 	mov	r19,r5
   2b468:	2029883a 	mov	r20,r4
   2b46c:	2a000504 	addi	r8,r5,20
   2b470:	000f883a 	mov	r7,zero
   2b474:	40800017 	ldw	r2,0(r8)
   2b478:	39c00044 	addi	r7,r7,1
   2b47c:	10ffffcc 	andi	r3,r2,65535
   2b480:	1987383a 	mul	r3,r3,r6
   2b484:	1004d43a 	srli	r2,r2,16
   2b488:	1c07883a 	add	r3,r3,r16
   2b48c:	180ad43a 	srli	r5,r3,16
   2b490:	1185383a 	mul	r2,r2,r6
   2b494:	18ffffcc 	andi	r3,r3,65535
   2b498:	1145883a 	add	r2,r2,r5
   2b49c:	1008943a 	slli	r4,r2,16
   2b4a0:	1020d43a 	srli	r16,r2,16
   2b4a4:	20c9883a 	add	r4,r4,r3
   2b4a8:	41000015 	stw	r4,0(r8)
   2b4ac:	42000104 	addi	r8,r8,4
   2b4b0:	3cbff016 	blt	r7,r18,2b474 <__multadd+0x34>
   2b4b4:	80000826 	beq	r16,zero,2b4d8 <__multadd+0x98>
   2b4b8:	98800217 	ldw	r2,8(r19)
   2b4bc:	90800f0e 	bge	r18,r2,2b4fc <__multadd+0xbc>
   2b4c0:	9485883a 	add	r2,r18,r18
   2b4c4:	1085883a 	add	r2,r2,r2
   2b4c8:	14c5883a 	add	r2,r2,r19
   2b4cc:	90c00044 	addi	r3,r18,1
   2b4d0:	14000515 	stw	r16,20(r2)
   2b4d4:	98c00415 	stw	r3,16(r19)
   2b4d8:	9805883a 	mov	r2,r19
   2b4dc:	dfc00517 	ldw	ra,20(sp)
   2b4e0:	dd000417 	ldw	r20,16(sp)
   2b4e4:	dcc00317 	ldw	r19,12(sp)
   2b4e8:	dc800217 	ldw	r18,8(sp)
   2b4ec:	dc400117 	ldw	r17,4(sp)
   2b4f0:	dc000017 	ldw	r16,0(sp)
   2b4f4:	dec00604 	addi	sp,sp,24
   2b4f8:	f800283a 	ret
   2b4fc:	99400117 	ldw	r5,4(r19)
   2b500:	a009883a 	mov	r4,r20
   2b504:	29400044 	addi	r5,r5,1
   2b508:	002ad0c0 	call	2ad0c <_Balloc>
   2b50c:	99800417 	ldw	r6,16(r19)
   2b510:	99400304 	addi	r5,r19,12
   2b514:	11000304 	addi	r4,r2,12
   2b518:	318d883a 	add	r6,r6,r6
   2b51c:	318d883a 	add	r6,r6,r6
   2b520:	31800204 	addi	r6,r6,8
   2b524:	1023883a 	mov	r17,r2
   2b528:	002a5740 	call	2a574 <memcpy>
   2b52c:	980b883a 	mov	r5,r19
   2b530:	a009883a 	mov	r4,r20
   2b534:	002a78c0 	call	2a78c <_Bfree>
   2b538:	8827883a 	mov	r19,r17
   2b53c:	003fe006 	br	2b4c0 <__multadd+0x80>

0002b540 <__pow5mult>:
   2b540:	defffa04 	addi	sp,sp,-24
   2b544:	308000cc 	andi	r2,r6,3
   2b548:	dd000415 	stw	r20,16(sp)
   2b54c:	dcc00315 	stw	r19,12(sp)
   2b550:	dc000015 	stw	r16,0(sp)
   2b554:	dfc00515 	stw	ra,20(sp)
   2b558:	dc800215 	stw	r18,8(sp)
   2b55c:	dc400115 	stw	r17,4(sp)
   2b560:	3021883a 	mov	r16,r6
   2b564:	2027883a 	mov	r19,r4
   2b568:	2829883a 	mov	r20,r5
   2b56c:	10002b1e 	bne	r2,zero,2b61c <__pow5mult+0xdc>
   2b570:	8025d0ba 	srai	r18,r16,2
   2b574:	90001b26 	beq	r18,zero,2b5e4 <__pow5mult+0xa4>
   2b578:	9c001217 	ldw	r16,72(r19)
   2b57c:	8000081e 	bne	r16,zero,2b5a0 <__pow5mult+0x60>
   2b580:	00003006 	br	2b644 <__pow5mult+0x104>
   2b584:	800b883a 	mov	r5,r16
   2b588:	800d883a 	mov	r6,r16
   2b58c:	9809883a 	mov	r4,r19
   2b590:	90001426 	beq	r18,zero,2b5e4 <__pow5mult+0xa4>
   2b594:	80800017 	ldw	r2,0(r16)
   2b598:	10001b26 	beq	r2,zero,2b608 <__pow5mult+0xc8>
   2b59c:	1021883a 	mov	r16,r2
   2b5a0:	9080004c 	andi	r2,r18,1
   2b5a4:	1005003a 	cmpeq	r2,r2,zero
   2b5a8:	9025d07a 	srai	r18,r18,1
   2b5ac:	800d883a 	mov	r6,r16
   2b5b0:	9809883a 	mov	r4,r19
   2b5b4:	a00b883a 	mov	r5,r20
   2b5b8:	103ff21e 	bne	r2,zero,2b584 <__pow5mult+0x44>
   2b5bc:	002b21c0 	call	2b21c <__multiply>
   2b5c0:	a00b883a 	mov	r5,r20
   2b5c4:	9809883a 	mov	r4,r19
   2b5c8:	1023883a 	mov	r17,r2
   2b5cc:	002a78c0 	call	2a78c <_Bfree>
   2b5d0:	8829883a 	mov	r20,r17
   2b5d4:	800b883a 	mov	r5,r16
   2b5d8:	800d883a 	mov	r6,r16
   2b5dc:	9809883a 	mov	r4,r19
   2b5e0:	903fec1e 	bne	r18,zero,2b594 <__pow5mult+0x54>
   2b5e4:	a005883a 	mov	r2,r20
   2b5e8:	dfc00517 	ldw	ra,20(sp)
   2b5ec:	dd000417 	ldw	r20,16(sp)
   2b5f0:	dcc00317 	ldw	r19,12(sp)
   2b5f4:	dc800217 	ldw	r18,8(sp)
   2b5f8:	dc400117 	ldw	r17,4(sp)
   2b5fc:	dc000017 	ldw	r16,0(sp)
   2b600:	dec00604 	addi	sp,sp,24
   2b604:	f800283a 	ret
   2b608:	002b21c0 	call	2b21c <__multiply>
   2b60c:	80800015 	stw	r2,0(r16)
   2b610:	1021883a 	mov	r16,r2
   2b614:	10000015 	stw	zero,0(r2)
   2b618:	003fe106 	br	2b5a0 <__pow5mult+0x60>
   2b61c:	1085883a 	add	r2,r2,r2
   2b620:	00c000f4 	movhi	r3,3
   2b624:	18c00804 	addi	r3,r3,32
   2b628:	1085883a 	add	r2,r2,r2
   2b62c:	10c5883a 	add	r2,r2,r3
   2b630:	11bfff17 	ldw	r6,-4(r2)
   2b634:	000f883a 	mov	r7,zero
   2b638:	002b4400 	call	2b440 <__multadd>
   2b63c:	1029883a 	mov	r20,r2
   2b640:	003fcb06 	br	2b570 <__pow5mult+0x30>
   2b644:	9809883a 	mov	r4,r19
   2b648:	01409c44 	movi	r5,625
   2b64c:	002b4040 	call	2b404 <__i2b>
   2b650:	98801215 	stw	r2,72(r19)
   2b654:	1021883a 	mov	r16,r2
   2b658:	10000015 	stw	zero,0(r2)
   2b65c:	003fd006 	br	2b5a0 <__pow5mult+0x60>

0002b660 <__s2b>:
   2b660:	defff904 	addi	sp,sp,-28
   2b664:	dcc00315 	stw	r19,12(sp)
   2b668:	dc800215 	stw	r18,8(sp)
   2b66c:	2827883a 	mov	r19,r5
   2b670:	2025883a 	mov	r18,r4
   2b674:	01400244 	movi	r5,9
   2b678:	39000204 	addi	r4,r7,8
   2b67c:	dd000415 	stw	r20,16(sp)
   2b680:	dc400115 	stw	r17,4(sp)
   2b684:	dfc00615 	stw	ra,24(sp)
   2b688:	dd400515 	stw	r21,20(sp)
   2b68c:	dc000015 	stw	r16,0(sp)
   2b690:	3829883a 	mov	r20,r7
   2b694:	3023883a 	mov	r17,r6
   2b698:	002d25c0 	call	2d25c <__divsi3>
   2b69c:	00c00044 	movi	r3,1
   2b6a0:	1880350e 	bge	r3,r2,2b778 <__s2b+0x118>
   2b6a4:	000b883a 	mov	r5,zero
   2b6a8:	18c7883a 	add	r3,r3,r3
   2b6ac:	29400044 	addi	r5,r5,1
   2b6b0:	18bffd16 	blt	r3,r2,2b6a8 <__s2b+0x48>
   2b6b4:	9009883a 	mov	r4,r18
   2b6b8:	002ad0c0 	call	2ad0c <_Balloc>
   2b6bc:	1011883a 	mov	r8,r2
   2b6c0:	d8800717 	ldw	r2,28(sp)
   2b6c4:	00c00044 	movi	r3,1
   2b6c8:	01800244 	movi	r6,9
   2b6cc:	40800515 	stw	r2,20(r8)
   2b6d0:	40c00415 	stw	r3,16(r8)
   2b6d4:	3440260e 	bge	r6,r17,2b770 <__s2b+0x110>
   2b6d8:	3021883a 	mov	r16,r6
   2b6dc:	99ab883a 	add	r21,r19,r6
   2b6e0:	9c05883a 	add	r2,r19,r16
   2b6e4:	11c00007 	ldb	r7,0(r2)
   2b6e8:	400b883a 	mov	r5,r8
   2b6ec:	9009883a 	mov	r4,r18
   2b6f0:	39fff404 	addi	r7,r7,-48
   2b6f4:	01800284 	movi	r6,10
   2b6f8:	002b4400 	call	2b440 <__multadd>
   2b6fc:	84000044 	addi	r16,r16,1
   2b700:	1011883a 	mov	r8,r2
   2b704:	8c3ff61e 	bne	r17,r16,2b6e0 <__s2b+0x80>
   2b708:	ac45883a 	add	r2,r21,r17
   2b70c:	117ffe04 	addi	r5,r2,-8
   2b710:	880d883a 	mov	r6,r17
   2b714:	35000c0e 	bge	r6,r20,2b748 <__s2b+0xe8>
   2b718:	a185c83a 	sub	r2,r20,r6
   2b71c:	2821883a 	mov	r16,r5
   2b720:	28a3883a 	add	r17,r5,r2
   2b724:	81c00007 	ldb	r7,0(r16)
   2b728:	400b883a 	mov	r5,r8
   2b72c:	9009883a 	mov	r4,r18
   2b730:	39fff404 	addi	r7,r7,-48
   2b734:	01800284 	movi	r6,10
   2b738:	002b4400 	call	2b440 <__multadd>
   2b73c:	84000044 	addi	r16,r16,1
   2b740:	1011883a 	mov	r8,r2
   2b744:	847ff71e 	bne	r16,r17,2b724 <__s2b+0xc4>
   2b748:	4005883a 	mov	r2,r8
   2b74c:	dfc00617 	ldw	ra,24(sp)
   2b750:	dd400517 	ldw	r21,20(sp)
   2b754:	dd000417 	ldw	r20,16(sp)
   2b758:	dcc00317 	ldw	r19,12(sp)
   2b75c:	dc800217 	ldw	r18,8(sp)
   2b760:	dc400117 	ldw	r17,4(sp)
   2b764:	dc000017 	ldw	r16,0(sp)
   2b768:	dec00704 	addi	sp,sp,28
   2b76c:	f800283a 	ret
   2b770:	99400284 	addi	r5,r19,10
   2b774:	003fe706 	br	2b714 <__s2b+0xb4>
   2b778:	000b883a 	mov	r5,zero
   2b77c:	003fcd06 	br	2b6b4 <__s2b+0x54>

0002b780 <_realloc_r>:
   2b780:	defff404 	addi	sp,sp,-48
   2b784:	dd800815 	stw	r22,32(sp)
   2b788:	dc800415 	stw	r18,16(sp)
   2b78c:	dc400315 	stw	r17,12(sp)
   2b790:	dfc00b15 	stw	ra,44(sp)
   2b794:	df000a15 	stw	fp,40(sp)
   2b798:	ddc00915 	stw	r23,36(sp)
   2b79c:	dd400715 	stw	r21,28(sp)
   2b7a0:	dd000615 	stw	r20,24(sp)
   2b7a4:	dcc00515 	stw	r19,20(sp)
   2b7a8:	dc000215 	stw	r16,8(sp)
   2b7ac:	2825883a 	mov	r18,r5
   2b7b0:	3023883a 	mov	r17,r6
   2b7b4:	202d883a 	mov	r22,r4
   2b7b8:	2800c926 	beq	r5,zero,2bae0 <_realloc_r+0x360>
   2b7bc:	002d9b00 	call	2d9b0 <__malloc_lock>
   2b7c0:	943ffe04 	addi	r16,r18,-8
   2b7c4:	88c002c4 	addi	r3,r17,11
   2b7c8:	00800584 	movi	r2,22
   2b7cc:	82000117 	ldw	r8,4(r16)
   2b7d0:	10c01b2e 	bgeu	r2,r3,2b840 <_realloc_r+0xc0>
   2b7d4:	00bffe04 	movi	r2,-8
   2b7d8:	188e703a 	and	r7,r3,r2
   2b7dc:	3839883a 	mov	fp,r7
   2b7e0:	38001a16 	blt	r7,zero,2b84c <_realloc_r+0xcc>
   2b7e4:	e4401936 	bltu	fp,r17,2b84c <_realloc_r+0xcc>
   2b7e8:	013fff04 	movi	r4,-4
   2b7ec:	4126703a 	and	r19,r8,r4
   2b7f0:	99c02616 	blt	r19,r7,2b88c <_realloc_r+0x10c>
   2b7f4:	802b883a 	mov	r21,r16
   2b7f8:	9829883a 	mov	r20,r19
   2b7fc:	84000204 	addi	r16,r16,8
   2b800:	a80f883a 	mov	r7,r21
   2b804:	a70dc83a 	sub	r6,r20,fp
   2b808:	008003c4 	movi	r2,15
   2b80c:	1180c136 	bltu	r2,r6,2bb14 <_realloc_r+0x394>
   2b810:	38800117 	ldw	r2,4(r7)
   2b814:	a549883a 	add	r4,r20,r21
   2b818:	1080004c 	andi	r2,r2,1
   2b81c:	a084b03a 	or	r2,r20,r2
   2b820:	38800115 	stw	r2,4(r7)
   2b824:	20c00117 	ldw	r3,4(r4)
   2b828:	18c00054 	ori	r3,r3,1
   2b82c:	20c00115 	stw	r3,4(r4)
   2b830:	b009883a 	mov	r4,r22
   2b834:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2b838:	8023883a 	mov	r17,r16
   2b83c:	00000606 	br	2b858 <_realloc_r+0xd8>
   2b840:	01c00404 	movi	r7,16
   2b844:	3839883a 	mov	fp,r7
   2b848:	e47fe72e 	bgeu	fp,r17,2b7e8 <_realloc_r+0x68>
   2b84c:	00800304 	movi	r2,12
   2b850:	0023883a 	mov	r17,zero
   2b854:	b0800015 	stw	r2,0(r22)
   2b858:	8805883a 	mov	r2,r17
   2b85c:	dfc00b17 	ldw	ra,44(sp)
   2b860:	df000a17 	ldw	fp,40(sp)
   2b864:	ddc00917 	ldw	r23,36(sp)
   2b868:	dd800817 	ldw	r22,32(sp)
   2b86c:	dd400717 	ldw	r21,28(sp)
   2b870:	dd000617 	ldw	r20,24(sp)
   2b874:	dcc00517 	ldw	r19,20(sp)
   2b878:	dc800417 	ldw	r18,16(sp)
   2b87c:	dc400317 	ldw	r17,12(sp)
   2b880:	dc000217 	ldw	r16,8(sp)
   2b884:	dec00c04 	addi	sp,sp,48
   2b888:	f800283a 	ret
   2b88c:	008000f4 	movhi	r2,3
   2b890:	10811b04 	addi	r2,r2,1132
   2b894:	12400217 	ldw	r9,8(r2)
   2b898:	84cd883a 	add	r6,r16,r19
   2b89c:	802b883a 	mov	r21,r16
   2b8a0:	3240b926 	beq	r6,r9,2bb88 <_realloc_r+0x408>
   2b8a4:	31400117 	ldw	r5,4(r6)
   2b8a8:	00bfff84 	movi	r2,-2
   2b8ac:	2884703a 	and	r2,r5,r2
   2b8b0:	1185883a 	add	r2,r2,r6
   2b8b4:	10c00117 	ldw	r3,4(r2)
   2b8b8:	18c0004c 	andi	r3,r3,1
   2b8bc:	1807003a 	cmpeq	r3,r3,zero
   2b8c0:	1800a326 	beq	r3,zero,2bb50 <_realloc_r+0x3d0>
   2b8c4:	2908703a 	and	r4,r5,r4
   2b8c8:	9929883a 	add	r20,r19,r4
   2b8cc:	a1c0a30e 	bge	r20,r7,2bb5c <_realloc_r+0x3dc>
   2b8d0:	4080004c 	andi	r2,r8,1
   2b8d4:	1000551e 	bne	r2,zero,2ba2c <_realloc_r+0x2ac>
   2b8d8:	80800017 	ldw	r2,0(r16)
   2b8dc:	80afc83a 	sub	r23,r16,r2
   2b8e0:	b8c00117 	ldw	r3,4(r23)
   2b8e4:	00bfff04 	movi	r2,-4
   2b8e8:	1884703a 	and	r2,r3,r2
   2b8ec:	30002e26 	beq	r6,zero,2b9a8 <_realloc_r+0x228>
   2b8f0:	3240b926 	beq	r6,r9,2bbd8 <_realloc_r+0x458>
   2b8f4:	98a9883a 	add	r20,r19,r2
   2b8f8:	2509883a 	add	r4,r4,r20
   2b8fc:	d9000015 	stw	r4,0(sp)
   2b900:	21c02a16 	blt	r4,r7,2b9ac <_realloc_r+0x22c>
   2b904:	30800317 	ldw	r2,12(r6)
   2b908:	30c00217 	ldw	r3,8(r6)
   2b90c:	01400904 	movi	r5,36
   2b910:	99bfff04 	addi	r6,r19,-4
   2b914:	18800315 	stw	r2,12(r3)
   2b918:	10c00215 	stw	r3,8(r2)
   2b91c:	b9000317 	ldw	r4,12(r23)
   2b920:	b8800217 	ldw	r2,8(r23)
   2b924:	b82b883a 	mov	r21,r23
   2b928:	bc000204 	addi	r16,r23,8
   2b92c:	20800215 	stw	r2,8(r4)
   2b930:	11000315 	stw	r4,12(r2)
   2b934:	2980e436 	bltu	r5,r6,2bcc8 <_realloc_r+0x548>
   2b938:	008004c4 	movi	r2,19
   2b93c:	9009883a 	mov	r4,r18
   2b940:	8011883a 	mov	r8,r16
   2b944:	11800f2e 	bgeu	r2,r6,2b984 <_realloc_r+0x204>
   2b948:	90800017 	ldw	r2,0(r18)
   2b94c:	ba000404 	addi	r8,r23,16
   2b950:	91000204 	addi	r4,r18,8
   2b954:	b8800215 	stw	r2,8(r23)
   2b958:	90c00117 	ldw	r3,4(r18)
   2b95c:	008006c4 	movi	r2,27
   2b960:	b8c00315 	stw	r3,12(r23)
   2b964:	1180072e 	bgeu	r2,r6,2b984 <_realloc_r+0x204>
   2b968:	90c00217 	ldw	r3,8(r18)
   2b96c:	ba000604 	addi	r8,r23,24
   2b970:	91000404 	addi	r4,r18,16
   2b974:	b8c00415 	stw	r3,16(r23)
   2b978:	90800317 	ldw	r2,12(r18)
   2b97c:	b8800515 	stw	r2,20(r23)
   2b980:	3140e726 	beq	r6,r5,2bd20 <_realloc_r+0x5a0>
   2b984:	20800017 	ldw	r2,0(r4)
   2b988:	dd000017 	ldw	r20,0(sp)
   2b98c:	b80f883a 	mov	r7,r23
   2b990:	40800015 	stw	r2,0(r8)
   2b994:	20c00117 	ldw	r3,4(r4)
   2b998:	40c00115 	stw	r3,4(r8)
   2b99c:	20800217 	ldw	r2,8(r4)
   2b9a0:	40800215 	stw	r2,8(r8)
   2b9a4:	003f9706 	br	2b804 <_realloc_r+0x84>
   2b9a8:	98a9883a 	add	r20,r19,r2
   2b9ac:	a1c01f16 	blt	r20,r7,2ba2c <_realloc_r+0x2ac>
   2b9b0:	b8c00317 	ldw	r3,12(r23)
   2b9b4:	b8800217 	ldw	r2,8(r23)
   2b9b8:	99bfff04 	addi	r6,r19,-4
   2b9bc:	01400904 	movi	r5,36
   2b9c0:	b82b883a 	mov	r21,r23
   2b9c4:	18800215 	stw	r2,8(r3)
   2b9c8:	10c00315 	stw	r3,12(r2)
   2b9cc:	bc000204 	addi	r16,r23,8
   2b9d0:	2980c336 	bltu	r5,r6,2bce0 <_realloc_r+0x560>
   2b9d4:	008004c4 	movi	r2,19
   2b9d8:	9009883a 	mov	r4,r18
   2b9dc:	8011883a 	mov	r8,r16
   2b9e0:	11800f2e 	bgeu	r2,r6,2ba20 <_realloc_r+0x2a0>
   2b9e4:	90800017 	ldw	r2,0(r18)
   2b9e8:	ba000404 	addi	r8,r23,16
   2b9ec:	91000204 	addi	r4,r18,8
   2b9f0:	b8800215 	stw	r2,8(r23)
   2b9f4:	90c00117 	ldw	r3,4(r18)
   2b9f8:	008006c4 	movi	r2,27
   2b9fc:	b8c00315 	stw	r3,12(r23)
   2ba00:	1180072e 	bgeu	r2,r6,2ba20 <_realloc_r+0x2a0>
   2ba04:	90c00217 	ldw	r3,8(r18)
   2ba08:	ba000604 	addi	r8,r23,24
   2ba0c:	91000404 	addi	r4,r18,16
   2ba10:	b8c00415 	stw	r3,16(r23)
   2ba14:	90800317 	ldw	r2,12(r18)
   2ba18:	b8800515 	stw	r2,20(r23)
   2ba1c:	3140c726 	beq	r6,r5,2bd3c <_realloc_r+0x5bc>
   2ba20:	20800017 	ldw	r2,0(r4)
   2ba24:	b80f883a 	mov	r7,r23
   2ba28:	003fd906 	br	2b990 <_realloc_r+0x210>
   2ba2c:	880b883a 	mov	r5,r17
   2ba30:	b009883a 	mov	r4,r22
   2ba34:	0029d500 	call	29d50 <_malloc_r>
   2ba38:	1023883a 	mov	r17,r2
   2ba3c:	10002526 	beq	r2,zero,2bad4 <_realloc_r+0x354>
   2ba40:	80800117 	ldw	r2,4(r16)
   2ba44:	00ffff84 	movi	r3,-2
   2ba48:	893ffe04 	addi	r4,r17,-8
   2ba4c:	10c4703a 	and	r2,r2,r3
   2ba50:	8085883a 	add	r2,r16,r2
   2ba54:	20809526 	beq	r4,r2,2bcac <_realloc_r+0x52c>
   2ba58:	99bfff04 	addi	r6,r19,-4
   2ba5c:	01c00904 	movi	r7,36
   2ba60:	39804536 	bltu	r7,r6,2bb78 <_realloc_r+0x3f8>
   2ba64:	008004c4 	movi	r2,19
   2ba68:	9009883a 	mov	r4,r18
   2ba6c:	880b883a 	mov	r5,r17
   2ba70:	11800f2e 	bgeu	r2,r6,2bab0 <_realloc_r+0x330>
   2ba74:	90800017 	ldw	r2,0(r18)
   2ba78:	89400204 	addi	r5,r17,8
   2ba7c:	91000204 	addi	r4,r18,8
   2ba80:	88800015 	stw	r2,0(r17)
   2ba84:	90c00117 	ldw	r3,4(r18)
   2ba88:	008006c4 	movi	r2,27
   2ba8c:	88c00115 	stw	r3,4(r17)
   2ba90:	1180072e 	bgeu	r2,r6,2bab0 <_realloc_r+0x330>
   2ba94:	90c00217 	ldw	r3,8(r18)
   2ba98:	89400404 	addi	r5,r17,16
   2ba9c:	91000404 	addi	r4,r18,16
   2baa0:	88c00215 	stw	r3,8(r17)
   2baa4:	90800317 	ldw	r2,12(r18)
   2baa8:	88800315 	stw	r2,12(r17)
   2baac:	31c09126 	beq	r6,r7,2bcf4 <_realloc_r+0x574>
   2bab0:	20800017 	ldw	r2,0(r4)
   2bab4:	28800015 	stw	r2,0(r5)
   2bab8:	20c00117 	ldw	r3,4(r4)
   2babc:	28c00115 	stw	r3,4(r5)
   2bac0:	20800217 	ldw	r2,8(r4)
   2bac4:	28800215 	stw	r2,8(r5)
   2bac8:	900b883a 	mov	r5,r18
   2bacc:	b009883a 	mov	r4,r22
   2bad0:	00291c80 	call	291c8 <_free_r>
   2bad4:	b009883a 	mov	r4,r22
   2bad8:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2badc:	003f5e06 	br	2b858 <_realloc_r+0xd8>
   2bae0:	300b883a 	mov	r5,r6
   2bae4:	dfc00b17 	ldw	ra,44(sp)
   2bae8:	df000a17 	ldw	fp,40(sp)
   2baec:	ddc00917 	ldw	r23,36(sp)
   2baf0:	dd800817 	ldw	r22,32(sp)
   2baf4:	dd400717 	ldw	r21,28(sp)
   2baf8:	dd000617 	ldw	r20,24(sp)
   2bafc:	dcc00517 	ldw	r19,20(sp)
   2bb00:	dc800417 	ldw	r18,16(sp)
   2bb04:	dc400317 	ldw	r17,12(sp)
   2bb08:	dc000217 	ldw	r16,8(sp)
   2bb0c:	dec00c04 	addi	sp,sp,48
   2bb10:	0029d501 	jmpi	29d50 <_malloc_r>
   2bb14:	38800117 	ldw	r2,4(r7)
   2bb18:	e54b883a 	add	r5,fp,r21
   2bb1c:	31000054 	ori	r4,r6,1
   2bb20:	1080004c 	andi	r2,r2,1
   2bb24:	1704b03a 	or	r2,r2,fp
   2bb28:	38800115 	stw	r2,4(r7)
   2bb2c:	29000115 	stw	r4,4(r5)
   2bb30:	2987883a 	add	r3,r5,r6
   2bb34:	18800117 	ldw	r2,4(r3)
   2bb38:	29400204 	addi	r5,r5,8
   2bb3c:	b009883a 	mov	r4,r22
   2bb40:	10800054 	ori	r2,r2,1
   2bb44:	18800115 	stw	r2,4(r3)
   2bb48:	00291c80 	call	291c8 <_free_r>
   2bb4c:	003f3806 	br	2b830 <_realloc_r+0xb0>
   2bb50:	000d883a 	mov	r6,zero
   2bb54:	0009883a 	mov	r4,zero
   2bb58:	003f5d06 	br	2b8d0 <_realloc_r+0x150>
   2bb5c:	30c00217 	ldw	r3,8(r6)
   2bb60:	30800317 	ldw	r2,12(r6)
   2bb64:	800f883a 	mov	r7,r16
   2bb68:	84000204 	addi	r16,r16,8
   2bb6c:	10c00215 	stw	r3,8(r2)
   2bb70:	18800315 	stw	r2,12(r3)
   2bb74:	003f2306 	br	2b804 <_realloc_r+0x84>
   2bb78:	8809883a 	mov	r4,r17
   2bb7c:	900b883a 	mov	r5,r18
   2bb80:	002a6140 	call	2a614 <memmove>
   2bb84:	003fd006 	br	2bac8 <_realloc_r+0x348>
   2bb88:	30800117 	ldw	r2,4(r6)
   2bb8c:	e0c00404 	addi	r3,fp,16
   2bb90:	1108703a 	and	r4,r2,r4
   2bb94:	9905883a 	add	r2,r19,r4
   2bb98:	10ff4d16 	blt	r2,r3,2b8d0 <_realloc_r+0x150>
   2bb9c:	1705c83a 	sub	r2,r2,fp
   2bba0:	870b883a 	add	r5,r16,fp
   2bba4:	10800054 	ori	r2,r2,1
   2bba8:	28800115 	stw	r2,4(r5)
   2bbac:	80c00117 	ldw	r3,4(r16)
   2bbb0:	008000f4 	movhi	r2,3
   2bbb4:	10811b04 	addi	r2,r2,1132
   2bbb8:	b009883a 	mov	r4,r22
   2bbbc:	18c0004c 	andi	r3,r3,1
   2bbc0:	e0c6b03a 	or	r3,fp,r3
   2bbc4:	11400215 	stw	r5,8(r2)
   2bbc8:	80c00115 	stw	r3,4(r16)
   2bbcc:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2bbd0:	84400204 	addi	r17,r16,8
   2bbd4:	003f2006 	br	2b858 <_realloc_r+0xd8>
   2bbd8:	98a9883a 	add	r20,r19,r2
   2bbdc:	2509883a 	add	r4,r4,r20
   2bbe0:	e0800404 	addi	r2,fp,16
   2bbe4:	d9000115 	stw	r4,4(sp)
   2bbe8:	20bf7016 	blt	r4,r2,2b9ac <_realloc_r+0x22c>
   2bbec:	b8c00317 	ldw	r3,12(r23)
   2bbf0:	b8800217 	ldw	r2,8(r23)
   2bbf4:	99bfff04 	addi	r6,r19,-4
   2bbf8:	01400904 	movi	r5,36
   2bbfc:	18800215 	stw	r2,8(r3)
   2bc00:	10c00315 	stw	r3,12(r2)
   2bc04:	bc400204 	addi	r17,r23,8
   2bc08:	29804136 	bltu	r5,r6,2bd10 <_realloc_r+0x590>
   2bc0c:	008004c4 	movi	r2,19
   2bc10:	9009883a 	mov	r4,r18
   2bc14:	880f883a 	mov	r7,r17
   2bc18:	11800f2e 	bgeu	r2,r6,2bc58 <_realloc_r+0x4d8>
   2bc1c:	90800017 	ldw	r2,0(r18)
   2bc20:	b9c00404 	addi	r7,r23,16
   2bc24:	91000204 	addi	r4,r18,8
   2bc28:	b8800215 	stw	r2,8(r23)
   2bc2c:	90c00117 	ldw	r3,4(r18)
   2bc30:	008006c4 	movi	r2,27
   2bc34:	b8c00315 	stw	r3,12(r23)
   2bc38:	1180072e 	bgeu	r2,r6,2bc58 <_realloc_r+0x4d8>
   2bc3c:	90c00217 	ldw	r3,8(r18)
   2bc40:	b9c00604 	addi	r7,r23,24
   2bc44:	91000404 	addi	r4,r18,16
   2bc48:	b8c00415 	stw	r3,16(r23)
   2bc4c:	90800317 	ldw	r2,12(r18)
   2bc50:	b8800515 	stw	r2,20(r23)
   2bc54:	31404026 	beq	r6,r5,2bd58 <_realloc_r+0x5d8>
   2bc58:	20800017 	ldw	r2,0(r4)
   2bc5c:	38800015 	stw	r2,0(r7)
   2bc60:	20c00117 	ldw	r3,4(r4)
   2bc64:	38c00115 	stw	r3,4(r7)
   2bc68:	20800217 	ldw	r2,8(r4)
   2bc6c:	38800215 	stw	r2,8(r7)
   2bc70:	d8c00117 	ldw	r3,4(sp)
   2bc74:	bf0b883a 	add	r5,r23,fp
   2bc78:	b009883a 	mov	r4,r22
   2bc7c:	1f05c83a 	sub	r2,r3,fp
   2bc80:	10800054 	ori	r2,r2,1
   2bc84:	28800115 	stw	r2,4(r5)
   2bc88:	b8c00117 	ldw	r3,4(r23)
   2bc8c:	008000f4 	movhi	r2,3
   2bc90:	10811b04 	addi	r2,r2,1132
   2bc94:	11400215 	stw	r5,8(r2)
   2bc98:	18c0004c 	andi	r3,r3,1
   2bc9c:	e0c6b03a 	or	r3,fp,r3
   2bca0:	b8c00115 	stw	r3,4(r23)
   2bca4:	002d9d00 	call	2d9d0 <__malloc_unlock>
   2bca8:	003eeb06 	br	2b858 <_realloc_r+0xd8>
   2bcac:	20800117 	ldw	r2,4(r4)
   2bcb0:	00ffff04 	movi	r3,-4
   2bcb4:	800f883a 	mov	r7,r16
   2bcb8:	10c4703a 	and	r2,r2,r3
   2bcbc:	98a9883a 	add	r20,r19,r2
   2bcc0:	84000204 	addi	r16,r16,8
   2bcc4:	003ecf06 	br	2b804 <_realloc_r+0x84>
   2bcc8:	900b883a 	mov	r5,r18
   2bccc:	8009883a 	mov	r4,r16
   2bcd0:	002a6140 	call	2a614 <memmove>
   2bcd4:	dd000017 	ldw	r20,0(sp)
   2bcd8:	b80f883a 	mov	r7,r23
   2bcdc:	003ec906 	br	2b804 <_realloc_r+0x84>
   2bce0:	900b883a 	mov	r5,r18
   2bce4:	8009883a 	mov	r4,r16
   2bce8:	002a6140 	call	2a614 <memmove>
   2bcec:	b80f883a 	mov	r7,r23
   2bcf0:	003ec406 	br	2b804 <_realloc_r+0x84>
   2bcf4:	90c00417 	ldw	r3,16(r18)
   2bcf8:	89400604 	addi	r5,r17,24
   2bcfc:	91000604 	addi	r4,r18,24
   2bd00:	88c00415 	stw	r3,16(r17)
   2bd04:	90800517 	ldw	r2,20(r18)
   2bd08:	88800515 	stw	r2,20(r17)
   2bd0c:	003f6806 	br	2bab0 <_realloc_r+0x330>
   2bd10:	900b883a 	mov	r5,r18
   2bd14:	8809883a 	mov	r4,r17
   2bd18:	002a6140 	call	2a614 <memmove>
   2bd1c:	003fd406 	br	2bc70 <_realloc_r+0x4f0>
   2bd20:	90c00417 	ldw	r3,16(r18)
   2bd24:	91000604 	addi	r4,r18,24
   2bd28:	ba000804 	addi	r8,r23,32
   2bd2c:	b8c00615 	stw	r3,24(r23)
   2bd30:	90800517 	ldw	r2,20(r18)
   2bd34:	b8800715 	stw	r2,28(r23)
   2bd38:	003f1206 	br	2b984 <_realloc_r+0x204>
   2bd3c:	90c00417 	ldw	r3,16(r18)
   2bd40:	91000604 	addi	r4,r18,24
   2bd44:	ba000804 	addi	r8,r23,32
   2bd48:	b8c00615 	stw	r3,24(r23)
   2bd4c:	90800517 	ldw	r2,20(r18)
   2bd50:	b8800715 	stw	r2,28(r23)
   2bd54:	003f3206 	br	2ba20 <_realloc_r+0x2a0>
   2bd58:	90c00417 	ldw	r3,16(r18)
   2bd5c:	91000604 	addi	r4,r18,24
   2bd60:	b9c00804 	addi	r7,r23,32
   2bd64:	b8c00615 	stw	r3,24(r23)
   2bd68:	90800517 	ldw	r2,20(r18)
   2bd6c:	b8800715 	stw	r2,28(r23)
   2bd70:	003fb906 	br	2bc58 <_realloc_r+0x4d8>

0002bd74 <__isinfd>:
   2bd74:	200d883a 	mov	r6,r4
   2bd78:	0109c83a 	sub	r4,zero,r4
   2bd7c:	2188b03a 	or	r4,r4,r6
   2bd80:	2008d7fa 	srli	r4,r4,31
   2bd84:	00a00034 	movhi	r2,32768
   2bd88:	10bfffc4 	addi	r2,r2,-1
   2bd8c:	1144703a 	and	r2,r2,r5
   2bd90:	2088b03a 	or	r4,r4,r2
   2bd94:	009ffc34 	movhi	r2,32752
   2bd98:	1105c83a 	sub	r2,r2,r4
   2bd9c:	0087c83a 	sub	r3,zero,r2
   2bda0:	10c4b03a 	or	r2,r2,r3
   2bda4:	1004d7fa 	srli	r2,r2,31
   2bda8:	00c00044 	movi	r3,1
   2bdac:	1885c83a 	sub	r2,r3,r2
   2bdb0:	f800283a 	ret

0002bdb4 <_sbrk_r>:
   2bdb4:	defffd04 	addi	sp,sp,-12
   2bdb8:	dc000015 	stw	r16,0(sp)
   2bdbc:	040000f4 	movhi	r16,3
   2bdc0:	840d6d04 	addi	r16,r16,13748
   2bdc4:	dc400115 	stw	r17,4(sp)
   2bdc8:	80000015 	stw	zero,0(r16)
   2bdcc:	2023883a 	mov	r17,r4
   2bdd0:	2809883a 	mov	r4,r5
   2bdd4:	dfc00215 	stw	ra,8(sp)
   2bdd8:	002dbd00 	call	2dbd0 <sbrk>
   2bddc:	1007883a 	mov	r3,r2
   2bde0:	00bfffc4 	movi	r2,-1
   2bde4:	18800626 	beq	r3,r2,2be00 <_sbrk_r+0x4c>
   2bde8:	1805883a 	mov	r2,r3
   2bdec:	dfc00217 	ldw	ra,8(sp)
   2bdf0:	dc400117 	ldw	r17,4(sp)
   2bdf4:	dc000017 	ldw	r16,0(sp)
   2bdf8:	dec00304 	addi	sp,sp,12
   2bdfc:	f800283a 	ret
   2be00:	80800017 	ldw	r2,0(r16)
   2be04:	103ff826 	beq	r2,zero,2bde8 <_sbrk_r+0x34>
   2be08:	88800015 	stw	r2,0(r17)
   2be0c:	1805883a 	mov	r2,r3
   2be10:	dfc00217 	ldw	ra,8(sp)
   2be14:	dc400117 	ldw	r17,4(sp)
   2be18:	dc000017 	ldw	r16,0(sp)
   2be1c:	dec00304 	addi	sp,sp,12
   2be20:	f800283a 	ret

0002be24 <__sclose>:
   2be24:	2940038f 	ldh	r5,14(r5)
   2be28:	002c1581 	jmpi	2c158 <_close_r>

0002be2c <__sseek>:
   2be2c:	defffe04 	addi	sp,sp,-8
   2be30:	dc000015 	stw	r16,0(sp)
   2be34:	2821883a 	mov	r16,r5
   2be38:	2940038f 	ldh	r5,14(r5)
   2be3c:	dfc00115 	stw	ra,4(sp)
   2be40:	002c3d00 	call	2c3d0 <_lseek_r>
   2be44:	1007883a 	mov	r3,r2
   2be48:	00bfffc4 	movi	r2,-1
   2be4c:	18800926 	beq	r3,r2,2be74 <__sseek+0x48>
   2be50:	8080030b 	ldhu	r2,12(r16)
   2be54:	80c01415 	stw	r3,80(r16)
   2be58:	10840014 	ori	r2,r2,4096
   2be5c:	8080030d 	sth	r2,12(r16)
   2be60:	1805883a 	mov	r2,r3
   2be64:	dfc00117 	ldw	ra,4(sp)
   2be68:	dc000017 	ldw	r16,0(sp)
   2be6c:	dec00204 	addi	sp,sp,8
   2be70:	f800283a 	ret
   2be74:	8080030b 	ldhu	r2,12(r16)
   2be78:	10bbffcc 	andi	r2,r2,61439
   2be7c:	8080030d 	sth	r2,12(r16)
   2be80:	1805883a 	mov	r2,r3
   2be84:	dfc00117 	ldw	ra,4(sp)
   2be88:	dc000017 	ldw	r16,0(sp)
   2be8c:	dec00204 	addi	sp,sp,8
   2be90:	f800283a 	ret

0002be94 <__swrite>:
   2be94:	2880030b 	ldhu	r2,12(r5)
   2be98:	defffb04 	addi	sp,sp,-20
   2be9c:	dcc00315 	stw	r19,12(sp)
   2bea0:	1080400c 	andi	r2,r2,256
   2bea4:	dc800215 	stw	r18,8(sp)
   2bea8:	dc400115 	stw	r17,4(sp)
   2beac:	dc000015 	stw	r16,0(sp)
   2beb0:	3027883a 	mov	r19,r6
   2beb4:	3825883a 	mov	r18,r7
   2beb8:	dfc00415 	stw	ra,16(sp)
   2bebc:	2821883a 	mov	r16,r5
   2bec0:	000d883a 	mov	r6,zero
   2bec4:	01c00084 	movi	r7,2
   2bec8:	2023883a 	mov	r17,r4
   2becc:	10000226 	beq	r2,zero,2bed8 <__swrite+0x44>
   2bed0:	2940038f 	ldh	r5,14(r5)
   2bed4:	002c3d00 	call	2c3d0 <_lseek_r>
   2bed8:	8080030b 	ldhu	r2,12(r16)
   2bedc:	8140038f 	ldh	r5,14(r16)
   2bee0:	8809883a 	mov	r4,r17
   2bee4:	10bbffcc 	andi	r2,r2,61439
   2bee8:	980d883a 	mov	r6,r19
   2beec:	900f883a 	mov	r7,r18
   2bef0:	8080030d 	sth	r2,12(r16)
   2bef4:	dfc00417 	ldw	ra,16(sp)
   2bef8:	dcc00317 	ldw	r19,12(sp)
   2befc:	dc800217 	ldw	r18,8(sp)
   2bf00:	dc400117 	ldw	r17,4(sp)
   2bf04:	dc000017 	ldw	r16,0(sp)
   2bf08:	dec00504 	addi	sp,sp,20
   2bf0c:	002c02c1 	jmpi	2c02c <_write_r>

0002bf10 <__sread>:
   2bf10:	defffe04 	addi	sp,sp,-8
   2bf14:	dc000015 	stw	r16,0(sp)
   2bf18:	2821883a 	mov	r16,r5
   2bf1c:	2940038f 	ldh	r5,14(r5)
   2bf20:	dfc00115 	stw	ra,4(sp)
   2bf24:	002c4480 	call	2c448 <_read_r>
   2bf28:	1007883a 	mov	r3,r2
   2bf2c:	10000816 	blt	r2,zero,2bf50 <__sread+0x40>
   2bf30:	80801417 	ldw	r2,80(r16)
   2bf34:	10c5883a 	add	r2,r2,r3
   2bf38:	80801415 	stw	r2,80(r16)
   2bf3c:	1805883a 	mov	r2,r3
   2bf40:	dfc00117 	ldw	ra,4(sp)
   2bf44:	dc000017 	ldw	r16,0(sp)
   2bf48:	dec00204 	addi	sp,sp,8
   2bf4c:	f800283a 	ret
   2bf50:	8080030b 	ldhu	r2,12(r16)
   2bf54:	10bbffcc 	andi	r2,r2,61439
   2bf58:	8080030d 	sth	r2,12(r16)
   2bf5c:	1805883a 	mov	r2,r3
   2bf60:	dfc00117 	ldw	ra,4(sp)
   2bf64:	dc000017 	ldw	r16,0(sp)
   2bf68:	dec00204 	addi	sp,sp,8
   2bf6c:	f800283a 	ret

0002bf70 <strcmp>:
   2bf70:	2144b03a 	or	r2,r4,r5
   2bf74:	108000cc 	andi	r2,r2,3
   2bf78:	10001d1e 	bne	r2,zero,2bff0 <strcmp+0x80>
   2bf7c:	200f883a 	mov	r7,r4
   2bf80:	28800017 	ldw	r2,0(r5)
   2bf84:	21000017 	ldw	r4,0(r4)
   2bf88:	280d883a 	mov	r6,r5
   2bf8c:	2080161e 	bne	r4,r2,2bfe8 <strcmp+0x78>
   2bf90:	023fbff4 	movhi	r8,65279
   2bf94:	423fbfc4 	addi	r8,r8,-257
   2bf98:	2207883a 	add	r3,r4,r8
   2bf9c:	01602074 	movhi	r5,32897
   2bfa0:	29602004 	addi	r5,r5,-32640
   2bfa4:	1946703a 	and	r3,r3,r5
   2bfa8:	0104303a 	nor	r2,zero,r4
   2bfac:	10c4703a 	and	r2,r2,r3
   2bfb0:	10001c1e 	bne	r2,zero,2c024 <strcmp+0xb4>
   2bfb4:	4013883a 	mov	r9,r8
   2bfb8:	2811883a 	mov	r8,r5
   2bfbc:	00000106 	br	2bfc4 <strcmp+0x54>
   2bfc0:	1800181e 	bne	r3,zero,2c024 <strcmp+0xb4>
   2bfc4:	39c00104 	addi	r7,r7,4
   2bfc8:	39000017 	ldw	r4,0(r7)
   2bfcc:	31800104 	addi	r6,r6,4
   2bfd0:	31400017 	ldw	r5,0(r6)
   2bfd4:	2245883a 	add	r2,r4,r9
   2bfd8:	1204703a 	and	r2,r2,r8
   2bfdc:	0106303a 	nor	r3,zero,r4
   2bfe0:	1886703a 	and	r3,r3,r2
   2bfe4:	217ff626 	beq	r4,r5,2bfc0 <strcmp+0x50>
   2bfe8:	3809883a 	mov	r4,r7
   2bfec:	300b883a 	mov	r5,r6
   2bff0:	20c00007 	ldb	r3,0(r4)
   2bff4:	1800051e 	bne	r3,zero,2c00c <strcmp+0x9c>
   2bff8:	00000606 	br	2c014 <strcmp+0xa4>
   2bffc:	21000044 	addi	r4,r4,1
   2c000:	20c00007 	ldb	r3,0(r4)
   2c004:	29400044 	addi	r5,r5,1
   2c008:	18000226 	beq	r3,zero,2c014 <strcmp+0xa4>
   2c00c:	28800007 	ldb	r2,0(r5)
   2c010:	18bffa26 	beq	r3,r2,2bffc <strcmp+0x8c>
   2c014:	20c00003 	ldbu	r3,0(r4)
   2c018:	28800003 	ldbu	r2,0(r5)
   2c01c:	1885c83a 	sub	r2,r3,r2
   2c020:	f800283a 	ret
   2c024:	0005883a 	mov	r2,zero
   2c028:	f800283a 	ret

0002c02c <_write_r>:
   2c02c:	defffd04 	addi	sp,sp,-12
   2c030:	dc000015 	stw	r16,0(sp)
   2c034:	040000f4 	movhi	r16,3
   2c038:	840d6d04 	addi	r16,r16,13748
   2c03c:	dc400115 	stw	r17,4(sp)
   2c040:	80000015 	stw	zero,0(r16)
   2c044:	2023883a 	mov	r17,r4
   2c048:	2809883a 	mov	r4,r5
   2c04c:	300b883a 	mov	r5,r6
   2c050:	380d883a 	mov	r6,r7
   2c054:	dfc00215 	stw	ra,8(sp)
   2c058:	002dc8c0 	call	2dc8c <write>
   2c05c:	1007883a 	mov	r3,r2
   2c060:	00bfffc4 	movi	r2,-1
   2c064:	18800626 	beq	r3,r2,2c080 <_write_r+0x54>
   2c068:	1805883a 	mov	r2,r3
   2c06c:	dfc00217 	ldw	ra,8(sp)
   2c070:	dc400117 	ldw	r17,4(sp)
   2c074:	dc000017 	ldw	r16,0(sp)
   2c078:	dec00304 	addi	sp,sp,12
   2c07c:	f800283a 	ret
   2c080:	80800017 	ldw	r2,0(r16)
   2c084:	103ff826 	beq	r2,zero,2c068 <_write_r+0x3c>
   2c088:	88800015 	stw	r2,0(r17)
   2c08c:	1805883a 	mov	r2,r3
   2c090:	dfc00217 	ldw	ra,8(sp)
   2c094:	dc400117 	ldw	r17,4(sp)
   2c098:	dc000017 	ldw	r16,0(sp)
   2c09c:	dec00304 	addi	sp,sp,12
   2c0a0:	f800283a 	ret

0002c0a4 <_calloc_r>:
   2c0a4:	298b383a 	mul	r5,r5,r6
   2c0a8:	defffe04 	addi	sp,sp,-8
   2c0ac:	dc000015 	stw	r16,0(sp)
   2c0b0:	dfc00115 	stw	ra,4(sp)
   2c0b4:	0029d500 	call	29d50 <_malloc_r>
   2c0b8:	1021883a 	mov	r16,r2
   2c0bc:	01c00904 	movi	r7,36
   2c0c0:	10000d26 	beq	r2,zero,2c0f8 <_calloc_r+0x54>
   2c0c4:	10ffff17 	ldw	r3,-4(r2)
   2c0c8:	1009883a 	mov	r4,r2
   2c0cc:	00bfff04 	movi	r2,-4
   2c0d0:	1886703a 	and	r3,r3,r2
   2c0d4:	1887883a 	add	r3,r3,r2
   2c0d8:	180d883a 	mov	r6,r3
   2c0dc:	000b883a 	mov	r5,zero
   2c0e0:	38c01736 	bltu	r7,r3,2c140 <_calloc_r+0x9c>
   2c0e4:	008004c4 	movi	r2,19
   2c0e8:	10c00836 	bltu	r2,r3,2c10c <_calloc_r+0x68>
   2c0ec:	20000215 	stw	zero,8(r4)
   2c0f0:	20000015 	stw	zero,0(r4)
   2c0f4:	20000115 	stw	zero,4(r4)
   2c0f8:	8005883a 	mov	r2,r16
   2c0fc:	dfc00117 	ldw	ra,4(sp)
   2c100:	dc000017 	ldw	r16,0(sp)
   2c104:	dec00204 	addi	sp,sp,8
   2c108:	f800283a 	ret
   2c10c:	008006c4 	movi	r2,27
   2c110:	80000015 	stw	zero,0(r16)
   2c114:	80000115 	stw	zero,4(r16)
   2c118:	81000204 	addi	r4,r16,8
   2c11c:	10fff32e 	bgeu	r2,r3,2c0ec <_calloc_r+0x48>
   2c120:	80000215 	stw	zero,8(r16)
   2c124:	80000315 	stw	zero,12(r16)
   2c128:	81000404 	addi	r4,r16,16
   2c12c:	19ffef1e 	bne	r3,r7,2c0ec <_calloc_r+0x48>
   2c130:	81000604 	addi	r4,r16,24
   2c134:	80000415 	stw	zero,16(r16)
   2c138:	80000515 	stw	zero,20(r16)
   2c13c:	003feb06 	br	2c0ec <_calloc_r+0x48>
   2c140:	002a6f40 	call	2a6f4 <memset>
   2c144:	8005883a 	mov	r2,r16
   2c148:	dfc00117 	ldw	ra,4(sp)
   2c14c:	dc000017 	ldw	r16,0(sp)
   2c150:	dec00204 	addi	sp,sp,8
   2c154:	f800283a 	ret

0002c158 <_close_r>:
   2c158:	defffd04 	addi	sp,sp,-12
   2c15c:	dc000015 	stw	r16,0(sp)
   2c160:	040000f4 	movhi	r16,3
   2c164:	840d6d04 	addi	r16,r16,13748
   2c168:	dc400115 	stw	r17,4(sp)
   2c16c:	80000015 	stw	zero,0(r16)
   2c170:	2023883a 	mov	r17,r4
   2c174:	2809883a 	mov	r4,r5
   2c178:	dfc00215 	stw	ra,8(sp)
   2c17c:	002d32c0 	call	2d32c <close>
   2c180:	1007883a 	mov	r3,r2
   2c184:	00bfffc4 	movi	r2,-1
   2c188:	18800626 	beq	r3,r2,2c1a4 <_close_r+0x4c>
   2c18c:	1805883a 	mov	r2,r3
   2c190:	dfc00217 	ldw	ra,8(sp)
   2c194:	dc400117 	ldw	r17,4(sp)
   2c198:	dc000017 	ldw	r16,0(sp)
   2c19c:	dec00304 	addi	sp,sp,12
   2c1a0:	f800283a 	ret
   2c1a4:	80800017 	ldw	r2,0(r16)
   2c1a8:	103ff826 	beq	r2,zero,2c18c <_close_r+0x34>
   2c1ac:	88800015 	stw	r2,0(r17)
   2c1b0:	1805883a 	mov	r2,r3
   2c1b4:	dfc00217 	ldw	ra,8(sp)
   2c1b8:	dc400117 	ldw	r17,4(sp)
   2c1bc:	dc000017 	ldw	r16,0(sp)
   2c1c0:	dec00304 	addi	sp,sp,12
   2c1c4:	f800283a 	ret

0002c1c8 <_fclose_r>:
   2c1c8:	defffc04 	addi	sp,sp,-16
   2c1cc:	dc400115 	stw	r17,4(sp)
   2c1d0:	dc000015 	stw	r16,0(sp)
   2c1d4:	dfc00315 	stw	ra,12(sp)
   2c1d8:	dc800215 	stw	r18,8(sp)
   2c1dc:	2821883a 	mov	r16,r5
   2c1e0:	2023883a 	mov	r17,r4
   2c1e4:	28002926 	beq	r5,zero,2c28c <_fclose_r+0xc4>
   2c1e8:	0028e340 	call	28e34 <__sfp_lock_acquire>
   2c1ec:	88000226 	beq	r17,zero,2c1f8 <_fclose_r+0x30>
   2c1f0:	88800e17 	ldw	r2,56(r17)
   2c1f4:	10002d26 	beq	r2,zero,2c2ac <_fclose_r+0xe4>
   2c1f8:	8080030f 	ldh	r2,12(r16)
   2c1fc:	10002226 	beq	r2,zero,2c288 <_fclose_r+0xc0>
   2c200:	8809883a 	mov	r4,r17
   2c204:	800b883a 	mov	r5,r16
   2c208:	0028bac0 	call	28bac <_fflush_r>
   2c20c:	1025883a 	mov	r18,r2
   2c210:	80800b17 	ldw	r2,44(r16)
   2c214:	10000426 	beq	r2,zero,2c228 <_fclose_r+0x60>
   2c218:	81400717 	ldw	r5,28(r16)
   2c21c:	8809883a 	mov	r4,r17
   2c220:	103ee83a 	callr	r2
   2c224:	10002a16 	blt	r2,zero,2c2d0 <_fclose_r+0x108>
   2c228:	8080030b 	ldhu	r2,12(r16)
   2c22c:	1080200c 	andi	r2,r2,128
   2c230:	1000231e 	bne	r2,zero,2c2c0 <_fclose_r+0xf8>
   2c234:	81400c17 	ldw	r5,48(r16)
   2c238:	28000526 	beq	r5,zero,2c250 <_fclose_r+0x88>
   2c23c:	80801004 	addi	r2,r16,64
   2c240:	28800226 	beq	r5,r2,2c24c <_fclose_r+0x84>
   2c244:	8809883a 	mov	r4,r17
   2c248:	00291c80 	call	291c8 <_free_r>
   2c24c:	80000c15 	stw	zero,48(r16)
   2c250:	81401117 	ldw	r5,68(r16)
   2c254:	28000326 	beq	r5,zero,2c264 <_fclose_r+0x9c>
   2c258:	8809883a 	mov	r4,r17
   2c25c:	00291c80 	call	291c8 <_free_r>
   2c260:	80001115 	stw	zero,68(r16)
   2c264:	8000030d 	sth	zero,12(r16)
   2c268:	0028e380 	call	28e38 <__sfp_lock_release>
   2c26c:	9005883a 	mov	r2,r18
   2c270:	dfc00317 	ldw	ra,12(sp)
   2c274:	dc800217 	ldw	r18,8(sp)
   2c278:	dc400117 	ldw	r17,4(sp)
   2c27c:	dc000017 	ldw	r16,0(sp)
   2c280:	dec00404 	addi	sp,sp,16
   2c284:	f800283a 	ret
   2c288:	0028e380 	call	28e38 <__sfp_lock_release>
   2c28c:	0025883a 	mov	r18,zero
   2c290:	9005883a 	mov	r2,r18
   2c294:	dfc00317 	ldw	ra,12(sp)
   2c298:	dc800217 	ldw	r18,8(sp)
   2c29c:	dc400117 	ldw	r17,4(sp)
   2c2a0:	dc000017 	ldw	r16,0(sp)
   2c2a4:	dec00404 	addi	sp,sp,16
   2c2a8:	f800283a 	ret
   2c2ac:	8809883a 	mov	r4,r17
   2c2b0:	0028e440 	call	28e44 <__sinit>
   2c2b4:	8080030f 	ldh	r2,12(r16)
   2c2b8:	103fd11e 	bne	r2,zero,2c200 <_fclose_r+0x38>
   2c2bc:	003ff206 	br	2c288 <_fclose_r+0xc0>
   2c2c0:	81400417 	ldw	r5,16(r16)
   2c2c4:	8809883a 	mov	r4,r17
   2c2c8:	00291c80 	call	291c8 <_free_r>
   2c2cc:	003fd906 	br	2c234 <_fclose_r+0x6c>
   2c2d0:	04bfffc4 	movi	r18,-1
   2c2d4:	003fd406 	br	2c228 <_fclose_r+0x60>

0002c2d8 <fclose>:
   2c2d8:	008000f4 	movhi	r2,3
   2c2dc:	1086af04 	addi	r2,r2,6844
   2c2e0:	200b883a 	mov	r5,r4
   2c2e4:	11000017 	ldw	r4,0(r2)
   2c2e8:	002c1c81 	jmpi	2c1c8 <_fclose_r>

0002c2ec <_fstat_r>:
   2c2ec:	defffd04 	addi	sp,sp,-12
   2c2f0:	dc000015 	stw	r16,0(sp)
   2c2f4:	040000f4 	movhi	r16,3
   2c2f8:	840d6d04 	addi	r16,r16,13748
   2c2fc:	dc400115 	stw	r17,4(sp)
   2c300:	80000015 	stw	zero,0(r16)
   2c304:	2023883a 	mov	r17,r4
   2c308:	2809883a 	mov	r4,r5
   2c30c:	300b883a 	mov	r5,r6
   2c310:	dfc00215 	stw	ra,8(sp)
   2c314:	002d4b40 	call	2d4b4 <fstat>
   2c318:	1007883a 	mov	r3,r2
   2c31c:	00bfffc4 	movi	r2,-1
   2c320:	18800626 	beq	r3,r2,2c33c <_fstat_r+0x50>
   2c324:	1805883a 	mov	r2,r3
   2c328:	dfc00217 	ldw	ra,8(sp)
   2c32c:	dc400117 	ldw	r17,4(sp)
   2c330:	dc000017 	ldw	r16,0(sp)
   2c334:	dec00304 	addi	sp,sp,12
   2c338:	f800283a 	ret
   2c33c:	80800017 	ldw	r2,0(r16)
   2c340:	103ff826 	beq	r2,zero,2c324 <_fstat_r+0x38>
   2c344:	88800015 	stw	r2,0(r17)
   2c348:	1805883a 	mov	r2,r3
   2c34c:	dfc00217 	ldw	ra,8(sp)
   2c350:	dc400117 	ldw	r17,4(sp)
   2c354:	dc000017 	ldw	r16,0(sp)
   2c358:	dec00304 	addi	sp,sp,12
   2c35c:	f800283a 	ret

0002c360 <_isatty_r>:
   2c360:	defffd04 	addi	sp,sp,-12
   2c364:	dc000015 	stw	r16,0(sp)
   2c368:	040000f4 	movhi	r16,3
   2c36c:	840d6d04 	addi	r16,r16,13748
   2c370:	dc400115 	stw	r17,4(sp)
   2c374:	80000015 	stw	zero,0(r16)
   2c378:	2023883a 	mov	r17,r4
   2c37c:	2809883a 	mov	r4,r5
   2c380:	dfc00215 	stw	ra,8(sp)
   2c384:	002d5e80 	call	2d5e8 <isatty>
   2c388:	1007883a 	mov	r3,r2
   2c38c:	00bfffc4 	movi	r2,-1
   2c390:	18800626 	beq	r3,r2,2c3ac <_isatty_r+0x4c>
   2c394:	1805883a 	mov	r2,r3
   2c398:	dfc00217 	ldw	ra,8(sp)
   2c39c:	dc400117 	ldw	r17,4(sp)
   2c3a0:	dc000017 	ldw	r16,0(sp)
   2c3a4:	dec00304 	addi	sp,sp,12
   2c3a8:	f800283a 	ret
   2c3ac:	80800017 	ldw	r2,0(r16)
   2c3b0:	103ff826 	beq	r2,zero,2c394 <_isatty_r+0x34>
   2c3b4:	88800015 	stw	r2,0(r17)
   2c3b8:	1805883a 	mov	r2,r3
   2c3bc:	dfc00217 	ldw	ra,8(sp)
   2c3c0:	dc400117 	ldw	r17,4(sp)
   2c3c4:	dc000017 	ldw	r16,0(sp)
   2c3c8:	dec00304 	addi	sp,sp,12
   2c3cc:	f800283a 	ret

0002c3d0 <_lseek_r>:
   2c3d0:	defffd04 	addi	sp,sp,-12
   2c3d4:	dc000015 	stw	r16,0(sp)
   2c3d8:	040000f4 	movhi	r16,3
   2c3dc:	840d6d04 	addi	r16,r16,13748
   2c3e0:	dc400115 	stw	r17,4(sp)
   2c3e4:	80000015 	stw	zero,0(r16)
   2c3e8:	2023883a 	mov	r17,r4
   2c3ec:	2809883a 	mov	r4,r5
   2c3f0:	300b883a 	mov	r5,r6
   2c3f4:	380d883a 	mov	r6,r7
   2c3f8:	dfc00215 	stw	ra,8(sp)
   2c3fc:	002d7f40 	call	2d7f4 <lseek>
   2c400:	1007883a 	mov	r3,r2
   2c404:	00bfffc4 	movi	r2,-1
   2c408:	18800626 	beq	r3,r2,2c424 <_lseek_r+0x54>
   2c40c:	1805883a 	mov	r2,r3
   2c410:	dfc00217 	ldw	ra,8(sp)
   2c414:	dc400117 	ldw	r17,4(sp)
   2c418:	dc000017 	ldw	r16,0(sp)
   2c41c:	dec00304 	addi	sp,sp,12
   2c420:	f800283a 	ret
   2c424:	80800017 	ldw	r2,0(r16)
   2c428:	103ff826 	beq	r2,zero,2c40c <_lseek_r+0x3c>
   2c42c:	88800015 	stw	r2,0(r17)
   2c430:	1805883a 	mov	r2,r3
   2c434:	dfc00217 	ldw	ra,8(sp)
   2c438:	dc400117 	ldw	r17,4(sp)
   2c43c:	dc000017 	ldw	r16,0(sp)
   2c440:	dec00304 	addi	sp,sp,12
   2c444:	f800283a 	ret

0002c448 <_read_r>:
   2c448:	defffd04 	addi	sp,sp,-12
   2c44c:	dc000015 	stw	r16,0(sp)
   2c450:	040000f4 	movhi	r16,3
   2c454:	840d6d04 	addi	r16,r16,13748
   2c458:	dc400115 	stw	r17,4(sp)
   2c45c:	80000015 	stw	zero,0(r16)
   2c460:	2023883a 	mov	r17,r4
   2c464:	2809883a 	mov	r4,r5
   2c468:	300b883a 	mov	r5,r6
   2c46c:	380d883a 	mov	r6,r7
   2c470:	dfc00215 	stw	ra,8(sp)
   2c474:	002d9f00 	call	2d9f0 <read>
   2c478:	1007883a 	mov	r3,r2
   2c47c:	00bfffc4 	movi	r2,-1
   2c480:	18800626 	beq	r3,r2,2c49c <_read_r+0x54>
   2c484:	1805883a 	mov	r2,r3
   2c488:	dfc00217 	ldw	ra,8(sp)
   2c48c:	dc400117 	ldw	r17,4(sp)
   2c490:	dc000017 	ldw	r16,0(sp)
   2c494:	dec00304 	addi	sp,sp,12
   2c498:	f800283a 	ret
   2c49c:	80800017 	ldw	r2,0(r16)
   2c4a0:	103ff826 	beq	r2,zero,2c484 <_read_r+0x3c>
   2c4a4:	88800015 	stw	r2,0(r17)
   2c4a8:	1805883a 	mov	r2,r3
   2c4ac:	dfc00217 	ldw	ra,8(sp)
   2c4b0:	dc400117 	ldw	r17,4(sp)
   2c4b4:	dc000017 	ldw	r16,0(sp)
   2c4b8:	dec00304 	addi	sp,sp,12
   2c4bc:	f800283a 	ret

0002c4c0 <__udivdi3>:
   2c4c0:	defff004 	addi	sp,sp,-64
   2c4c4:	2005883a 	mov	r2,r4
   2c4c8:	3011883a 	mov	r8,r6
   2c4cc:	df000e15 	stw	fp,56(sp)
   2c4d0:	dd000a15 	stw	r20,40(sp)
   2c4d4:	dc000615 	stw	r16,24(sp)
   2c4d8:	dfc00f15 	stw	ra,60(sp)
   2c4dc:	ddc00d15 	stw	r23,52(sp)
   2c4e0:	dd800c15 	stw	r22,48(sp)
   2c4e4:	dd400b15 	stw	r21,44(sp)
   2c4e8:	dcc00915 	stw	r19,36(sp)
   2c4ec:	dc800815 	stw	r18,32(sp)
   2c4f0:	dc400715 	stw	r17,28(sp)
   2c4f4:	4021883a 	mov	r16,r8
   2c4f8:	1039883a 	mov	fp,r2
   2c4fc:	2829883a 	mov	r20,r5
   2c500:	38003b1e 	bne	r7,zero,2c5f0 <__udivdi3+0x130>
   2c504:	2a005c36 	bltu	r5,r8,2c678 <__udivdi3+0x1b8>
   2c508:	4000a626 	beq	r8,zero,2c7a4 <__udivdi3+0x2e4>
   2c50c:	00bfffd4 	movui	r2,65535
   2c510:	14009e36 	bltu	r2,r16,2c78c <__udivdi3+0x2cc>
   2c514:	00803fc4 	movi	r2,255
   2c518:	14013d36 	bltu	r2,r16,2ca10 <__udivdi3+0x550>
   2c51c:	000b883a 	mov	r5,zero
   2c520:	0005883a 	mov	r2,zero
   2c524:	8084d83a 	srl	r2,r16,r2
   2c528:	010000f4 	movhi	r4,3
   2c52c:	213f4c04 	addi	r4,r4,-720
   2c530:	01800804 	movi	r6,32
   2c534:	1105883a 	add	r2,r2,r4
   2c538:	10c00003 	ldbu	r3,0(r2)
   2c53c:	28c7883a 	add	r3,r5,r3
   2c540:	30edc83a 	sub	r22,r6,r3
   2c544:	b000ee1e 	bne	r22,zero,2c900 <__udivdi3+0x440>
   2c548:	802ad43a 	srli	r21,r16,16
   2c54c:	00800044 	movi	r2,1
   2c550:	a423c83a 	sub	r17,r20,r16
   2c554:	85ffffcc 	andi	r23,r16,65535
   2c558:	d8800315 	stw	r2,12(sp)
   2c55c:	8809883a 	mov	r4,r17
   2c560:	a80b883a 	mov	r5,r21
   2c564:	002d31c0 	call	2d31c <__udivsi3>
   2c568:	8809883a 	mov	r4,r17
   2c56c:	a80b883a 	mov	r5,r21
   2c570:	102d883a 	mov	r22,r2
   2c574:	002d3240 	call	2d324 <__umodsi3>
   2c578:	1004943a 	slli	r2,r2,16
   2c57c:	e006d43a 	srli	r3,fp,16
   2c580:	bda3383a 	mul	r17,r23,r22
   2c584:	10c4b03a 	or	r2,r2,r3
   2c588:	1440042e 	bgeu	r2,r17,2c59c <__udivdi3+0xdc>
   2c58c:	1405883a 	add	r2,r2,r16
   2c590:	b5bfffc4 	addi	r22,r22,-1
   2c594:	14000136 	bltu	r2,r16,2c59c <__udivdi3+0xdc>
   2c598:	14413d36 	bltu	r2,r17,2ca90 <__udivdi3+0x5d0>
   2c59c:	1463c83a 	sub	r17,r2,r17
   2c5a0:	8809883a 	mov	r4,r17
   2c5a4:	a80b883a 	mov	r5,r21
   2c5a8:	002d31c0 	call	2d31c <__udivsi3>
   2c5ac:	8809883a 	mov	r4,r17
   2c5b0:	a80b883a 	mov	r5,r21
   2c5b4:	1029883a 	mov	r20,r2
   2c5b8:	002d3240 	call	2d324 <__umodsi3>
   2c5bc:	1004943a 	slli	r2,r2,16
   2c5c0:	bd09383a 	mul	r4,r23,r20
   2c5c4:	e0ffffcc 	andi	r3,fp,65535
   2c5c8:	10c4b03a 	or	r2,r2,r3
   2c5cc:	1100042e 	bgeu	r2,r4,2c5e0 <__udivdi3+0x120>
   2c5d0:	8085883a 	add	r2,r16,r2
   2c5d4:	a53fffc4 	addi	r20,r20,-1
   2c5d8:	14000136 	bltu	r2,r16,2c5e0 <__udivdi3+0x120>
   2c5dc:	11012036 	bltu	r2,r4,2ca60 <__udivdi3+0x5a0>
   2c5e0:	b004943a 	slli	r2,r22,16
   2c5e4:	d9000317 	ldw	r4,12(sp)
   2c5e8:	a084b03a 	or	r2,r20,r2
   2c5ec:	00001506 	br	2c644 <__udivdi3+0x184>
   2c5f0:	380d883a 	mov	r6,r7
   2c5f4:	29c06236 	bltu	r5,r7,2c780 <__udivdi3+0x2c0>
   2c5f8:	00bfffd4 	movui	r2,65535
   2c5fc:	11c05a36 	bltu	r2,r7,2c768 <__udivdi3+0x2a8>
   2c600:	00803fc4 	movi	r2,255
   2c604:	11c0fc36 	bltu	r2,r7,2c9f8 <__udivdi3+0x538>
   2c608:	000b883a 	mov	r5,zero
   2c60c:	0005883a 	mov	r2,zero
   2c610:	3084d83a 	srl	r2,r6,r2
   2c614:	010000f4 	movhi	r4,3
   2c618:	213f4c04 	addi	r4,r4,-720
   2c61c:	01c00804 	movi	r7,32
   2c620:	1105883a 	add	r2,r2,r4
   2c624:	10c00003 	ldbu	r3,0(r2)
   2c628:	28c7883a 	add	r3,r5,r3
   2c62c:	38efc83a 	sub	r23,r7,r3
   2c630:	b800691e 	bne	r23,zero,2c7d8 <__udivdi3+0x318>
   2c634:	35000136 	bltu	r6,r20,2c63c <__udivdi3+0x17c>
   2c638:	e4005136 	bltu	fp,r16,2c780 <__udivdi3+0x2c0>
   2c63c:	00800044 	movi	r2,1
   2c640:	0009883a 	mov	r4,zero
   2c644:	2007883a 	mov	r3,r4
   2c648:	dfc00f17 	ldw	ra,60(sp)
   2c64c:	df000e17 	ldw	fp,56(sp)
   2c650:	ddc00d17 	ldw	r23,52(sp)
   2c654:	dd800c17 	ldw	r22,48(sp)
   2c658:	dd400b17 	ldw	r21,44(sp)
   2c65c:	dd000a17 	ldw	r20,40(sp)
   2c660:	dcc00917 	ldw	r19,36(sp)
   2c664:	dc800817 	ldw	r18,32(sp)
   2c668:	dc400717 	ldw	r17,28(sp)
   2c66c:	dc000617 	ldw	r16,24(sp)
   2c670:	dec01004 	addi	sp,sp,64
   2c674:	f800283a 	ret
   2c678:	00bfffd4 	movui	r2,65535
   2c67c:	12005036 	bltu	r2,r8,2c7c0 <__udivdi3+0x300>
   2c680:	00803fc4 	movi	r2,255
   2c684:	1200e836 	bltu	r2,r8,2ca28 <__udivdi3+0x568>
   2c688:	000b883a 	mov	r5,zero
   2c68c:	0005883a 	mov	r2,zero
   2c690:	8084d83a 	srl	r2,r16,r2
   2c694:	010000f4 	movhi	r4,3
   2c698:	213f4c04 	addi	r4,r4,-720
   2c69c:	01800804 	movi	r6,32
   2c6a0:	1105883a 	add	r2,r2,r4
   2c6a4:	10c00003 	ldbu	r3,0(r2)
   2c6a8:	28c7883a 	add	r3,r5,r3
   2c6ac:	30cbc83a 	sub	r5,r6,r3
   2c6b0:	28000626 	beq	r5,zero,2c6cc <__udivdi3+0x20c>
   2c6b4:	3145c83a 	sub	r2,r6,r5
   2c6b8:	e084d83a 	srl	r2,fp,r2
   2c6bc:	a146983a 	sll	r3,r20,r5
   2c6c0:	e178983a 	sll	fp,fp,r5
   2c6c4:	8160983a 	sll	r16,r16,r5
   2c6c8:	18a8b03a 	or	r20,r3,r2
   2c6cc:	802ad43a 	srli	r21,r16,16
   2c6d0:	a009883a 	mov	r4,r20
   2c6d4:	85ffffcc 	andi	r23,r16,65535
   2c6d8:	a80b883a 	mov	r5,r21
   2c6dc:	002d31c0 	call	2d31c <__udivsi3>
   2c6e0:	a009883a 	mov	r4,r20
   2c6e4:	a80b883a 	mov	r5,r21
   2c6e8:	102d883a 	mov	r22,r2
   2c6ec:	002d3240 	call	2d324 <__umodsi3>
   2c6f0:	1004943a 	slli	r2,r2,16
   2c6f4:	e006d43a 	srli	r3,fp,16
   2c6f8:	bda3383a 	mul	r17,r23,r22
   2c6fc:	10c4b03a 	or	r2,r2,r3
   2c700:	1440042e 	bgeu	r2,r17,2c714 <__udivdi3+0x254>
   2c704:	1405883a 	add	r2,r2,r16
   2c708:	b5bfffc4 	addi	r22,r22,-1
   2c70c:	14000136 	bltu	r2,r16,2c714 <__udivdi3+0x254>
   2c710:	1440d536 	bltu	r2,r17,2ca68 <__udivdi3+0x5a8>
   2c714:	1463c83a 	sub	r17,r2,r17
   2c718:	8809883a 	mov	r4,r17
   2c71c:	a80b883a 	mov	r5,r21
   2c720:	002d31c0 	call	2d31c <__udivsi3>
   2c724:	8809883a 	mov	r4,r17
   2c728:	a80b883a 	mov	r5,r21
   2c72c:	1029883a 	mov	r20,r2
   2c730:	002d3240 	call	2d324 <__umodsi3>
   2c734:	1004943a 	slli	r2,r2,16
   2c738:	bd09383a 	mul	r4,r23,r20
   2c73c:	e0ffffcc 	andi	r3,fp,65535
   2c740:	10c4b03a 	or	r2,r2,r3
   2c744:	1100042e 	bgeu	r2,r4,2c758 <__udivdi3+0x298>
   2c748:	8085883a 	add	r2,r16,r2
   2c74c:	a53fffc4 	addi	r20,r20,-1
   2c750:	14000136 	bltu	r2,r16,2c758 <__udivdi3+0x298>
   2c754:	1100c736 	bltu	r2,r4,2ca74 <__udivdi3+0x5b4>
   2c758:	b004943a 	slli	r2,r22,16
   2c75c:	0009883a 	mov	r4,zero
   2c760:	a084b03a 	or	r2,r20,r2
   2c764:	003fb706 	br	2c644 <__udivdi3+0x184>
   2c768:	00804034 	movhi	r2,256
   2c76c:	10bfffc4 	addi	r2,r2,-1
   2c770:	11c0a436 	bltu	r2,r7,2ca04 <__udivdi3+0x544>
   2c774:	01400404 	movi	r5,16
   2c778:	2805883a 	mov	r2,r5
   2c77c:	003fa406 	br	2c610 <__udivdi3+0x150>
   2c780:	0005883a 	mov	r2,zero
   2c784:	0009883a 	mov	r4,zero
   2c788:	003fae06 	br	2c644 <__udivdi3+0x184>
   2c78c:	00804034 	movhi	r2,256
   2c790:	10bfffc4 	addi	r2,r2,-1
   2c794:	1400a136 	bltu	r2,r16,2ca1c <__udivdi3+0x55c>
   2c798:	01400404 	movi	r5,16
   2c79c:	2805883a 	mov	r2,r5
   2c7a0:	003f6006 	br	2c524 <__udivdi3+0x64>
   2c7a4:	01000044 	movi	r4,1
   2c7a8:	000b883a 	mov	r5,zero
   2c7ac:	002d31c0 	call	2d31c <__udivsi3>
   2c7b0:	1021883a 	mov	r16,r2
   2c7b4:	00bfffd4 	movui	r2,65535
   2c7b8:	143ff436 	bltu	r2,r16,2c78c <__udivdi3+0x2cc>
   2c7bc:	003f5506 	br	2c514 <__udivdi3+0x54>
   2c7c0:	00804034 	movhi	r2,256
   2c7c4:	10bfffc4 	addi	r2,r2,-1
   2c7c8:	12009a36 	bltu	r2,r8,2ca34 <__udivdi3+0x574>
   2c7cc:	01400404 	movi	r5,16
   2c7d0:	2805883a 	mov	r2,r5
   2c7d4:	003fae06 	br	2c690 <__udivdi3+0x1d0>
   2c7d8:	3dc5c83a 	sub	r2,r7,r23
   2c7dc:	35c8983a 	sll	r4,r6,r23
   2c7e0:	8086d83a 	srl	r3,r16,r2
   2c7e4:	a0a2d83a 	srl	r17,r20,r2
   2c7e8:	e084d83a 	srl	r2,fp,r2
   2c7ec:	20eab03a 	or	r21,r4,r3
   2c7f0:	a82cd43a 	srli	r22,r21,16
   2c7f4:	a5c6983a 	sll	r3,r20,r23
   2c7f8:	8809883a 	mov	r4,r17
   2c7fc:	b00b883a 	mov	r5,r22
   2c800:	1886b03a 	or	r3,r3,r2
   2c804:	d8c00215 	stw	r3,8(sp)
   2c808:	002d31c0 	call	2d31c <__udivsi3>
   2c80c:	8809883a 	mov	r4,r17
   2c810:	b00b883a 	mov	r5,r22
   2c814:	1029883a 	mov	r20,r2
   2c818:	002d3240 	call	2d324 <__umodsi3>
   2c81c:	a8ffffcc 	andi	r3,r21,65535
   2c820:	d8c00515 	stw	r3,20(sp)
   2c824:	d9000217 	ldw	r4,8(sp)
   2c828:	d9400517 	ldw	r5,20(sp)
   2c82c:	1004943a 	slli	r2,r2,16
   2c830:	2006d43a 	srli	r3,r4,16
   2c834:	85e0983a 	sll	r16,r16,r23
   2c838:	2d23383a 	mul	r17,r5,r20
   2c83c:	10c4b03a 	or	r2,r2,r3
   2c840:	dc000015 	stw	r16,0(sp)
   2c844:	1440032e 	bgeu	r2,r17,2c854 <__udivdi3+0x394>
   2c848:	1545883a 	add	r2,r2,r21
   2c84c:	a53fffc4 	addi	r20,r20,-1
   2c850:	15407f2e 	bgeu	r2,r21,2ca50 <__udivdi3+0x590>
   2c854:	1463c83a 	sub	r17,r2,r17
   2c858:	8809883a 	mov	r4,r17
   2c85c:	b00b883a 	mov	r5,r22
   2c860:	002d31c0 	call	2d31c <__udivsi3>
   2c864:	8809883a 	mov	r4,r17
   2c868:	b00b883a 	mov	r5,r22
   2c86c:	1021883a 	mov	r16,r2
   2c870:	002d3240 	call	2d324 <__umodsi3>
   2c874:	d8c00517 	ldw	r3,20(sp)
   2c878:	d9000217 	ldw	r4,8(sp)
   2c87c:	1004943a 	slli	r2,r2,16
   2c880:	1c0f383a 	mul	r7,r3,r16
   2c884:	20ffffcc 	andi	r3,r4,65535
   2c888:	10e2b03a 	or	r17,r2,r3
   2c88c:	89c0032e 	bgeu	r17,r7,2c89c <__udivdi3+0x3dc>
   2c890:	8d63883a 	add	r17,r17,r21
   2c894:	843fffc4 	addi	r16,r16,-1
   2c898:	8d40692e 	bgeu	r17,r21,2ca40 <__udivdi3+0x580>
   2c89c:	a008943a 	slli	r4,r20,16
   2c8a0:	d9400017 	ldw	r5,0(sp)
   2c8a4:	89e3c83a 	sub	r17,r17,r7
   2c8a8:	8110b03a 	or	r8,r16,r4
   2c8ac:	280cd43a 	srli	r6,r5,16
   2c8b0:	28ffffcc 	andi	r3,r5,65535
   2c8b4:	40bfffcc 	andi	r2,r8,65535
   2c8b8:	400ad43a 	srli	r5,r8,16
   2c8bc:	10d3383a 	mul	r9,r2,r3
   2c8c0:	1185383a 	mul	r2,r2,r6
   2c8c4:	28c7383a 	mul	r3,r5,r3
   2c8c8:	4808d43a 	srli	r4,r9,16
   2c8cc:	298b383a 	mul	r5,r5,r6
   2c8d0:	10c5883a 	add	r2,r2,r3
   2c8d4:	2089883a 	add	r4,r4,r2
   2c8d8:	20c0022e 	bgeu	r4,r3,2c8e4 <__udivdi3+0x424>
   2c8dc:	00800074 	movhi	r2,1
   2c8e0:	288b883a 	add	r5,r5,r2
   2c8e4:	2004d43a 	srli	r2,r4,16
   2c8e8:	288b883a 	add	r5,r5,r2
   2c8ec:	89403f36 	bltu	r17,r5,2c9ec <__udivdi3+0x52c>
   2c8f0:	89403926 	beq	r17,r5,2c9d8 <__udivdi3+0x518>
   2c8f4:	4005883a 	mov	r2,r8
   2c8f8:	0009883a 	mov	r4,zero
   2c8fc:	003f5106 	br	2c644 <__udivdi3+0x184>
   2c900:	85a0983a 	sll	r16,r16,r22
   2c904:	3585c83a 	sub	r2,r6,r22
   2c908:	a0a2d83a 	srl	r17,r20,r2
   2c90c:	802ad43a 	srli	r21,r16,16
   2c910:	e084d83a 	srl	r2,fp,r2
   2c914:	a586983a 	sll	r3,r20,r22
   2c918:	8809883a 	mov	r4,r17
   2c91c:	a80b883a 	mov	r5,r21
   2c920:	1886b03a 	or	r3,r3,r2
   2c924:	d8c00115 	stw	r3,4(sp)
   2c928:	002d31c0 	call	2d31c <__udivsi3>
   2c92c:	8809883a 	mov	r4,r17
   2c930:	a80b883a 	mov	r5,r21
   2c934:	d8800415 	stw	r2,16(sp)
   2c938:	002d3240 	call	2d324 <__umodsi3>
   2c93c:	d9000117 	ldw	r4,4(sp)
   2c940:	d9400417 	ldw	r5,16(sp)
   2c944:	1004943a 	slli	r2,r2,16
   2c948:	85ffffcc 	andi	r23,r16,65535
   2c94c:	2006d43a 	srli	r3,r4,16
   2c950:	b963383a 	mul	r17,r23,r5
   2c954:	10c4b03a 	or	r2,r2,r3
   2c958:	1440042e 	bgeu	r2,r17,2c96c <__udivdi3+0x4ac>
   2c95c:	297fffc4 	addi	r5,r5,-1
   2c960:	1405883a 	add	r2,r2,r16
   2c964:	d9400415 	stw	r5,16(sp)
   2c968:	1400442e 	bgeu	r2,r16,2ca7c <__udivdi3+0x5bc>
   2c96c:	1463c83a 	sub	r17,r2,r17
   2c970:	8809883a 	mov	r4,r17
   2c974:	a80b883a 	mov	r5,r21
   2c978:	002d31c0 	call	2d31c <__udivsi3>
   2c97c:	8809883a 	mov	r4,r17
   2c980:	a80b883a 	mov	r5,r21
   2c984:	1029883a 	mov	r20,r2
   2c988:	002d3240 	call	2d324 <__umodsi3>
   2c98c:	d9400117 	ldw	r5,4(sp)
   2c990:	1004943a 	slli	r2,r2,16
   2c994:	bd09383a 	mul	r4,r23,r20
   2c998:	28ffffcc 	andi	r3,r5,65535
   2c99c:	10c6b03a 	or	r3,r2,r3
   2c9a0:	1900062e 	bgeu	r3,r4,2c9bc <__udivdi3+0x4fc>
   2c9a4:	1c07883a 	add	r3,r3,r16
   2c9a8:	a53fffc4 	addi	r20,r20,-1
   2c9ac:	1c000336 	bltu	r3,r16,2c9bc <__udivdi3+0x4fc>
   2c9b0:	1900022e 	bgeu	r3,r4,2c9bc <__udivdi3+0x4fc>
   2c9b4:	a53fffc4 	addi	r20,r20,-1
   2c9b8:	1c07883a 	add	r3,r3,r16
   2c9bc:	d9400417 	ldw	r5,16(sp)
   2c9c0:	e5b8983a 	sll	fp,fp,r22
   2c9c4:	1923c83a 	sub	r17,r3,r4
   2c9c8:	2804943a 	slli	r2,r5,16
   2c9cc:	a0a8b03a 	or	r20,r20,r2
   2c9d0:	dd000315 	stw	r20,12(sp)
   2c9d4:	003ee106 	br	2c55c <__udivdi3+0x9c>
   2c9d8:	2004943a 	slli	r2,r4,16
   2c9dc:	e5c8983a 	sll	r4,fp,r23
   2c9e0:	48ffffcc 	andi	r3,r9,65535
   2c9e4:	10c5883a 	add	r2,r2,r3
   2c9e8:	20bfc22e 	bgeu	r4,r2,2c8f4 <__udivdi3+0x434>
   2c9ec:	40bfffc4 	addi	r2,r8,-1
   2c9f0:	0009883a 	mov	r4,zero
   2c9f4:	003f1306 	br	2c644 <__udivdi3+0x184>
   2c9f8:	01400204 	movi	r5,8
   2c9fc:	2805883a 	mov	r2,r5
   2ca00:	003f0306 	br	2c610 <__udivdi3+0x150>
   2ca04:	01400604 	movi	r5,24
   2ca08:	2805883a 	mov	r2,r5
   2ca0c:	003f0006 	br	2c610 <__udivdi3+0x150>
   2ca10:	01400204 	movi	r5,8
   2ca14:	2805883a 	mov	r2,r5
   2ca18:	003ec206 	br	2c524 <__udivdi3+0x64>
   2ca1c:	01400604 	movi	r5,24
   2ca20:	2805883a 	mov	r2,r5
   2ca24:	003ebf06 	br	2c524 <__udivdi3+0x64>
   2ca28:	01400204 	movi	r5,8
   2ca2c:	2805883a 	mov	r2,r5
   2ca30:	003f1706 	br	2c690 <__udivdi3+0x1d0>
   2ca34:	01400604 	movi	r5,24
   2ca38:	2805883a 	mov	r2,r5
   2ca3c:	003f1406 	br	2c690 <__udivdi3+0x1d0>
   2ca40:	89ff962e 	bgeu	r17,r7,2c89c <__udivdi3+0x3dc>
   2ca44:	8d63883a 	add	r17,r17,r21
   2ca48:	843fffc4 	addi	r16,r16,-1
   2ca4c:	003f9306 	br	2c89c <__udivdi3+0x3dc>
   2ca50:	147f802e 	bgeu	r2,r17,2c854 <__udivdi3+0x394>
   2ca54:	a53fffc4 	addi	r20,r20,-1
   2ca58:	1545883a 	add	r2,r2,r21
   2ca5c:	003f7d06 	br	2c854 <__udivdi3+0x394>
   2ca60:	a53fffc4 	addi	r20,r20,-1
   2ca64:	003ede06 	br	2c5e0 <__udivdi3+0x120>
   2ca68:	b5bfffc4 	addi	r22,r22,-1
   2ca6c:	1405883a 	add	r2,r2,r16
   2ca70:	003f2806 	br	2c714 <__udivdi3+0x254>
   2ca74:	a53fffc4 	addi	r20,r20,-1
   2ca78:	003f3706 	br	2c758 <__udivdi3+0x298>
   2ca7c:	147fbb2e 	bgeu	r2,r17,2c96c <__udivdi3+0x4ac>
   2ca80:	297fffc4 	addi	r5,r5,-1
   2ca84:	1405883a 	add	r2,r2,r16
   2ca88:	d9400415 	stw	r5,16(sp)
   2ca8c:	003fb706 	br	2c96c <__udivdi3+0x4ac>
   2ca90:	b5bfffc4 	addi	r22,r22,-1
   2ca94:	1405883a 	add	r2,r2,r16
   2ca98:	003ec006 	br	2c59c <__udivdi3+0xdc>

0002ca9c <__umoddi3>:
   2ca9c:	defff104 	addi	sp,sp,-60
   2caa0:	dd800b15 	stw	r22,44(sp)
   2caa4:	dd000915 	stw	r20,36(sp)
   2caa8:	dc000515 	stw	r16,20(sp)
   2caac:	dfc00e15 	stw	ra,56(sp)
   2cab0:	df000d15 	stw	fp,52(sp)
   2cab4:	ddc00c15 	stw	r23,48(sp)
   2cab8:	dd400a15 	stw	r21,40(sp)
   2cabc:	dcc00815 	stw	r19,32(sp)
   2cac0:	dc800715 	stw	r18,28(sp)
   2cac4:	dc400615 	stw	r17,24(sp)
   2cac8:	3021883a 	mov	r16,r6
   2cacc:	202d883a 	mov	r22,r4
   2cad0:	2829883a 	mov	r20,r5
   2cad4:	38002b1e 	bne	r7,zero,2cb84 <__umoddi3+0xe8>
   2cad8:	29805036 	bltu	r5,r6,2cc1c <__umoddi3+0x180>
   2cadc:	30008a26 	beq	r6,zero,2cd08 <__umoddi3+0x26c>
   2cae0:	00bfffd4 	movui	r2,65535
   2cae4:	14008236 	bltu	r2,r16,2ccf0 <__umoddi3+0x254>
   2cae8:	00803fc4 	movi	r2,255
   2caec:	14013636 	bltu	r2,r16,2cfc8 <__umoddi3+0x52c>
   2caf0:	000b883a 	mov	r5,zero
   2caf4:	0005883a 	mov	r2,zero
   2caf8:	8084d83a 	srl	r2,r16,r2
   2cafc:	010000f4 	movhi	r4,3
   2cb00:	213f4c04 	addi	r4,r4,-720
   2cb04:	01800804 	movi	r6,32
   2cb08:	1105883a 	add	r2,r2,r4
   2cb0c:	10c00003 	ldbu	r3,0(r2)
   2cb10:	28c7883a 	add	r3,r5,r3
   2cb14:	30efc83a 	sub	r23,r6,r3
   2cb18:	b800941e 	bne	r23,zero,2cd6c <__umoddi3+0x2d0>
   2cb1c:	802ad43a 	srli	r21,r16,16
   2cb20:	a423c83a 	sub	r17,r20,r16
   2cb24:	0039883a 	mov	fp,zero
   2cb28:	853fffcc 	andi	r20,r16,65535
   2cb2c:	8809883a 	mov	r4,r17
   2cb30:	a80b883a 	mov	r5,r21
   2cb34:	002d31c0 	call	2d31c <__udivsi3>
   2cb38:	8809883a 	mov	r4,r17
   2cb3c:	a80b883a 	mov	r5,r21
   2cb40:	a0a3383a 	mul	r17,r20,r2
   2cb44:	002d3240 	call	2d324 <__umodsi3>
   2cb48:	1004943a 	slli	r2,r2,16
   2cb4c:	b006d43a 	srli	r3,r22,16
   2cb50:	10c4b03a 	or	r2,r2,r3
   2cb54:	1440032e 	bgeu	r2,r17,2cb64 <__umoddi3+0xc8>
   2cb58:	1405883a 	add	r2,r2,r16
   2cb5c:	14000136 	bltu	r2,r16,2cb64 <__umoddi3+0xc8>
   2cb60:	14413536 	bltu	r2,r17,2d038 <__umoddi3+0x59c>
   2cb64:	1463c83a 	sub	r17,r2,r17
   2cb68:	8809883a 	mov	r4,r17
   2cb6c:	a80b883a 	mov	r5,r21
   2cb70:	002d31c0 	call	2d31c <__udivsi3>
   2cb74:	8809883a 	mov	r4,r17
   2cb78:	a0a3383a 	mul	r17,r20,r2
   2cb7c:	a80b883a 	mov	r5,r21
   2cb80:	00004d06 	br	2ccb8 <__umoddi3+0x21c>
   2cb84:	380d883a 	mov	r6,r7
   2cb88:	29c0102e 	bgeu	r5,r7,2cbcc <__umoddi3+0x130>
   2cb8c:	2011883a 	mov	r8,r4
   2cb90:	2813883a 	mov	r9,r5
   2cb94:	4005883a 	mov	r2,r8
   2cb98:	4807883a 	mov	r3,r9
   2cb9c:	dfc00e17 	ldw	ra,56(sp)
   2cba0:	df000d17 	ldw	fp,52(sp)
   2cba4:	ddc00c17 	ldw	r23,48(sp)
   2cba8:	dd800b17 	ldw	r22,44(sp)
   2cbac:	dd400a17 	ldw	r21,40(sp)
   2cbb0:	dd000917 	ldw	r20,36(sp)
   2cbb4:	dcc00817 	ldw	r19,32(sp)
   2cbb8:	dc800717 	ldw	r18,28(sp)
   2cbbc:	dc400617 	ldw	r17,24(sp)
   2cbc0:	dc000517 	ldw	r16,20(sp)
   2cbc4:	dec00f04 	addi	sp,sp,60
   2cbc8:	f800283a 	ret
   2cbcc:	00bfffd4 	movui	r2,65535
   2cbd0:	11c05a36 	bltu	r2,r7,2cd3c <__umoddi3+0x2a0>
   2cbd4:	00803fc4 	movi	r2,255
   2cbd8:	11c0fe36 	bltu	r2,r7,2cfd4 <__umoddi3+0x538>
   2cbdc:	000b883a 	mov	r5,zero
   2cbe0:	0005883a 	mov	r2,zero
   2cbe4:	3084d83a 	srl	r2,r6,r2
   2cbe8:	010000f4 	movhi	r4,3
   2cbec:	213f4c04 	addi	r4,r4,-720
   2cbf0:	01c00804 	movi	r7,32
   2cbf4:	1105883a 	add	r2,r2,r4
   2cbf8:	10c00003 	ldbu	r3,0(r2)
   2cbfc:	28c7883a 	add	r3,r5,r3
   2cc00:	38ebc83a 	sub	r21,r7,r3
   2cc04:	a800851e 	bne	r21,zero,2ce1c <__umoddi3+0x380>
   2cc08:	35005236 	bltu	r6,r20,2cd54 <__umoddi3+0x2b8>
   2cc0c:	b400512e 	bgeu	r22,r16,2cd54 <__umoddi3+0x2b8>
   2cc10:	b011883a 	mov	r8,r22
   2cc14:	a013883a 	mov	r9,r20
   2cc18:	003fde06 	br	2cb94 <__umoddi3+0xf8>
   2cc1c:	00bfffd4 	movui	r2,65535
   2cc20:	11804036 	bltu	r2,r6,2cd24 <__umoddi3+0x288>
   2cc24:	00803fc4 	movi	r2,255
   2cc28:	1180ed36 	bltu	r2,r6,2cfe0 <__umoddi3+0x544>
   2cc2c:	000b883a 	mov	r5,zero
   2cc30:	0005883a 	mov	r2,zero
   2cc34:	8084d83a 	srl	r2,r16,r2
   2cc38:	010000f4 	movhi	r4,3
   2cc3c:	213f4c04 	addi	r4,r4,-720
   2cc40:	01800804 	movi	r6,32
   2cc44:	1105883a 	add	r2,r2,r4
   2cc48:	10c00003 	ldbu	r3,0(r2)
   2cc4c:	28c7883a 	add	r3,r5,r3
   2cc50:	30c7c83a 	sub	r3,r6,r3
   2cc54:	1800bf1e 	bne	r3,zero,2cf54 <__umoddi3+0x4b8>
   2cc58:	0039883a 	mov	fp,zero
   2cc5c:	802ad43a 	srli	r21,r16,16
   2cc60:	a009883a 	mov	r4,r20
   2cc64:	85ffffcc 	andi	r23,r16,65535
   2cc68:	a80b883a 	mov	r5,r21
   2cc6c:	002d31c0 	call	2d31c <__udivsi3>
   2cc70:	a009883a 	mov	r4,r20
   2cc74:	a80b883a 	mov	r5,r21
   2cc78:	b8a3383a 	mul	r17,r23,r2
   2cc7c:	002d3240 	call	2d324 <__umodsi3>
   2cc80:	1004943a 	slli	r2,r2,16
   2cc84:	b006d43a 	srli	r3,r22,16
   2cc88:	10c4b03a 	or	r2,r2,r3
   2cc8c:	1440032e 	bgeu	r2,r17,2cc9c <__umoddi3+0x200>
   2cc90:	1405883a 	add	r2,r2,r16
   2cc94:	14000136 	bltu	r2,r16,2cc9c <__umoddi3+0x200>
   2cc98:	1440e536 	bltu	r2,r17,2d030 <__umoddi3+0x594>
   2cc9c:	1463c83a 	sub	r17,r2,r17
   2cca0:	8809883a 	mov	r4,r17
   2cca4:	a80b883a 	mov	r5,r21
   2cca8:	002d31c0 	call	2d31c <__udivsi3>
   2ccac:	8809883a 	mov	r4,r17
   2ccb0:	b8a3383a 	mul	r17,r23,r2
   2ccb4:	a80b883a 	mov	r5,r21
   2ccb8:	002d3240 	call	2d324 <__umodsi3>
   2ccbc:	1004943a 	slli	r2,r2,16
   2ccc0:	b0ffffcc 	andi	r3,r22,65535
   2ccc4:	10c4b03a 	or	r2,r2,r3
   2ccc8:	1440042e 	bgeu	r2,r17,2ccdc <__umoddi3+0x240>
   2cccc:	1405883a 	add	r2,r2,r16
   2ccd0:	14000236 	bltu	r2,r16,2ccdc <__umoddi3+0x240>
   2ccd4:	1440012e 	bgeu	r2,r17,2ccdc <__umoddi3+0x240>
   2ccd8:	1405883a 	add	r2,r2,r16
   2ccdc:	1445c83a 	sub	r2,r2,r17
   2cce0:	1724d83a 	srl	r18,r2,fp
   2cce4:	0013883a 	mov	r9,zero
   2cce8:	9011883a 	mov	r8,r18
   2ccec:	003fa906 	br	2cb94 <__umoddi3+0xf8>
   2ccf0:	00804034 	movhi	r2,256
   2ccf4:	10bfffc4 	addi	r2,r2,-1
   2ccf8:	1400b036 	bltu	r2,r16,2cfbc <__umoddi3+0x520>
   2ccfc:	01400404 	movi	r5,16
   2cd00:	2805883a 	mov	r2,r5
   2cd04:	003f7c06 	br	2caf8 <__umoddi3+0x5c>
   2cd08:	01000044 	movi	r4,1
   2cd0c:	000b883a 	mov	r5,zero
   2cd10:	002d31c0 	call	2d31c <__udivsi3>
   2cd14:	1021883a 	mov	r16,r2
   2cd18:	00bfffd4 	movui	r2,65535
   2cd1c:	143ff436 	bltu	r2,r16,2ccf0 <__umoddi3+0x254>
   2cd20:	003f7106 	br	2cae8 <__umoddi3+0x4c>
   2cd24:	00804034 	movhi	r2,256
   2cd28:	10bfffc4 	addi	r2,r2,-1
   2cd2c:	1180af36 	bltu	r2,r6,2cfec <__umoddi3+0x550>
   2cd30:	01400404 	movi	r5,16
   2cd34:	2805883a 	mov	r2,r5
   2cd38:	003fbe06 	br	2cc34 <__umoddi3+0x198>
   2cd3c:	00804034 	movhi	r2,256
   2cd40:	10bfffc4 	addi	r2,r2,-1
   2cd44:	11c0ac36 	bltu	r2,r7,2cff8 <__umoddi3+0x55c>
   2cd48:	01400404 	movi	r5,16
   2cd4c:	2805883a 	mov	r2,r5
   2cd50:	003fa406 	br	2cbe4 <__umoddi3+0x148>
   2cd54:	b409c83a 	sub	r4,r22,r16
   2cd58:	b105803a 	cmpltu	r2,r22,r4
   2cd5c:	a187c83a 	sub	r3,r20,r6
   2cd60:	18a9c83a 	sub	r20,r3,r2
   2cd64:	202d883a 	mov	r22,r4
   2cd68:	003fa906 	br	2cc10 <__umoddi3+0x174>
   2cd6c:	85e0983a 	sll	r16,r16,r23
   2cd70:	35c5c83a 	sub	r2,r6,r23
   2cd74:	a0a2d83a 	srl	r17,r20,r2
   2cd78:	802ad43a 	srli	r21,r16,16
   2cd7c:	b084d83a 	srl	r2,r22,r2
   2cd80:	a5c6983a 	sll	r3,r20,r23
   2cd84:	8809883a 	mov	r4,r17
   2cd88:	a80b883a 	mov	r5,r21
   2cd8c:	1886b03a 	or	r3,r3,r2
   2cd90:	d8c00115 	stw	r3,4(sp)
   2cd94:	853fffcc 	andi	r20,r16,65535
   2cd98:	002d31c0 	call	2d31c <__udivsi3>
   2cd9c:	8809883a 	mov	r4,r17
   2cda0:	a80b883a 	mov	r5,r21
   2cda4:	a0a3383a 	mul	r17,r20,r2
   2cda8:	002d3240 	call	2d324 <__umodsi3>
   2cdac:	d9000117 	ldw	r4,4(sp)
   2cdb0:	1004943a 	slli	r2,r2,16
   2cdb4:	b839883a 	mov	fp,r23
   2cdb8:	2006d43a 	srli	r3,r4,16
   2cdbc:	10c4b03a 	or	r2,r2,r3
   2cdc0:	1440022e 	bgeu	r2,r17,2cdcc <__umoddi3+0x330>
   2cdc4:	1405883a 	add	r2,r2,r16
   2cdc8:	1400962e 	bgeu	r2,r16,2d024 <__umoddi3+0x588>
   2cdcc:	1463c83a 	sub	r17,r2,r17
   2cdd0:	8809883a 	mov	r4,r17
   2cdd4:	a80b883a 	mov	r5,r21
   2cdd8:	002d31c0 	call	2d31c <__udivsi3>
   2cddc:	8809883a 	mov	r4,r17
   2cde0:	a80b883a 	mov	r5,r21
   2cde4:	a0a3383a 	mul	r17,r20,r2
   2cde8:	002d3240 	call	2d324 <__umodsi3>
   2cdec:	d9400117 	ldw	r5,4(sp)
   2cdf0:	1004943a 	slli	r2,r2,16
   2cdf4:	28ffffcc 	andi	r3,r5,65535
   2cdf8:	10c4b03a 	or	r2,r2,r3
   2cdfc:	1440042e 	bgeu	r2,r17,2ce10 <__umoddi3+0x374>
   2ce00:	1405883a 	add	r2,r2,r16
   2ce04:	14000236 	bltu	r2,r16,2ce10 <__umoddi3+0x374>
   2ce08:	1440012e 	bgeu	r2,r17,2ce10 <__umoddi3+0x374>
   2ce0c:	1405883a 	add	r2,r2,r16
   2ce10:	b5ec983a 	sll	r22,r22,r23
   2ce14:	1463c83a 	sub	r17,r2,r17
   2ce18:	003f4406 	br	2cb2c <__umoddi3+0x90>
   2ce1c:	3d4fc83a 	sub	r7,r7,r21
   2ce20:	3546983a 	sll	r3,r6,r21
   2ce24:	81c4d83a 	srl	r2,r16,r7
   2ce28:	a1e2d83a 	srl	r17,r20,r7
   2ce2c:	a54c983a 	sll	r6,r20,r21
   2ce30:	18aeb03a 	or	r23,r3,r2
   2ce34:	b828d43a 	srli	r20,r23,16
   2ce38:	b1c4d83a 	srl	r2,r22,r7
   2ce3c:	8809883a 	mov	r4,r17
   2ce40:	a00b883a 	mov	r5,r20
   2ce44:	308cb03a 	or	r6,r6,r2
   2ce48:	d9c00315 	stw	r7,12(sp)
   2ce4c:	d9800215 	stw	r6,8(sp)
   2ce50:	002d31c0 	call	2d31c <__udivsi3>
   2ce54:	8809883a 	mov	r4,r17
   2ce58:	a00b883a 	mov	r5,r20
   2ce5c:	1039883a 	mov	fp,r2
   2ce60:	002d3240 	call	2d324 <__umodsi3>
   2ce64:	b8ffffcc 	andi	r3,r23,65535
   2ce68:	d8c00415 	stw	r3,16(sp)
   2ce6c:	d9000217 	ldw	r4,8(sp)
   2ce70:	d9400417 	ldw	r5,16(sp)
   2ce74:	1004943a 	slli	r2,r2,16
   2ce78:	2006d43a 	srli	r3,r4,16
   2ce7c:	8560983a 	sll	r16,r16,r21
   2ce80:	2f23383a 	mul	r17,r5,fp
   2ce84:	10c4b03a 	or	r2,r2,r3
   2ce88:	dc000015 	stw	r16,0(sp)
   2ce8c:	b56c983a 	sll	r22,r22,r21
   2ce90:	1440032e 	bgeu	r2,r17,2cea0 <__umoddi3+0x404>
   2ce94:	15c5883a 	add	r2,r2,r23
   2ce98:	e73fffc4 	addi	fp,fp,-1
   2ce9c:	15c05d2e 	bgeu	r2,r23,2d014 <__umoddi3+0x578>
   2cea0:	1463c83a 	sub	r17,r2,r17
   2cea4:	8809883a 	mov	r4,r17
   2cea8:	a00b883a 	mov	r5,r20
   2ceac:	002d31c0 	call	2d31c <__udivsi3>
   2ceb0:	8809883a 	mov	r4,r17
   2ceb4:	a00b883a 	mov	r5,r20
   2ceb8:	1021883a 	mov	r16,r2
   2cebc:	002d3240 	call	2d324 <__umodsi3>
   2cec0:	d8c00417 	ldw	r3,16(sp)
   2cec4:	d9000217 	ldw	r4,8(sp)
   2cec8:	1004943a 	slli	r2,r2,16
   2cecc:	1c23383a 	mul	r17,r3,r16
   2ced0:	20ffffcc 	andi	r3,r4,65535
   2ced4:	10ceb03a 	or	r7,r2,r3
   2ced8:	3c40032e 	bgeu	r7,r17,2cee8 <__umoddi3+0x44c>
   2cedc:	3dcf883a 	add	r7,r7,r23
   2cee0:	843fffc4 	addi	r16,r16,-1
   2cee4:	3dc0472e 	bgeu	r7,r23,2d004 <__umoddi3+0x568>
   2cee8:	e004943a 	slli	r2,fp,16
   2ceec:	d9400017 	ldw	r5,0(sp)
   2cef0:	3c4fc83a 	sub	r7,r7,r17
   2cef4:	8084b03a 	or	r2,r16,r2
   2cef8:	28ffffcc 	andi	r3,r5,65535
   2cefc:	280cd43a 	srli	r6,r5,16
   2cf00:	100ad43a 	srli	r5,r2,16
   2cf04:	10bfffcc 	andi	r2,r2,65535
   2cf08:	10d1383a 	mul	r8,r2,r3
   2cf0c:	28c7383a 	mul	r3,r5,r3
   2cf10:	1185383a 	mul	r2,r2,r6
   2cf14:	4008d43a 	srli	r4,r8,16
   2cf18:	298b383a 	mul	r5,r5,r6
   2cf1c:	10c5883a 	add	r2,r2,r3
   2cf20:	2089883a 	add	r4,r4,r2
   2cf24:	20c0022e 	bgeu	r4,r3,2cf30 <__umoddi3+0x494>
   2cf28:	00800074 	movhi	r2,1
   2cf2c:	288b883a 	add	r5,r5,r2
   2cf30:	2004d43a 	srli	r2,r4,16
   2cf34:	2008943a 	slli	r4,r4,16
   2cf38:	40ffffcc 	andi	r3,r8,65535
   2cf3c:	288b883a 	add	r5,r5,r2
   2cf40:	20c9883a 	add	r4,r4,r3
   2cf44:	39400b36 	bltu	r7,r5,2cf74 <__umoddi3+0x4d8>
   2cf48:	39403d26 	beq	r7,r5,2d040 <__umoddi3+0x5a4>
   2cf4c:	394bc83a 	sub	r5,r7,r5
   2cf50:	00000f06 	br	2cf90 <__umoddi3+0x4f4>
   2cf54:	30c5c83a 	sub	r2,r6,r3
   2cf58:	1839883a 	mov	fp,r3
   2cf5c:	b084d83a 	srl	r2,r22,r2
   2cf60:	a0c6983a 	sll	r3,r20,r3
   2cf64:	8720983a 	sll	r16,r16,fp
   2cf68:	b72c983a 	sll	r22,r22,fp
   2cf6c:	18a8b03a 	or	r20,r3,r2
   2cf70:	003f3a06 	br	2cc5c <__umoddi3+0x1c0>
   2cf74:	d8c00017 	ldw	r3,0(sp)
   2cf78:	20c5c83a 	sub	r2,r4,r3
   2cf7c:	2089803a 	cmpltu	r4,r4,r2
   2cf80:	2dc7c83a 	sub	r3,r5,r23
   2cf84:	1907c83a 	sub	r3,r3,r4
   2cf88:	38cbc83a 	sub	r5,r7,r3
   2cf8c:	1009883a 	mov	r4,r2
   2cf90:	b105c83a 	sub	r2,r22,r4
   2cf94:	b087803a 	cmpltu	r3,r22,r2
   2cf98:	28c7c83a 	sub	r3,r5,r3
   2cf9c:	d9400317 	ldw	r5,12(sp)
   2cfa0:	1544d83a 	srl	r2,r2,r21
   2cfa4:	1948983a 	sll	r4,r3,r5
   2cfa8:	1d46d83a 	srl	r3,r3,r21
   2cfac:	20a4b03a 	or	r18,r4,r2
   2cfb0:	9011883a 	mov	r8,r18
   2cfb4:	1813883a 	mov	r9,r3
   2cfb8:	003ef606 	br	2cb94 <__umoddi3+0xf8>
   2cfbc:	01400604 	movi	r5,24
   2cfc0:	2805883a 	mov	r2,r5
   2cfc4:	003ecc06 	br	2caf8 <__umoddi3+0x5c>
   2cfc8:	01400204 	movi	r5,8
   2cfcc:	2805883a 	mov	r2,r5
   2cfd0:	003ec906 	br	2caf8 <__umoddi3+0x5c>
   2cfd4:	01400204 	movi	r5,8
   2cfd8:	2805883a 	mov	r2,r5
   2cfdc:	003f0106 	br	2cbe4 <__umoddi3+0x148>
   2cfe0:	01400204 	movi	r5,8
   2cfe4:	2805883a 	mov	r2,r5
   2cfe8:	003f1206 	br	2cc34 <__umoddi3+0x198>
   2cfec:	01400604 	movi	r5,24
   2cff0:	2805883a 	mov	r2,r5
   2cff4:	003f0f06 	br	2cc34 <__umoddi3+0x198>
   2cff8:	01400604 	movi	r5,24
   2cffc:	2805883a 	mov	r2,r5
   2d000:	003ef806 	br	2cbe4 <__umoddi3+0x148>
   2d004:	3c7fb82e 	bgeu	r7,r17,2cee8 <__umoddi3+0x44c>
   2d008:	843fffc4 	addi	r16,r16,-1
   2d00c:	3dcf883a 	add	r7,r7,r23
   2d010:	003fb506 	br	2cee8 <__umoddi3+0x44c>
   2d014:	147fa22e 	bgeu	r2,r17,2cea0 <__umoddi3+0x404>
   2d018:	e73fffc4 	addi	fp,fp,-1
   2d01c:	15c5883a 	add	r2,r2,r23
   2d020:	003f9f06 	br	2cea0 <__umoddi3+0x404>
   2d024:	147f692e 	bgeu	r2,r17,2cdcc <__umoddi3+0x330>
   2d028:	1405883a 	add	r2,r2,r16
   2d02c:	003f6706 	br	2cdcc <__umoddi3+0x330>
   2d030:	1405883a 	add	r2,r2,r16
   2d034:	003f1906 	br	2cc9c <__umoddi3+0x200>
   2d038:	1405883a 	add	r2,r2,r16
   2d03c:	003ec906 	br	2cb64 <__umoddi3+0xc8>
   2d040:	b13fcc36 	bltu	r22,r4,2cf74 <__umoddi3+0x4d8>
   2d044:	000b883a 	mov	r5,zero
   2d048:	003fd106 	br	2cf90 <__umoddi3+0x4f4>

0002d04c <__floatunsidf>:
   2d04c:	defff204 	addi	sp,sp,-56
   2d050:	dfc00d15 	stw	ra,52(sp)
   2d054:	ddc00c15 	stw	r23,48(sp)
   2d058:	dd800b15 	stw	r22,44(sp)
   2d05c:	dd400a15 	stw	r21,40(sp)
   2d060:	dd000915 	stw	r20,36(sp)
   2d064:	dcc00815 	stw	r19,32(sp)
   2d068:	dc800715 	stw	r18,28(sp)
   2d06c:	dc400615 	stw	r17,24(sp)
   2d070:	dc000515 	stw	r16,20(sp)
   2d074:	d8000115 	stw	zero,4(sp)
   2d078:	20000f1e 	bne	r4,zero,2d0b8 <__floatunsidf+0x6c>
   2d07c:	00800084 	movi	r2,2
   2d080:	d8800015 	stw	r2,0(sp)
   2d084:	d809883a 	mov	r4,sp
   2d088:	0024cb80 	call	24cb8 <__pack_d>
   2d08c:	dfc00d17 	ldw	ra,52(sp)
   2d090:	ddc00c17 	ldw	r23,48(sp)
   2d094:	dd800b17 	ldw	r22,44(sp)
   2d098:	dd400a17 	ldw	r21,40(sp)
   2d09c:	dd000917 	ldw	r20,36(sp)
   2d0a0:	dcc00817 	ldw	r19,32(sp)
   2d0a4:	dc800717 	ldw	r18,28(sp)
   2d0a8:	dc400617 	ldw	r17,24(sp)
   2d0ac:	dc000517 	ldw	r16,20(sp)
   2d0b0:	dec00e04 	addi	sp,sp,56
   2d0b4:	f800283a 	ret
   2d0b8:	008000c4 	movi	r2,3
   2d0bc:	00c00f04 	movi	r3,60
   2d0c0:	002f883a 	mov	r23,zero
   2d0c4:	202d883a 	mov	r22,r4
   2d0c8:	d8800015 	stw	r2,0(sp)
   2d0cc:	d8c00215 	stw	r3,8(sp)
   2d0d0:	d9000315 	stw	r4,12(sp)
   2d0d4:	ddc00415 	stw	r23,16(sp)
   2d0d8:	00249e40 	call	249e4 <__clzsi2>
   2d0dc:	12400744 	addi	r9,r2,29
   2d0e0:	48000b16 	blt	r9,zero,2d110 <__floatunsidf+0xc4>
   2d0e4:	483fe726 	beq	r9,zero,2d084 <__floatunsidf+0x38>
   2d0e8:	10bfff44 	addi	r2,r2,-3
   2d0ec:	10002e16 	blt	r2,zero,2d1a8 <__floatunsidf+0x15c>
   2d0f0:	b0a2983a 	sll	r17,r22,r2
   2d0f4:	0021883a 	mov	r16,zero
   2d0f8:	d8800217 	ldw	r2,8(sp)
   2d0fc:	dc400415 	stw	r17,16(sp)
   2d100:	dc000315 	stw	r16,12(sp)
   2d104:	1245c83a 	sub	r2,r2,r9
   2d108:	d8800215 	stw	r2,8(sp)
   2d10c:	003fdd06 	br	2d084 <__floatunsidf+0x38>
   2d110:	0255c83a 	sub	r10,zero,r9
   2d114:	51bff804 	addi	r6,r10,-32
   2d118:	30001b16 	blt	r6,zero,2d188 <__floatunsidf+0x13c>
   2d11c:	b9a8d83a 	srl	r20,r23,r6
   2d120:	002b883a 	mov	r21,zero
   2d124:	000f883a 	mov	r7,zero
   2d128:	01000044 	movi	r4,1
   2d12c:	0011883a 	mov	r8,zero
   2d130:	30002516 	blt	r6,zero,2d1c8 <__floatunsidf+0x17c>
   2d134:	21a6983a 	sll	r19,r4,r6
   2d138:	0025883a 	mov	r18,zero
   2d13c:	00bfffc4 	movi	r2,-1
   2d140:	9089883a 	add	r4,r18,r2
   2d144:	988b883a 	add	r5,r19,r2
   2d148:	248d803a 	cmpltu	r6,r4,r18
   2d14c:	314b883a 	add	r5,r6,r5
   2d150:	b104703a 	and	r2,r22,r4
   2d154:	b946703a 	and	r3,r23,r5
   2d158:	10c4b03a 	or	r2,r2,r3
   2d15c:	10000226 	beq	r2,zero,2d168 <__floatunsidf+0x11c>
   2d160:	01c00044 	movi	r7,1
   2d164:	0011883a 	mov	r8,zero
   2d168:	d9000217 	ldw	r4,8(sp)
   2d16c:	a1c4b03a 	or	r2,r20,r7
   2d170:	aa06b03a 	or	r3,r21,r8
   2d174:	2249c83a 	sub	r4,r4,r9
   2d178:	d8c00415 	stw	r3,16(sp)
   2d17c:	d9000215 	stw	r4,8(sp)
   2d180:	d8800315 	stw	r2,12(sp)
   2d184:	003fbf06 	br	2d084 <__floatunsidf+0x38>
   2d188:	bdc7883a 	add	r3,r23,r23
   2d18c:	008007c4 	movi	r2,31
   2d190:	1285c83a 	sub	r2,r2,r10
   2d194:	1886983a 	sll	r3,r3,r2
   2d198:	b2a8d83a 	srl	r20,r22,r10
   2d19c:	baaad83a 	srl	r21,r23,r10
   2d1a0:	1d28b03a 	or	r20,r3,r20
   2d1a4:	003fdf06 	br	2d124 <__floatunsidf+0xd8>
   2d1a8:	b006d07a 	srli	r3,r22,1
   2d1ac:	008007c4 	movi	r2,31
   2d1b0:	1245c83a 	sub	r2,r2,r9
   2d1b4:	1886d83a 	srl	r3,r3,r2
   2d1b8:	ba62983a 	sll	r17,r23,r9
   2d1bc:	b260983a 	sll	r16,r22,r9
   2d1c0:	1c62b03a 	or	r17,r3,r17
   2d1c4:	003fcc06 	br	2d0f8 <__floatunsidf+0xac>
   2d1c8:	2006d07a 	srli	r3,r4,1
   2d1cc:	008007c4 	movi	r2,31
   2d1d0:	1285c83a 	sub	r2,r2,r10
   2d1d4:	18a6d83a 	srl	r19,r3,r2
   2d1d8:	22a4983a 	sll	r18,r4,r10
   2d1dc:	003fd706 	br	2d13c <__floatunsidf+0xf0>

0002d1e0 <udivmodsi4>:
   2d1e0:	29001b2e 	bgeu	r5,r4,2d250 <udivmodsi4+0x70>
   2d1e4:	28001a16 	blt	r5,zero,2d250 <udivmodsi4+0x70>
   2d1e8:	00800044 	movi	r2,1
   2d1ec:	0007883a 	mov	r3,zero
   2d1f0:	01c007c4 	movi	r7,31
   2d1f4:	00000306 	br	2d204 <udivmodsi4+0x24>
   2d1f8:	19c01326 	beq	r3,r7,2d248 <udivmodsi4+0x68>
   2d1fc:	18c00044 	addi	r3,r3,1
   2d200:	28000416 	blt	r5,zero,2d214 <udivmodsi4+0x34>
   2d204:	294b883a 	add	r5,r5,r5
   2d208:	1085883a 	add	r2,r2,r2
   2d20c:	293ffa36 	bltu	r5,r4,2d1f8 <udivmodsi4+0x18>
   2d210:	10000d26 	beq	r2,zero,2d248 <udivmodsi4+0x68>
   2d214:	0007883a 	mov	r3,zero
   2d218:	21400236 	bltu	r4,r5,2d224 <udivmodsi4+0x44>
   2d21c:	2149c83a 	sub	r4,r4,r5
   2d220:	1886b03a 	or	r3,r3,r2
   2d224:	1004d07a 	srli	r2,r2,1
   2d228:	280ad07a 	srli	r5,r5,1
   2d22c:	103ffa1e 	bne	r2,zero,2d218 <udivmodsi4+0x38>
   2d230:	30000226 	beq	r6,zero,2d23c <udivmodsi4+0x5c>
   2d234:	2005883a 	mov	r2,r4
   2d238:	f800283a 	ret
   2d23c:	1809883a 	mov	r4,r3
   2d240:	2005883a 	mov	r2,r4
   2d244:	f800283a 	ret
   2d248:	0007883a 	mov	r3,zero
   2d24c:	003ff806 	br	2d230 <udivmodsi4+0x50>
   2d250:	00800044 	movi	r2,1
   2d254:	0007883a 	mov	r3,zero
   2d258:	003fef06 	br	2d218 <udivmodsi4+0x38>

0002d25c <__divsi3>:
   2d25c:	defffe04 	addi	sp,sp,-8
   2d260:	dc000015 	stw	r16,0(sp)
   2d264:	dfc00115 	stw	ra,4(sp)
   2d268:	0021883a 	mov	r16,zero
   2d26c:	20000c16 	blt	r4,zero,2d2a0 <__divsi3+0x44>
   2d270:	000d883a 	mov	r6,zero
   2d274:	28000e16 	blt	r5,zero,2d2b0 <__divsi3+0x54>
   2d278:	002d1e00 	call	2d1e0 <udivmodsi4>
   2d27c:	1007883a 	mov	r3,r2
   2d280:	8005003a 	cmpeq	r2,r16,zero
   2d284:	1000011e 	bne	r2,zero,2d28c <__divsi3+0x30>
   2d288:	00c7c83a 	sub	r3,zero,r3
   2d28c:	1805883a 	mov	r2,r3
   2d290:	dfc00117 	ldw	ra,4(sp)
   2d294:	dc000017 	ldw	r16,0(sp)
   2d298:	dec00204 	addi	sp,sp,8
   2d29c:	f800283a 	ret
   2d2a0:	0109c83a 	sub	r4,zero,r4
   2d2a4:	04000044 	movi	r16,1
   2d2a8:	000d883a 	mov	r6,zero
   2d2ac:	283ff20e 	bge	r5,zero,2d278 <__divsi3+0x1c>
   2d2b0:	014bc83a 	sub	r5,zero,r5
   2d2b4:	8021003a 	cmpeq	r16,r16,zero
   2d2b8:	003fef06 	br	2d278 <__divsi3+0x1c>

0002d2bc <__modsi3>:
   2d2bc:	deffff04 	addi	sp,sp,-4
   2d2c0:	dfc00015 	stw	ra,0(sp)
   2d2c4:	01800044 	movi	r6,1
   2d2c8:	2807883a 	mov	r3,r5
   2d2cc:	20000416 	blt	r4,zero,2d2e0 <__modsi3+0x24>
   2d2d0:	28000c16 	blt	r5,zero,2d304 <__modsi3+0x48>
   2d2d4:	dfc00017 	ldw	ra,0(sp)
   2d2d8:	dec00104 	addi	sp,sp,4
   2d2dc:	002d1e01 	jmpi	2d1e0 <udivmodsi4>
   2d2e0:	0109c83a 	sub	r4,zero,r4
   2d2e4:	28000b16 	blt	r5,zero,2d314 <__modsi3+0x58>
   2d2e8:	180b883a 	mov	r5,r3
   2d2ec:	01800044 	movi	r6,1
   2d2f0:	002d1e00 	call	2d1e0 <udivmodsi4>
   2d2f4:	0085c83a 	sub	r2,zero,r2
   2d2f8:	dfc00017 	ldw	ra,0(sp)
   2d2fc:	dec00104 	addi	sp,sp,4
   2d300:	f800283a 	ret
   2d304:	014bc83a 	sub	r5,zero,r5
   2d308:	dfc00017 	ldw	ra,0(sp)
   2d30c:	dec00104 	addi	sp,sp,4
   2d310:	002d1e01 	jmpi	2d1e0 <udivmodsi4>
   2d314:	0147c83a 	sub	r3,zero,r5
   2d318:	003ff306 	br	2d2e8 <__modsi3+0x2c>

0002d31c <__udivsi3>:
   2d31c:	000d883a 	mov	r6,zero
   2d320:	002d1e01 	jmpi	2d1e0 <udivmodsi4>

0002d324 <__umodsi3>:
   2d324:	01800044 	movi	r6,1
   2d328:	002d1e01 	jmpi	2d1e0 <udivmodsi4>

0002d32c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2d32c:	defff804 	addi	sp,sp,-32
   2d330:	dfc00715 	stw	ra,28(sp)
   2d334:	df000615 	stw	fp,24(sp)
   2d338:	df000604 	addi	fp,sp,24
   2d33c:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d340:	e0bffc17 	ldw	r2,-16(fp)
   2d344:	1004803a 	cmplt	r2,r2,zero
   2d348:	1000081e 	bne	r2,zero,2d36c <close+0x40>
   2d34c:	e0bffc17 	ldw	r2,-16(fp)
   2d350:	10800324 	muli	r2,r2,12
   2d354:	1007883a 	mov	r3,r2
   2d358:	008000f4 	movhi	r2,3
   2d35c:	10822704 	addi	r2,r2,2204
   2d360:	1887883a 	add	r3,r3,r2
   2d364:	e0ffff15 	stw	r3,-4(fp)
   2d368:	00000106 	br	2d370 <close+0x44>
   2d36c:	e03fff15 	stw	zero,-4(fp)
   2d370:	e0bfff17 	ldw	r2,-4(fp)
   2d374:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
   2d378:	e0bffb17 	ldw	r2,-20(fp)
   2d37c:	1005003a 	cmpeq	r2,r2,zero
   2d380:	10001d1e 	bne	r2,zero,2d3f8 <close+0xcc>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d384:	e0bffb17 	ldw	r2,-20(fp)
   2d388:	10800017 	ldw	r2,0(r2)
   2d38c:	10800417 	ldw	r2,16(r2)
   2d390:	1005003a 	cmpeq	r2,r2,zero
   2d394:	1000071e 	bne	r2,zero,2d3b4 <close+0x88>
   2d398:	e0bffb17 	ldw	r2,-20(fp)
   2d39c:	10800017 	ldw	r2,0(r2)
   2d3a0:	10800417 	ldw	r2,16(r2)
   2d3a4:	e13ffb17 	ldw	r4,-20(fp)
   2d3a8:	103ee83a 	callr	r2
   2d3ac:	e0bffe15 	stw	r2,-8(fp)
   2d3b0:	00000106 	br	2d3b8 <close+0x8c>
   2d3b4:	e03ffe15 	stw	zero,-8(fp)
   2d3b8:	e0bffe17 	ldw	r2,-8(fp)
   2d3bc:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d3c0:	e13ffc17 	ldw	r4,-16(fp)
   2d3c4:	002db700 	call	2db70 <alt_release_fd>
    if (rval < 0)
   2d3c8:	e0bffa17 	ldw	r2,-24(fp)
   2d3cc:	1004403a 	cmpge	r2,r2,zero
   2d3d0:	1000071e 	bne	r2,zero,2d3f0 <close+0xc4>
    {
      ALT_ERRNO = -rval;
   2d3d4:	002d4280 	call	2d428 <alt_get_errno>
   2d3d8:	e0fffa17 	ldw	r3,-24(fp)
   2d3dc:	00c7c83a 	sub	r3,zero,r3
   2d3e0:	10c00015 	stw	r3,0(r2)
      return -1;
   2d3e4:	00bfffc4 	movi	r2,-1
   2d3e8:	e0bffd15 	stw	r2,-12(fp)
   2d3ec:	00000806 	br	2d410 <close+0xe4>
    }
    return 0;
   2d3f0:	e03ffd15 	stw	zero,-12(fp)
   2d3f4:	00000606 	br	2d410 <close+0xe4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d3f8:	002d4280 	call	2d428 <alt_get_errno>
   2d3fc:	1007883a 	mov	r3,r2
   2d400:	00801444 	movi	r2,81
   2d404:	18800015 	stw	r2,0(r3)
    return -1;
   2d408:	00bfffc4 	movi	r2,-1
   2d40c:	e0bffd15 	stw	r2,-12(fp)
   2d410:	e0bffd17 	ldw	r2,-12(fp)
  }
}
   2d414:	e037883a 	mov	sp,fp
   2d418:	dfc00117 	ldw	ra,4(sp)
   2d41c:	df000017 	ldw	fp,0(sp)
   2d420:	dec00204 	addi	sp,sp,8
   2d424:	f800283a 	ret

0002d428 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d428:	defffd04 	addi	sp,sp,-12
   2d42c:	dfc00215 	stw	ra,8(sp)
   2d430:	df000115 	stw	fp,4(sp)
   2d434:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2d438:	008000f4 	movhi	r2,3
   2d43c:	1086ba04 	addi	r2,r2,6888
   2d440:	10800017 	ldw	r2,0(r2)
   2d444:	1005003a 	cmpeq	r2,r2,zero
   2d448:	1000061e 	bne	r2,zero,2d464 <alt_get_errno+0x3c>
   2d44c:	008000f4 	movhi	r2,3
   2d450:	1086ba04 	addi	r2,r2,6888
   2d454:	10800017 	ldw	r2,0(r2)
   2d458:	103ee83a 	callr	r2
   2d45c:	e0bfff15 	stw	r2,-4(fp)
   2d460:	00000306 	br	2d470 <alt_get_errno+0x48>
   2d464:	008000f4 	movhi	r2,3
   2d468:	108d6d04 	addi	r2,r2,13748
   2d46c:	e0bfff15 	stw	r2,-4(fp)
   2d470:	e0bfff17 	ldw	r2,-4(fp)
}
   2d474:	e037883a 	mov	sp,fp
   2d478:	dfc00117 	ldw	ra,4(sp)
   2d47c:	df000017 	ldw	fp,0(sp)
   2d480:	dec00204 	addi	sp,sp,8
   2d484:	f800283a 	ret

0002d488 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d488:	defffc04 	addi	sp,sp,-16
   2d48c:	df000315 	stw	fp,12(sp)
   2d490:	df000304 	addi	fp,sp,12
   2d494:	e13ffd15 	stw	r4,-12(fp)
   2d498:	e17ffe15 	stw	r5,-8(fp)
   2d49c:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2d4a0:	e0bfff17 	ldw	r2,-4(fp)
}
   2d4a4:	e037883a 	mov	sp,fp
   2d4a8:	df000017 	ldw	fp,0(sp)
   2d4ac:	dec00104 	addi	sp,sp,4
   2d4b0:	f800283a 	ret

0002d4b4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d4b4:	defff904 	addi	sp,sp,-28
   2d4b8:	dfc00615 	stw	ra,24(sp)
   2d4bc:	df000515 	stw	fp,20(sp)
   2d4c0:	df000504 	addi	fp,sp,20
   2d4c4:	e13ffc15 	stw	r4,-16(fp)
   2d4c8:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d4cc:	e0bffc17 	ldw	r2,-16(fp)
   2d4d0:	1004803a 	cmplt	r2,r2,zero
   2d4d4:	1000081e 	bne	r2,zero,2d4f8 <fstat+0x44>
   2d4d8:	e0bffc17 	ldw	r2,-16(fp)
   2d4dc:	10800324 	muli	r2,r2,12
   2d4e0:	1007883a 	mov	r3,r2
   2d4e4:	008000f4 	movhi	r2,3
   2d4e8:	10822704 	addi	r2,r2,2204
   2d4ec:	1887883a 	add	r3,r3,r2
   2d4f0:	e0ffff15 	stw	r3,-4(fp)
   2d4f4:	00000106 	br	2d4fc <fstat+0x48>
   2d4f8:	e03fff15 	stw	zero,-4(fp)
   2d4fc:	e0bfff17 	ldw	r2,-4(fp)
   2d500:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d504:	e0bffb17 	ldw	r2,-20(fp)
   2d508:	1005003a 	cmpeq	r2,r2,zero
   2d50c:	1000121e 	bne	r2,zero,2d558 <fstat+0xa4>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d510:	e0bffb17 	ldw	r2,-20(fp)
   2d514:	10800017 	ldw	r2,0(r2)
   2d518:	10800817 	ldw	r2,32(r2)
   2d51c:	1005003a 	cmpeq	r2,r2,zero
   2d520:	1000081e 	bne	r2,zero,2d544 <fstat+0x90>
    {
      return fd->dev->fstat(fd, st);
   2d524:	e0bffb17 	ldw	r2,-20(fp)
   2d528:	10800017 	ldw	r2,0(r2)
   2d52c:	10800817 	ldw	r2,32(r2)
   2d530:	e13ffb17 	ldw	r4,-20(fp)
   2d534:	e17ffd17 	ldw	r5,-12(fp)
   2d538:	103ee83a 	callr	r2
   2d53c:	e0bffe15 	stw	r2,-8(fp)
   2d540:	00000b06 	br	2d570 <fstat+0xbc>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2d544:	e0fffd17 	ldw	r3,-12(fp)
   2d548:	00880004 	movi	r2,8192
   2d54c:	18800115 	stw	r2,4(r3)
      return 0;
   2d550:	e03ffe15 	stw	zero,-8(fp)
   2d554:	00000606 	br	2d570 <fstat+0xbc>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d558:	002d5880 	call	2d588 <alt_get_errno>
   2d55c:	1007883a 	mov	r3,r2
   2d560:	00801444 	movi	r2,81
   2d564:	18800015 	stw	r2,0(r3)
    return -1;
   2d568:	00bfffc4 	movi	r2,-1
   2d56c:	e0bffe15 	stw	r2,-8(fp)
   2d570:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   2d574:	e037883a 	mov	sp,fp
   2d578:	dfc00117 	ldw	ra,4(sp)
   2d57c:	df000017 	ldw	fp,0(sp)
   2d580:	dec00204 	addi	sp,sp,8
   2d584:	f800283a 	ret

0002d588 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d588:	defffd04 	addi	sp,sp,-12
   2d58c:	dfc00215 	stw	ra,8(sp)
   2d590:	df000115 	stw	fp,4(sp)
   2d594:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2d598:	008000f4 	movhi	r2,3
   2d59c:	1086ba04 	addi	r2,r2,6888
   2d5a0:	10800017 	ldw	r2,0(r2)
   2d5a4:	1005003a 	cmpeq	r2,r2,zero
   2d5a8:	1000061e 	bne	r2,zero,2d5c4 <alt_get_errno+0x3c>
   2d5ac:	008000f4 	movhi	r2,3
   2d5b0:	1086ba04 	addi	r2,r2,6888
   2d5b4:	10800017 	ldw	r2,0(r2)
   2d5b8:	103ee83a 	callr	r2
   2d5bc:	e0bfff15 	stw	r2,-4(fp)
   2d5c0:	00000306 	br	2d5d0 <alt_get_errno+0x48>
   2d5c4:	008000f4 	movhi	r2,3
   2d5c8:	108d6d04 	addi	r2,r2,13748
   2d5cc:	e0bfff15 	stw	r2,-4(fp)
   2d5d0:	e0bfff17 	ldw	r2,-4(fp)
}
   2d5d4:	e037883a 	mov	sp,fp
   2d5d8:	dfc00117 	ldw	ra,4(sp)
   2d5dc:	df000017 	ldw	fp,0(sp)
   2d5e0:	dec00204 	addi	sp,sp,8
   2d5e4:	f800283a 	ret

0002d5e8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2d5e8:	deffeb04 	addi	sp,sp,-84
   2d5ec:	dfc01415 	stw	ra,80(sp)
   2d5f0:	df001315 	stw	fp,76(sp)
   2d5f4:	df001304 	addi	fp,sp,76
   2d5f8:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d5fc:	e0bffd17 	ldw	r2,-12(fp)
   2d600:	1004803a 	cmplt	r2,r2,zero
   2d604:	1000081e 	bne	r2,zero,2d628 <isatty+0x40>
   2d608:	e0bffd17 	ldw	r2,-12(fp)
   2d60c:	10800324 	muli	r2,r2,12
   2d610:	1007883a 	mov	r3,r2
   2d614:	008000f4 	movhi	r2,3
   2d618:	10822704 	addi	r2,r2,2204
   2d61c:	1887883a 	add	r3,r3,r2
   2d620:	e0ffff15 	stw	r3,-4(fp)
   2d624:	00000106 	br	2d62c <isatty+0x44>
   2d628:	e03fff15 	stw	zero,-4(fp)
   2d62c:	e0bfff17 	ldw	r2,-4(fp)
   2d630:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
   2d634:	e0bfed17 	ldw	r2,-76(fp)
   2d638:	1005003a 	cmpeq	r2,r2,zero
   2d63c:	10000f1e 	bne	r2,zero,2d67c <isatty+0x94>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2d640:	e0bfed17 	ldw	r2,-76(fp)
   2d644:	10800017 	ldw	r2,0(r2)
   2d648:	10800817 	ldw	r2,32(r2)
   2d64c:	1004c03a 	cmpne	r2,r2,zero
   2d650:	1000031e 	bne	r2,zero,2d660 <isatty+0x78>
    {
      return 1;
   2d654:	00800044 	movi	r2,1
   2d658:	e0bffe15 	stw	r2,-8(fp)
   2d65c:	00000c06 	br	2d690 <isatty+0xa8>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2d660:	e17fee04 	addi	r5,fp,-72
   2d664:	e13ffd17 	ldw	r4,-12(fp)
   2d668:	002d4b40 	call	2d4b4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2d66c:	e0bfef17 	ldw	r2,-68(fp)
   2d670:	10880020 	cmpeqi	r2,r2,8192
   2d674:	e0bffe15 	stw	r2,-8(fp)
   2d678:	00000506 	br	2d690 <isatty+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d67c:	002d6a80 	call	2d6a8 <alt_get_errno>
   2d680:	1007883a 	mov	r3,r2
   2d684:	00801444 	movi	r2,81
   2d688:	18800015 	stw	r2,0(r3)
    return 0;
   2d68c:	e03ffe15 	stw	zero,-8(fp)
   2d690:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   2d694:	e037883a 	mov	sp,fp
   2d698:	dfc00117 	ldw	ra,4(sp)
   2d69c:	df000017 	ldw	fp,0(sp)
   2d6a0:	dec00204 	addi	sp,sp,8
   2d6a4:	f800283a 	ret

0002d6a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d6a8:	defffd04 	addi	sp,sp,-12
   2d6ac:	dfc00215 	stw	ra,8(sp)
   2d6b0:	df000115 	stw	fp,4(sp)
   2d6b4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2d6b8:	008000f4 	movhi	r2,3
   2d6bc:	1086ba04 	addi	r2,r2,6888
   2d6c0:	10800017 	ldw	r2,0(r2)
   2d6c4:	1005003a 	cmpeq	r2,r2,zero
   2d6c8:	1000061e 	bne	r2,zero,2d6e4 <alt_get_errno+0x3c>
   2d6cc:	008000f4 	movhi	r2,3
   2d6d0:	1086ba04 	addi	r2,r2,6888
   2d6d4:	10800017 	ldw	r2,0(r2)
   2d6d8:	103ee83a 	callr	r2
   2d6dc:	e0bfff15 	stw	r2,-4(fp)
   2d6e0:	00000306 	br	2d6f0 <alt_get_errno+0x48>
   2d6e4:	008000f4 	movhi	r2,3
   2d6e8:	108d6d04 	addi	r2,r2,13748
   2d6ec:	e0bfff15 	stw	r2,-4(fp)
   2d6f0:	e0bfff17 	ldw	r2,-4(fp)
}
   2d6f4:	e037883a 	mov	sp,fp
   2d6f8:	dfc00117 	ldw	ra,4(sp)
   2d6fc:	df000017 	ldw	fp,0(sp)
   2d700:	dec00204 	addi	sp,sp,8
   2d704:	f800283a 	ret

0002d708 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d708:	defffe04 	addi	sp,sp,-8
   2d70c:	dfc00115 	stw	ra,4(sp)
   2d710:	df000015 	stw	fp,0(sp)
   2d714:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d718:	010000f4 	movhi	r4,3
   2d71c:	2106bf04 	addi	r4,r4,6908
   2d720:	014000f4 	movhi	r5,3
   2d724:	29401804 	addi	r5,r5,96
   2d728:	018000f4 	movhi	r6,3
   2d72c:	3186bf04 	addi	r6,r6,6908
   2d730:	002d7880 	call	2d788 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d734:	010000b4 	movhi	r4,2
   2d738:	21000804 	addi	r4,r4,32
   2d73c:	014000b4 	movhi	r5,2
   2d740:	29400804 	addi	r5,r5,32
   2d744:	018000b4 	movhi	r6,2
   2d748:	31806d04 	addi	r6,r6,436
   2d74c:	002d7880 	call	2d788 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d750:	010000f4 	movhi	r4,3
   2d754:	213f1f04 	addi	r4,r4,-900
   2d758:	014000f4 	movhi	r5,3
   2d75c:	297f1f04 	addi	r5,r5,-900
   2d760:	018000f4 	movhi	r6,3
   2d764:	31801804 	addi	r6,r6,96
   2d768:	002d7880 	call	2d788 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d76c:	002eabc0 	call	2eabc <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d770:	002ecb40 	call	2ecb4 <alt_icache_flush_all>
}
   2d774:	e037883a 	mov	sp,fp
   2d778:	dfc00117 	ldw	ra,4(sp)
   2d77c:	df000017 	ldw	fp,0(sp)
   2d780:	dec00204 	addi	sp,sp,8
   2d784:	f800283a 	ret

0002d788 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2d788:	defffc04 	addi	sp,sp,-16
   2d78c:	df000315 	stw	fp,12(sp)
   2d790:	df000304 	addi	fp,sp,12
   2d794:	e13ffd15 	stw	r4,-12(fp)
   2d798:	e17ffe15 	stw	r5,-8(fp)
   2d79c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2d7a0:	e0fffe17 	ldw	r3,-8(fp)
   2d7a4:	e0bffd17 	ldw	r2,-12(fp)
   2d7a8:	18800e26 	beq	r3,r2,2d7e4 <alt_load_section+0x5c>
  {
    while( to != end )
   2d7ac:	00000a06 	br	2d7d8 <alt_load_section+0x50>
    {
      *to++ = *from++;
   2d7b0:	e0bffd17 	ldw	r2,-12(fp)
   2d7b4:	10c00017 	ldw	r3,0(r2)
   2d7b8:	e0bffe17 	ldw	r2,-8(fp)
   2d7bc:	10c00015 	stw	r3,0(r2)
   2d7c0:	e0bffe17 	ldw	r2,-8(fp)
   2d7c4:	10800104 	addi	r2,r2,4
   2d7c8:	e0bffe15 	stw	r2,-8(fp)
   2d7cc:	e0bffd17 	ldw	r2,-12(fp)
   2d7d0:	10800104 	addi	r2,r2,4
   2d7d4:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2d7d8:	e0fffe17 	ldw	r3,-8(fp)
   2d7dc:	e0bfff17 	ldw	r2,-4(fp)
   2d7e0:	18bff31e 	bne	r3,r2,2d7b0 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   2d7e4:	e037883a 	mov	sp,fp
   2d7e8:	df000017 	ldw	fp,0(sp)
   2d7ec:	dec00104 	addi	sp,sp,4
   2d7f0:	f800283a 	ret

0002d7f4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2d7f4:	defff804 	addi	sp,sp,-32
   2d7f8:	dfc00715 	stw	ra,28(sp)
   2d7fc:	df000615 	stw	fp,24(sp)
   2d800:	df000604 	addi	fp,sp,24
   2d804:	e13ffc15 	stw	r4,-16(fp)
   2d808:	e17ffd15 	stw	r5,-12(fp)
   2d80c:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2d810:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d814:	e0bffc17 	ldw	r2,-16(fp)
   2d818:	1004803a 	cmplt	r2,r2,zero
   2d81c:	1000081e 	bne	r2,zero,2d840 <lseek+0x4c>
   2d820:	e0bffc17 	ldw	r2,-16(fp)
   2d824:	10800324 	muli	r2,r2,12
   2d828:	1007883a 	mov	r3,r2
   2d82c:	008000f4 	movhi	r2,3
   2d830:	10822704 	addi	r2,r2,2204
   2d834:	1887883a 	add	r3,r3,r2
   2d838:	e0ffff15 	stw	r3,-4(fp)
   2d83c:	00000106 	br	2d844 <lseek+0x50>
   2d840:	e03fff15 	stw	zero,-4(fp)
   2d844:	e0bfff17 	ldw	r2,-4(fp)
   2d848:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
   2d84c:	e0bffb17 	ldw	r2,-20(fp)
   2d850:	1005003a 	cmpeq	r2,r2,zero
   2d854:	1000111e 	bne	r2,zero,2d89c <lseek+0xa8>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2d858:	e0bffb17 	ldw	r2,-20(fp)
   2d85c:	10800017 	ldw	r2,0(r2)
   2d860:	10800717 	ldw	r2,28(r2)
   2d864:	1005003a 	cmpeq	r2,r2,zero
   2d868:	1000091e 	bne	r2,zero,2d890 <lseek+0x9c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2d86c:	e0bffb17 	ldw	r2,-20(fp)
   2d870:	10800017 	ldw	r2,0(r2)
   2d874:	10800717 	ldw	r2,28(r2)
   2d878:	e13ffb17 	ldw	r4,-20(fp)
   2d87c:	e17ffd17 	ldw	r5,-12(fp)
   2d880:	e1bffe17 	ldw	r6,-8(fp)
   2d884:	103ee83a 	callr	r2
   2d888:	e0bffa15 	stw	r2,-24(fp)
   2d88c:	00000506 	br	2d8a4 <lseek+0xb0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2d890:	00bfde84 	movi	r2,-134
   2d894:	e0bffa15 	stw	r2,-24(fp)
   2d898:	00000206 	br	2d8a4 <lseek+0xb0>
    }
  }
  else  
  {
    rc = -EBADFD;
   2d89c:	00bfebc4 	movi	r2,-81
   2d8a0:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
   2d8a4:	e0bffa17 	ldw	r2,-24(fp)
   2d8a8:	1004403a 	cmpge	r2,r2,zero
   2d8ac:	1000071e 	bne	r2,zero,2d8cc <lseek+0xd8>
  {
    ALT_ERRNO = -rc;
   2d8b0:	002d8e40 	call	2d8e4 <alt_get_errno>
   2d8b4:	1007883a 	mov	r3,r2
   2d8b8:	e0bffa17 	ldw	r2,-24(fp)
   2d8bc:	0085c83a 	sub	r2,zero,r2
   2d8c0:	18800015 	stw	r2,0(r3)
    rc = -1;
   2d8c4:	00bfffc4 	movi	r2,-1
   2d8c8:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
   2d8cc:	e0bffa17 	ldw	r2,-24(fp)
}
   2d8d0:	e037883a 	mov	sp,fp
   2d8d4:	dfc00117 	ldw	ra,4(sp)
   2d8d8:	df000017 	ldw	fp,0(sp)
   2d8dc:	dec00204 	addi	sp,sp,8
   2d8e0:	f800283a 	ret

0002d8e4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d8e4:	defffd04 	addi	sp,sp,-12
   2d8e8:	dfc00215 	stw	ra,8(sp)
   2d8ec:	df000115 	stw	fp,4(sp)
   2d8f0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2d8f4:	008000f4 	movhi	r2,3
   2d8f8:	1086ba04 	addi	r2,r2,6888
   2d8fc:	10800017 	ldw	r2,0(r2)
   2d900:	1005003a 	cmpeq	r2,r2,zero
   2d904:	1000061e 	bne	r2,zero,2d920 <alt_get_errno+0x3c>
   2d908:	008000f4 	movhi	r2,3
   2d90c:	1086ba04 	addi	r2,r2,6888
   2d910:	10800017 	ldw	r2,0(r2)
   2d914:	103ee83a 	callr	r2
   2d918:	e0bfff15 	stw	r2,-4(fp)
   2d91c:	00000306 	br	2d92c <alt_get_errno+0x48>
   2d920:	008000f4 	movhi	r2,3
   2d924:	108d6d04 	addi	r2,r2,13748
   2d928:	e0bfff15 	stw	r2,-4(fp)
   2d92c:	e0bfff17 	ldw	r2,-4(fp)
}
   2d930:	e037883a 	mov	sp,fp
   2d934:	dfc00117 	ldw	ra,4(sp)
   2d938:	df000017 	ldw	fp,0(sp)
   2d93c:	dec00204 	addi	sp,sp,8
   2d940:	f800283a 	ret

0002d944 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2d944:	defffd04 	addi	sp,sp,-12
   2d948:	dfc00215 	stw	ra,8(sp)
   2d94c:	df000115 	stw	fp,4(sp)
   2d950:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2d954:	0009883a 	mov	r4,zero
   2d958:	002de0c0 	call	2de0c <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2d95c:	002de400 	call	2de40 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2d960:	010000f4 	movhi	r4,3
   2d964:	21000e04 	addi	r4,r4,56
   2d968:	014000f4 	movhi	r5,3
   2d96c:	29400e04 	addi	r5,r5,56
   2d970:	018000f4 	movhi	r6,3
   2d974:	31800e04 	addi	r6,r6,56
   2d978:	002f0740 	call	2f074 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2d97c:	002ebec0 	call	2ebec <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2d980:	010000f4 	movhi	r4,3
   2d984:	213b1404 	addi	r4,r4,-5040
   2d988:	002f8700 	call	2f870 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2d98c:	d126cf17 	ldw	r4,-25796(gp)
   2d990:	d166d017 	ldw	r5,-25792(gp)
   2d994:	d1a6d117 	ldw	r6,-25788(gp)
   2d998:	00204b40 	call	204b4 <main>
   2d99c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2d9a0:	01000044 	movi	r4,1
   2d9a4:	002d32c0 	call	2d32c <close>
  exit (result);
   2d9a8:	e13fff17 	ldw	r4,-4(fp)
   2d9ac:	002f8840 	call	2f884 <exit>

0002d9b0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2d9b0:	defffe04 	addi	sp,sp,-8
   2d9b4:	df000115 	stw	fp,4(sp)
   2d9b8:	df000104 	addi	fp,sp,4
   2d9bc:	e13fff15 	stw	r4,-4(fp)
}
   2d9c0:	e037883a 	mov	sp,fp
   2d9c4:	df000017 	ldw	fp,0(sp)
   2d9c8:	dec00104 	addi	sp,sp,4
   2d9cc:	f800283a 	ret

0002d9d0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2d9d0:	defffe04 	addi	sp,sp,-8
   2d9d4:	df000115 	stw	fp,4(sp)
   2d9d8:	df000104 	addi	fp,sp,4
   2d9dc:	e13fff15 	stw	r4,-4(fp)
}
   2d9e0:	e037883a 	mov	sp,fp
   2d9e4:	df000017 	ldw	fp,0(sp)
   2d9e8:	dec00104 	addi	sp,sp,4
   2d9ec:	f800283a 	ret

0002d9f0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2d9f0:	defff704 	addi	sp,sp,-36
   2d9f4:	dfc00815 	stw	ra,32(sp)
   2d9f8:	df000715 	stw	fp,28(sp)
   2d9fc:	df000704 	addi	fp,sp,28
   2da00:	e13ffb15 	stw	r4,-20(fp)
   2da04:	e17ffc15 	stw	r5,-16(fp)
   2da08:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2da0c:	e0bffb17 	ldw	r2,-20(fp)
   2da10:	1004803a 	cmplt	r2,r2,zero
   2da14:	1000081e 	bne	r2,zero,2da38 <read+0x48>
   2da18:	e0bffb17 	ldw	r2,-20(fp)
   2da1c:	10800324 	muli	r2,r2,12
   2da20:	1007883a 	mov	r3,r2
   2da24:	008000f4 	movhi	r2,3
   2da28:	10822704 	addi	r2,r2,2204
   2da2c:	1887883a 	add	r3,r3,r2
   2da30:	e0ffff15 	stw	r3,-4(fp)
   2da34:	00000106 	br	2da3c <read+0x4c>
   2da38:	e03fff15 	stw	zero,-4(fp)
   2da3c:	e0bfff17 	ldw	r2,-4(fp)
   2da40:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   2da44:	e0bffa17 	ldw	r2,-24(fp)
   2da48:	1005003a 	cmpeq	r2,r2,zero
   2da4c:	1000241e 	bne	r2,zero,2dae0 <read+0xf0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2da50:	e0bffa17 	ldw	r2,-24(fp)
   2da54:	10800217 	ldw	r2,8(r2)
   2da58:	108000cc 	andi	r2,r2,3
   2da5c:	10800060 	cmpeqi	r2,r2,1
   2da60:	10001a1e 	bne	r2,zero,2dacc <read+0xdc>
   2da64:	e0bffa17 	ldw	r2,-24(fp)
   2da68:	10800017 	ldw	r2,0(r2)
   2da6c:	10800517 	ldw	r2,20(r2)
   2da70:	1005003a 	cmpeq	r2,r2,zero
   2da74:	1000151e 	bne	r2,zero,2dacc <read+0xdc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2da78:	e0bffa17 	ldw	r2,-24(fp)
   2da7c:	10800017 	ldw	r2,0(r2)
   2da80:	10800517 	ldw	r2,20(r2)
   2da84:	e17ffc17 	ldw	r5,-16(fp)
   2da88:	e1bffd17 	ldw	r6,-12(fp)
   2da8c:	e13ffa17 	ldw	r4,-24(fp)
   2da90:	103ee83a 	callr	r2
   2da94:	e0bff915 	stw	r2,-28(fp)
   2da98:	e0bff917 	ldw	r2,-28(fp)
   2da9c:	1004403a 	cmpge	r2,r2,zero
   2daa0:	1000071e 	bne	r2,zero,2dac0 <read+0xd0>
        {
          ALT_ERRNO = -rval;
   2daa4:	002db100 	call	2db10 <alt_get_errno>
   2daa8:	e0fff917 	ldw	r3,-28(fp)
   2daac:	00c7c83a 	sub	r3,zero,r3
   2dab0:	10c00015 	stw	r3,0(r2)
          return -1;
   2dab4:	00bfffc4 	movi	r2,-1
   2dab8:	e0bffe15 	stw	r2,-8(fp)
   2dabc:	00000e06 	br	2daf8 <read+0x108>
        }
        return rval;
   2dac0:	e0bff917 	ldw	r2,-28(fp)
   2dac4:	e0bffe15 	stw	r2,-8(fp)
   2dac8:	00000b06 	br	2daf8 <read+0x108>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2dacc:	002db100 	call	2db10 <alt_get_errno>
   2dad0:	1007883a 	mov	r3,r2
   2dad4:	00800344 	movi	r2,13
   2dad8:	18800015 	stw	r2,0(r3)
   2dadc:	00000406 	br	2daf0 <read+0x100>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2dae0:	002db100 	call	2db10 <alt_get_errno>
   2dae4:	1007883a 	mov	r3,r2
   2dae8:	00801444 	movi	r2,81
   2daec:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2daf0:	00bfffc4 	movi	r2,-1
   2daf4:	e0bffe15 	stw	r2,-8(fp)
   2daf8:	e0bffe17 	ldw	r2,-8(fp)
}
   2dafc:	e037883a 	mov	sp,fp
   2db00:	dfc00117 	ldw	ra,4(sp)
   2db04:	df000017 	ldw	fp,0(sp)
   2db08:	dec00204 	addi	sp,sp,8
   2db0c:	f800283a 	ret

0002db10 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2db10:	defffd04 	addi	sp,sp,-12
   2db14:	dfc00215 	stw	ra,8(sp)
   2db18:	df000115 	stw	fp,4(sp)
   2db1c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2db20:	008000f4 	movhi	r2,3
   2db24:	1086ba04 	addi	r2,r2,6888
   2db28:	10800017 	ldw	r2,0(r2)
   2db2c:	1005003a 	cmpeq	r2,r2,zero
   2db30:	1000061e 	bne	r2,zero,2db4c <alt_get_errno+0x3c>
   2db34:	008000f4 	movhi	r2,3
   2db38:	1086ba04 	addi	r2,r2,6888
   2db3c:	10800017 	ldw	r2,0(r2)
   2db40:	103ee83a 	callr	r2
   2db44:	e0bfff15 	stw	r2,-4(fp)
   2db48:	00000306 	br	2db58 <alt_get_errno+0x48>
   2db4c:	008000f4 	movhi	r2,3
   2db50:	108d6d04 	addi	r2,r2,13748
   2db54:	e0bfff15 	stw	r2,-4(fp)
   2db58:	e0bfff17 	ldw	r2,-4(fp)
}
   2db5c:	e037883a 	mov	sp,fp
   2db60:	dfc00117 	ldw	ra,4(sp)
   2db64:	df000017 	ldw	fp,0(sp)
   2db68:	dec00204 	addi	sp,sp,8
   2db6c:	f800283a 	ret

0002db70 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2db70:	defffe04 	addi	sp,sp,-8
   2db74:	df000115 	stw	fp,4(sp)
   2db78:	df000104 	addi	fp,sp,4
   2db7c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2db80:	e0bfff17 	ldw	r2,-4(fp)
   2db84:	108000d0 	cmplti	r2,r2,3
   2db88:	10000d1e 	bne	r2,zero,2dbc0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2db8c:	e0bfff17 	ldw	r2,-4(fp)
   2db90:	00c000f4 	movhi	r3,3
   2db94:	18c22704 	addi	r3,r3,2204
   2db98:	10800324 	muli	r2,r2,12
   2db9c:	10c5883a 	add	r2,r2,r3
   2dba0:	10800204 	addi	r2,r2,8
   2dba4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2dba8:	e0bfff17 	ldw	r2,-4(fp)
   2dbac:	00c000f4 	movhi	r3,3
   2dbb0:	18c22704 	addi	r3,r3,2204
   2dbb4:	10800324 	muli	r2,r2,12
   2dbb8:	10c5883a 	add	r2,r2,r3
   2dbbc:	10000015 	stw	zero,0(r2)
  }
}
   2dbc0:	e037883a 	mov	sp,fp
   2dbc4:	df000017 	ldw	fp,0(sp)
   2dbc8:	dec00104 	addi	sp,sp,4
   2dbcc:	f800283a 	ret

0002dbd0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2dbd0:	defff804 	addi	sp,sp,-32
   2dbd4:	df000715 	stw	fp,28(sp)
   2dbd8:	df000704 	addi	fp,sp,28
   2dbdc:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2dbe0:	0005303a 	rdctl	r2,status
   2dbe4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2dbe8:	e0fffb17 	ldw	r3,-20(fp)
   2dbec:	00bfff84 	movi	r2,-2
   2dbf0:	1884703a 	and	r2,r3,r2
   2dbf4:	1001703a 	wrctl	status,r2
  
  return context;
   2dbf8:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2dbfc:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2dc00:	d0a01c17 	ldw	r2,-32656(gp)
   2dc04:	10c000c4 	addi	r3,r2,3
   2dc08:	00bfff04 	movi	r2,-4
   2dc0c:	1884703a 	and	r2,r3,r2
   2dc10:	d0a01c15 	stw	r2,-32656(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2dc14:	d0e01c17 	ldw	r3,-32656(gp)
   2dc18:	e0bffe17 	ldw	r2,-8(fp)
   2dc1c:	1887883a 	add	r3,r3,r2
   2dc20:	00800134 	movhi	r2,4
   2dc24:	10800004 	addi	r2,r2,0
   2dc28:	10c0072e 	bgeu	r2,r3,2dc48 <sbrk+0x78>
   2dc2c:	e0bffd17 	ldw	r2,-12(fp)
   2dc30:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2dc34:	e0bffa17 	ldw	r2,-24(fp)
   2dc38:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2dc3c:	00bfffc4 	movi	r2,-1
   2dc40:	e0bfff15 	stw	r2,-4(fp)
   2dc44:	00000c06 	br	2dc78 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   2dc48:	d0a01c17 	ldw	r2,-32656(gp)
   2dc4c:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   2dc50:	d0e01c17 	ldw	r3,-32656(gp)
   2dc54:	e0bffe17 	ldw	r2,-8(fp)
   2dc58:	1885883a 	add	r2,r3,r2
   2dc5c:	d0a01c15 	stw	r2,-32656(gp)
   2dc60:	e0bffd17 	ldw	r2,-12(fp)
   2dc64:	e0bff915 	stw	r2,-28(fp)
   2dc68:	e0bff917 	ldw	r2,-28(fp)
   2dc6c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2dc70:	e0bffc17 	ldw	r2,-16(fp)
   2dc74:	e0bfff15 	stw	r2,-4(fp)
   2dc78:	e0bfff17 	ldw	r2,-4(fp)
} 
   2dc7c:	e037883a 	mov	sp,fp
   2dc80:	df000017 	ldw	fp,0(sp)
   2dc84:	dec00104 	addi	sp,sp,4
   2dc88:	f800283a 	ret

0002dc8c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2dc8c:	defff704 	addi	sp,sp,-36
   2dc90:	dfc00815 	stw	ra,32(sp)
   2dc94:	df000715 	stw	fp,28(sp)
   2dc98:	df000704 	addi	fp,sp,28
   2dc9c:	e13ffb15 	stw	r4,-20(fp)
   2dca0:	e17ffc15 	stw	r5,-16(fp)
   2dca4:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dca8:	e0bffb17 	ldw	r2,-20(fp)
   2dcac:	1004803a 	cmplt	r2,r2,zero
   2dcb0:	1000081e 	bne	r2,zero,2dcd4 <write+0x48>
   2dcb4:	e0bffb17 	ldw	r2,-20(fp)
   2dcb8:	10800324 	muli	r2,r2,12
   2dcbc:	1007883a 	mov	r3,r2
   2dcc0:	008000f4 	movhi	r2,3
   2dcc4:	10822704 	addi	r2,r2,2204
   2dcc8:	1887883a 	add	r3,r3,r2
   2dccc:	e0ffff15 	stw	r3,-4(fp)
   2dcd0:	00000106 	br	2dcd8 <write+0x4c>
   2dcd4:	e03fff15 	stw	zero,-4(fp)
   2dcd8:	e0bfff17 	ldw	r2,-4(fp)
   2dcdc:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   2dce0:	e0bffa17 	ldw	r2,-24(fp)
   2dce4:	1005003a 	cmpeq	r2,r2,zero
   2dce8:	1000241e 	bne	r2,zero,2dd7c <write+0xf0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2dcec:	e0bffa17 	ldw	r2,-24(fp)
   2dcf0:	10800217 	ldw	r2,8(r2)
   2dcf4:	108000cc 	andi	r2,r2,3
   2dcf8:	1005003a 	cmpeq	r2,r2,zero
   2dcfc:	10001a1e 	bne	r2,zero,2dd68 <write+0xdc>
   2dd00:	e0bffa17 	ldw	r2,-24(fp)
   2dd04:	10800017 	ldw	r2,0(r2)
   2dd08:	10800617 	ldw	r2,24(r2)
   2dd0c:	1005003a 	cmpeq	r2,r2,zero
   2dd10:	1000151e 	bne	r2,zero,2dd68 <write+0xdc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2dd14:	e0bffa17 	ldw	r2,-24(fp)
   2dd18:	10800017 	ldw	r2,0(r2)
   2dd1c:	10800617 	ldw	r2,24(r2)
   2dd20:	e17ffc17 	ldw	r5,-16(fp)
   2dd24:	e1bffd17 	ldw	r6,-12(fp)
   2dd28:	e13ffa17 	ldw	r4,-24(fp)
   2dd2c:	103ee83a 	callr	r2
   2dd30:	e0bff915 	stw	r2,-28(fp)
   2dd34:	e0bff917 	ldw	r2,-28(fp)
   2dd38:	1004403a 	cmpge	r2,r2,zero
   2dd3c:	1000071e 	bne	r2,zero,2dd5c <write+0xd0>
      {
        ALT_ERRNO = -rval;
   2dd40:	002ddac0 	call	2ddac <alt_get_errno>
   2dd44:	e0fff917 	ldw	r3,-28(fp)
   2dd48:	00c7c83a 	sub	r3,zero,r3
   2dd4c:	10c00015 	stw	r3,0(r2)
        return -1;
   2dd50:	00bfffc4 	movi	r2,-1
   2dd54:	e0bffe15 	stw	r2,-8(fp)
   2dd58:	00000e06 	br	2dd94 <write+0x108>
      }
      return rval;
   2dd5c:	e0bff917 	ldw	r2,-28(fp)
   2dd60:	e0bffe15 	stw	r2,-8(fp)
   2dd64:	00000b06 	br	2dd94 <write+0x108>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2dd68:	002ddac0 	call	2ddac <alt_get_errno>
   2dd6c:	1007883a 	mov	r3,r2
   2dd70:	00800344 	movi	r2,13
   2dd74:	18800015 	stw	r2,0(r3)
   2dd78:	00000406 	br	2dd8c <write+0x100>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2dd7c:	002ddac0 	call	2ddac <alt_get_errno>
   2dd80:	1007883a 	mov	r3,r2
   2dd84:	00801444 	movi	r2,81
   2dd88:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2dd8c:	00bfffc4 	movi	r2,-1
   2dd90:	e0bffe15 	stw	r2,-8(fp)
   2dd94:	e0bffe17 	ldw	r2,-8(fp)
}
   2dd98:	e037883a 	mov	sp,fp
   2dd9c:	dfc00117 	ldw	ra,4(sp)
   2dda0:	df000017 	ldw	fp,0(sp)
   2dda4:	dec00204 	addi	sp,sp,8
   2dda8:	f800283a 	ret

0002ddac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ddac:	defffd04 	addi	sp,sp,-12
   2ddb0:	dfc00215 	stw	ra,8(sp)
   2ddb4:	df000115 	stw	fp,4(sp)
   2ddb8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2ddbc:	008000f4 	movhi	r2,3
   2ddc0:	1086ba04 	addi	r2,r2,6888
   2ddc4:	10800017 	ldw	r2,0(r2)
   2ddc8:	1005003a 	cmpeq	r2,r2,zero
   2ddcc:	1000061e 	bne	r2,zero,2dde8 <alt_get_errno+0x3c>
   2ddd0:	008000f4 	movhi	r2,3
   2ddd4:	1086ba04 	addi	r2,r2,6888
   2ddd8:	10800017 	ldw	r2,0(r2)
   2dddc:	103ee83a 	callr	r2
   2dde0:	e0bfff15 	stw	r2,-4(fp)
   2dde4:	00000306 	br	2ddf4 <alt_get_errno+0x48>
   2dde8:	008000f4 	movhi	r2,3
   2ddec:	108d6d04 	addi	r2,r2,13748
   2ddf0:	e0bfff15 	stw	r2,-4(fp)
   2ddf4:	e0bfff17 	ldw	r2,-4(fp)
}
   2ddf8:	e037883a 	mov	sp,fp
   2ddfc:	dfc00117 	ldw	ra,4(sp)
   2de00:	df000017 	ldw	fp,0(sp)
   2de04:	dec00204 	addi	sp,sp,8
   2de08:	f800283a 	ret

0002de0c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2de0c:	defffd04 	addi	sp,sp,-12
   2de10:	dfc00215 	stw	ra,8(sp)
   2de14:	df000115 	stw	fp,4(sp)
   2de18:	df000104 	addi	fp,sp,4
   2de1c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS, NIOS);
   2de20:	002f5540 	call	2f554 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2de24:	00800044 	movi	r2,1
   2de28:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2de2c:	e037883a 	mov	sp,fp
   2de30:	dfc00117 	ldw	ra,4(sp)
   2de34:	df000017 	ldw	fp,0(sp)
   2de38:	dec00204 	addi	sp,sp,8
   2de3c:	f800283a 	ret

0002de40 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2de40:	defffe04 	addi	sp,sp,-8
   2de44:	dfc00115 	stw	ra,4(sp)
   2de48:	df000015 	stw	fp,0(sp)
   2de4c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2de50:	010000f4 	movhi	r4,3
   2de54:	21029104 	addi	r4,r4,2628
   2de58:	000b883a 	mov	r5,zero
   2de5c:	01800404 	movi	r6,16
   2de60:	002e0040 	call	2e004 <altera_avalon_jtag_uart_init>
   2de64:	010000f4 	movhi	r4,3
   2de68:	21028704 	addi	r4,r4,2588
   2de6c:	002de840 	call	2de84 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
}
   2de70:	e037883a 	mov	sp,fp
   2de74:	dfc00117 	ldw	ra,4(sp)
   2de78:	df000017 	ldw	fp,0(sp)
   2de7c:	dec00204 	addi	sp,sp,8
   2de80:	f800283a 	ret

0002de84 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2de84:	defffd04 	addi	sp,sp,-12
   2de88:	dfc00215 	stw	ra,8(sp)
   2de8c:	df000115 	stw	fp,4(sp)
   2de90:	df000104 	addi	fp,sp,4
   2de94:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2de98:	e13fff17 	ldw	r4,-4(fp)
   2de9c:	014000f4 	movhi	r5,3
   2dea0:	2946b704 	addi	r5,r5,6876
   2dea4:	002ead80 	call	2ead8 <alt_dev_llist_insert>
}
   2dea8:	e037883a 	mov	sp,fp
   2deac:	dfc00117 	ldw	ra,4(sp)
   2deb0:	df000017 	ldw	fp,0(sp)
   2deb4:	dec00204 	addi	sp,sp,8
   2deb8:	f800283a 	ret

0002debc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2debc:	defffa04 	addi	sp,sp,-24
   2dec0:	dfc00515 	stw	ra,20(sp)
   2dec4:	df000415 	stw	fp,16(sp)
   2dec8:	df000404 	addi	fp,sp,16
   2decc:	e13ffd15 	stw	r4,-12(fp)
   2ded0:	e17ffe15 	stw	r5,-8(fp)
   2ded4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2ded8:	e0bffd17 	ldw	r2,-12(fp)
   2dedc:	10800017 	ldw	r2,0(r2)
   2dee0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2dee4:	e0bffc17 	ldw	r2,-16(fp)
   2dee8:	11000a04 	addi	r4,r2,40
   2deec:	e0bffd17 	ldw	r2,-12(fp)
   2def0:	11c00217 	ldw	r7,8(r2)
   2def4:	e17ffe17 	ldw	r5,-8(fp)
   2def8:	e1bfff17 	ldw	r6,-4(fp)
   2defc:	002e5040 	call	2e504 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2df00:	e037883a 	mov	sp,fp
   2df04:	dfc00117 	ldw	ra,4(sp)
   2df08:	df000017 	ldw	fp,0(sp)
   2df0c:	dec00204 	addi	sp,sp,8
   2df10:	f800283a 	ret

0002df14 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2df14:	defffa04 	addi	sp,sp,-24
   2df18:	dfc00515 	stw	ra,20(sp)
   2df1c:	df000415 	stw	fp,16(sp)
   2df20:	df000404 	addi	fp,sp,16
   2df24:	e13ffd15 	stw	r4,-12(fp)
   2df28:	e17ffe15 	stw	r5,-8(fp)
   2df2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2df30:	e0bffd17 	ldw	r2,-12(fp)
   2df34:	10800017 	ldw	r2,0(r2)
   2df38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2df3c:	e0bffc17 	ldw	r2,-16(fp)
   2df40:	11000a04 	addi	r4,r2,40
   2df44:	e0bffd17 	ldw	r2,-12(fp)
   2df48:	11c00217 	ldw	r7,8(r2)
   2df4c:	e17ffe17 	ldw	r5,-8(fp)
   2df50:	e1bfff17 	ldw	r6,-4(fp)
   2df54:	002e7280 	call	2e728 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2df58:	e037883a 	mov	sp,fp
   2df5c:	dfc00117 	ldw	ra,4(sp)
   2df60:	df000017 	ldw	fp,0(sp)
   2df64:	dec00204 	addi	sp,sp,8
   2df68:	f800283a 	ret

0002df6c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2df6c:	defffc04 	addi	sp,sp,-16
   2df70:	dfc00315 	stw	ra,12(sp)
   2df74:	df000215 	stw	fp,8(sp)
   2df78:	df000204 	addi	fp,sp,8
   2df7c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2df80:	e0bfff17 	ldw	r2,-4(fp)
   2df84:	10800017 	ldw	r2,0(r2)
   2df88:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2df8c:	e0bffe17 	ldw	r2,-8(fp)
   2df90:	11000a04 	addi	r4,r2,40
   2df94:	e0bfff17 	ldw	r2,-4(fp)
   2df98:	11400217 	ldw	r5,8(r2)
   2df9c:	002e39c0 	call	2e39c <altera_avalon_jtag_uart_close>
}
   2dfa0:	e037883a 	mov	sp,fp
   2dfa4:	dfc00117 	ldw	ra,4(sp)
   2dfa8:	df000017 	ldw	fp,0(sp)
   2dfac:	dec00204 	addi	sp,sp,8
   2dfb0:	f800283a 	ret

0002dfb4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2dfb4:	defffa04 	addi	sp,sp,-24
   2dfb8:	dfc00515 	stw	ra,20(sp)
   2dfbc:	df000415 	stw	fp,16(sp)
   2dfc0:	df000404 	addi	fp,sp,16
   2dfc4:	e13ffd15 	stw	r4,-12(fp)
   2dfc8:	e17ffe15 	stw	r5,-8(fp)
   2dfcc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2dfd0:	e0bffd17 	ldw	r2,-12(fp)
   2dfd4:	10800017 	ldw	r2,0(r2)
   2dfd8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2dfdc:	e0bffc17 	ldw	r2,-16(fp)
   2dfe0:	11000a04 	addi	r4,r2,40
   2dfe4:	e17ffe17 	ldw	r5,-8(fp)
   2dfe8:	e1bfff17 	ldw	r6,-4(fp)
   2dfec:	002e4100 	call	2e410 <altera_avalon_jtag_uart_ioctl>
}
   2dff0:	e037883a 	mov	sp,fp
   2dff4:	dfc00117 	ldw	ra,4(sp)
   2dff8:	df000017 	ldw	fp,0(sp)
   2dffc:	dec00204 	addi	sp,sp,8
   2e000:	f800283a 	ret

0002e004 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e004:	defffa04 	addi	sp,sp,-24
   2e008:	dfc00515 	stw	ra,20(sp)
   2e00c:	df000415 	stw	fp,16(sp)
   2e010:	df000404 	addi	fp,sp,16
   2e014:	e13ffd15 	stw	r4,-12(fp)
   2e018:	e17ffe15 	stw	r5,-8(fp)
   2e01c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e020:	e0fffd17 	ldw	r3,-12(fp)
   2e024:	00800044 	movi	r2,1
   2e028:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e02c:	e0bffd17 	ldw	r2,-12(fp)
   2e030:	10800017 	ldw	r2,0(r2)
   2e034:	11000104 	addi	r4,r2,4
   2e038:	e0bffd17 	ldw	r2,-12(fp)
   2e03c:	10800817 	ldw	r2,32(r2)
   2e040:	1007883a 	mov	r3,r2
   2e044:	2005883a 	mov	r2,r4
   2e048:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2e04c:	e13ffe17 	ldw	r4,-8(fp)
   2e050:	e17fff17 	ldw	r5,-4(fp)
   2e054:	d8000015 	stw	zero,0(sp)
   2e058:	018000f4 	movhi	r6,3
   2e05c:	31b83104 	addi	r6,r6,-7996
   2e060:	e1fffd17 	ldw	r7,-12(fp)
   2e064:	002ece40 	call	2ece4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e068:	e0bffd17 	ldw	r2,-12(fp)
   2e06c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e070:	e0bffd17 	ldw	r2,-12(fp)
   2e074:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e078:	008000f4 	movhi	r2,3
   2e07c:	108d7204 	addi	r2,r2,13768
   2e080:	10800017 	ldw	r2,0(r2)
   2e084:	100b883a 	mov	r5,r2
   2e088:	018000f4 	movhi	r6,3
   2e08c:	31b8bb04 	addi	r6,r6,-7444
   2e090:	e1fffd17 	ldw	r7,-12(fp)
   2e094:	002e9680 	call	2e968 <alt_alarm_start>
   2e098:	1004403a 	cmpge	r2,r2,zero
   2e09c:	1000041e 	bne	r2,zero,2e0b0 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e0a0:	e0fffd17 	ldw	r3,-12(fp)
   2e0a4:	00a00034 	movhi	r2,32768
   2e0a8:	10bfffc4 	addi	r2,r2,-1
   2e0ac:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e0b0:	e037883a 	mov	sp,fp
   2e0b4:	dfc00117 	ldw	ra,4(sp)
   2e0b8:	df000017 	ldw	fp,0(sp)
   2e0bc:	dec00204 	addi	sp,sp,8
   2e0c0:	f800283a 	ret

0002e0c4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e0c4:	defff804 	addi	sp,sp,-32
   2e0c8:	df000715 	stw	fp,28(sp)
   2e0cc:	df000704 	addi	fp,sp,28
   2e0d0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e0d4:	e0bfff17 	ldw	r2,-4(fp)
   2e0d8:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   2e0dc:	e0bffe17 	ldw	r2,-8(fp)
   2e0e0:	10800017 	ldw	r2,0(r2)
   2e0e4:	e0bffd15 	stw	r2,-12(fp)
   2e0e8:	00000006 	br	2e0ec <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e0ec:	e0bffd17 	ldw	r2,-12(fp)
   2e0f0:	10800104 	addi	r2,r2,4
   2e0f4:	10800037 	ldwio	r2,0(r2)
   2e0f8:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e0fc:	e0bffc17 	ldw	r2,-16(fp)
   2e100:	1080c00c 	andi	r2,r2,768
   2e104:	1005003a 	cmpeq	r2,r2,zero
   2e108:	1000741e 	bne	r2,zero,2e2dc <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e10c:	e0bffc17 	ldw	r2,-16(fp)
   2e110:	1080400c 	andi	r2,r2,256
   2e114:	1005003a 	cmpeq	r2,r2,zero
   2e118:	1000351e 	bne	r2,zero,2e1f0 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e11c:	00800074 	movhi	r2,1
   2e120:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e124:	e0bffe17 	ldw	r2,-8(fp)
   2e128:	10800a17 	ldw	r2,40(r2)
   2e12c:	10800044 	addi	r2,r2,1
   2e130:	1081ffcc 	andi	r2,r2,2047
   2e134:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   2e138:	e0bffe17 	ldw	r2,-8(fp)
   2e13c:	10c00b17 	ldw	r3,44(r2)
   2e140:	e0bffa17 	ldw	r2,-24(fp)
   2e144:	18801626 	beq	r3,r2,2e1a0 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e148:	e0bffd17 	ldw	r2,-12(fp)
   2e14c:	10800037 	ldwio	r2,0(r2)
   2e150:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e154:	e0bffb17 	ldw	r2,-20(fp)
   2e158:	10a0000c 	andi	r2,r2,32768
   2e15c:	1005003a 	cmpeq	r2,r2,zero
   2e160:	10000f1e 	bne	r2,zero,2e1a0 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e164:	e0bffe17 	ldw	r2,-8(fp)
   2e168:	10c00a17 	ldw	r3,40(r2)
   2e16c:	e0bffb17 	ldw	r2,-20(fp)
   2e170:	1009883a 	mov	r4,r2
   2e174:	e0bffe17 	ldw	r2,-8(fp)
   2e178:	1885883a 	add	r2,r3,r2
   2e17c:	10800e04 	addi	r2,r2,56
   2e180:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e184:	e0bffe17 	ldw	r2,-8(fp)
   2e188:	10800a17 	ldw	r2,40(r2)
   2e18c:	10800044 	addi	r2,r2,1
   2e190:	10c1ffcc 	andi	r3,r2,2047
   2e194:	e0bffe17 	ldw	r2,-8(fp)
   2e198:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2e19c:	003fe106 	br	2e124 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e1a0:	e0bffb17 	ldw	r2,-20(fp)
   2e1a4:	10bfffec 	andhi	r2,r2,65535
   2e1a8:	1005003a 	cmpeq	r2,r2,zero
   2e1ac:	1000101e 	bne	r2,zero,2e1f0 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e1b0:	e0bffe17 	ldw	r2,-8(fp)
   2e1b4:	10c00817 	ldw	r3,32(r2)
   2e1b8:	00bfff84 	movi	r2,-2
   2e1bc:	1886703a 	and	r3,r3,r2
   2e1c0:	e0bffe17 	ldw	r2,-8(fp)
   2e1c4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e1c8:	e0bffd17 	ldw	r2,-12(fp)
   2e1cc:	11000104 	addi	r4,r2,4
   2e1d0:	e0bffe17 	ldw	r2,-8(fp)
   2e1d4:	10800817 	ldw	r2,32(r2)
   2e1d8:	1007883a 	mov	r3,r2
   2e1dc:	2005883a 	mov	r2,r4
   2e1e0:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e1e4:	e0bffd17 	ldw	r2,-12(fp)
   2e1e8:	10800104 	addi	r2,r2,4
   2e1ec:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e1f0:	e0bffc17 	ldw	r2,-16(fp)
   2e1f4:	1080800c 	andi	r2,r2,512
   2e1f8:	1005003a 	cmpeq	r2,r2,zero
   2e1fc:	103fbb1e 	bne	r2,zero,2e0ec <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e200:	e0bffc17 	ldw	r2,-16(fp)
   2e204:	10bfffec 	andhi	r2,r2,65535
   2e208:	1004d43a 	srli	r2,r2,16
   2e20c:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e210:	00001506 	br	2e268 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e214:	e13ffd17 	ldw	r4,-12(fp)
   2e218:	e0bffe17 	ldw	r2,-8(fp)
   2e21c:	10c00d17 	ldw	r3,52(r2)
   2e220:	e0bffe17 	ldw	r2,-8(fp)
   2e224:	1885883a 	add	r2,r3,r2
   2e228:	10820e04 	addi	r2,r2,2104
   2e22c:	10800003 	ldbu	r2,0(r2)
   2e230:	10c03fcc 	andi	r3,r2,255
   2e234:	18c0201c 	xori	r3,r3,128
   2e238:	18ffe004 	addi	r3,r3,-128
   2e23c:	2005883a 	mov	r2,r4
   2e240:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e244:	e0bffe17 	ldw	r2,-8(fp)
   2e248:	10800d17 	ldw	r2,52(r2)
   2e24c:	10800044 	addi	r2,r2,1
   2e250:	10c1ffcc 	andi	r3,r2,2047
   2e254:	e0bffe17 	ldw	r2,-8(fp)
   2e258:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2e25c:	e0bff917 	ldw	r2,-28(fp)
   2e260:	10bfffc4 	addi	r2,r2,-1
   2e264:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e268:	e0bff917 	ldw	r2,-28(fp)
   2e26c:	1005003a 	cmpeq	r2,r2,zero
   2e270:	1000051e 	bne	r2,zero,2e288 <altera_avalon_jtag_uart_irq+0x1c4>
   2e274:	e0bffe17 	ldw	r2,-8(fp)
   2e278:	10c00d17 	ldw	r3,52(r2)
   2e27c:	e0bffe17 	ldw	r2,-8(fp)
   2e280:	10800c17 	ldw	r2,48(r2)
   2e284:	18bfe31e 	bne	r3,r2,2e214 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2e288:	e0bff917 	ldw	r2,-28(fp)
   2e28c:	1005003a 	cmpeq	r2,r2,zero
   2e290:	103f961e 	bne	r2,zero,2e0ec <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e294:	e0bffe17 	ldw	r2,-8(fp)
   2e298:	10c00817 	ldw	r3,32(r2)
   2e29c:	00bfff44 	movi	r2,-3
   2e2a0:	1886703a 	and	r3,r3,r2
   2e2a4:	e0bffe17 	ldw	r2,-8(fp)
   2e2a8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e2ac:	e0bffe17 	ldw	r2,-8(fp)
   2e2b0:	10800017 	ldw	r2,0(r2)
   2e2b4:	11000104 	addi	r4,r2,4
   2e2b8:	e0bffe17 	ldw	r2,-8(fp)
   2e2bc:	10800817 	ldw	r2,32(r2)
   2e2c0:	1007883a 	mov	r3,r2
   2e2c4:	2005883a 	mov	r2,r4
   2e2c8:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e2cc:	e0bffd17 	ldw	r2,-12(fp)
   2e2d0:	10800104 	addi	r2,r2,4
   2e2d4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2e2d8:	003f8406 	br	2e0ec <altera_avalon_jtag_uart_irq+0x28>
}
   2e2dc:	e037883a 	mov	sp,fp
   2e2e0:	df000017 	ldw	fp,0(sp)
   2e2e4:	dec00104 	addi	sp,sp,4
   2e2e8:	f800283a 	ret

0002e2ec <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e2ec:	defffc04 	addi	sp,sp,-16
   2e2f0:	df000315 	stw	fp,12(sp)
   2e2f4:	df000304 	addi	fp,sp,12
   2e2f8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e2fc:	e0bfff17 	ldw	r2,-4(fp)
   2e300:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e304:	e0bffe17 	ldw	r2,-8(fp)
   2e308:	10800017 	ldw	r2,0(r2)
   2e30c:	10800104 	addi	r2,r2,4
   2e310:	10800037 	ldwio	r2,0(r2)
   2e314:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e318:	e0bffd17 	ldw	r2,-12(fp)
   2e31c:	1081000c 	andi	r2,r2,1024
   2e320:	1005003a 	cmpeq	r2,r2,zero
   2e324:	10000c1e 	bne	r2,zero,2e358 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e328:	e0bffe17 	ldw	r2,-8(fp)
   2e32c:	10800017 	ldw	r2,0(r2)
   2e330:	11000104 	addi	r4,r2,4
   2e334:	e0bffe17 	ldw	r2,-8(fp)
   2e338:	10800817 	ldw	r2,32(r2)
   2e33c:	10810014 	ori	r2,r2,1024
   2e340:	1007883a 	mov	r3,r2
   2e344:	2005883a 	mov	r2,r4
   2e348:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   2e34c:	e0bffe17 	ldw	r2,-8(fp)
   2e350:	10000915 	stw	zero,36(r2)
   2e354:	00000a06 	br	2e380 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2e358:	e0bffe17 	ldw	r2,-8(fp)
   2e35c:	10c00917 	ldw	r3,36(r2)
   2e360:	00a00034 	movhi	r2,32768
   2e364:	10bfff04 	addi	r2,r2,-4
   2e368:	10c00536 	bltu	r2,r3,2e380 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   2e36c:	e0bffe17 	ldw	r2,-8(fp)
   2e370:	10800917 	ldw	r2,36(r2)
   2e374:	10c00044 	addi	r3,r2,1
   2e378:	e0bffe17 	ldw	r2,-8(fp)
   2e37c:	10c00915 	stw	r3,36(r2)
   2e380:	008000f4 	movhi	r2,3
   2e384:	108d7204 	addi	r2,r2,13768
   2e388:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2e38c:	e037883a 	mov	sp,fp
   2e390:	df000017 	ldw	fp,0(sp)
   2e394:	dec00104 	addi	sp,sp,4
   2e398:	f800283a 	ret

0002e39c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2e39c:	defffc04 	addi	sp,sp,-16
   2e3a0:	df000315 	stw	fp,12(sp)
   2e3a4:	df000304 	addi	fp,sp,12
   2e3a8:	e13ffd15 	stw	r4,-12(fp)
   2e3ac:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e3b0:	00000706 	br	2e3d0 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   2e3b4:	e0bffe17 	ldw	r2,-8(fp)
   2e3b8:	1090000c 	andi	r2,r2,16384
   2e3bc:	1005003a 	cmpeq	r2,r2,zero
   2e3c0:	1000031e 	bne	r2,zero,2e3d0 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   2e3c4:	00bffd44 	movi	r2,-11
   2e3c8:	e0bfff15 	stw	r2,-4(fp)
   2e3cc:	00000b06 	br	2e3fc <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e3d0:	e0bffd17 	ldw	r2,-12(fp)
   2e3d4:	10c00d17 	ldw	r3,52(r2)
   2e3d8:	e0bffd17 	ldw	r2,-12(fp)
   2e3dc:	10800c17 	ldw	r2,48(r2)
   2e3e0:	18800526 	beq	r3,r2,2e3f8 <altera_avalon_jtag_uart_close+0x5c>
   2e3e4:	e0bffd17 	ldw	r2,-12(fp)
   2e3e8:	10c00917 	ldw	r3,36(r2)
   2e3ec:	e0bffd17 	ldw	r2,-12(fp)
   2e3f0:	10800117 	ldw	r2,4(r2)
   2e3f4:	18bfef36 	bltu	r3,r2,2e3b4 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2e3f8:	e03fff15 	stw	zero,-4(fp)
   2e3fc:	e0bfff17 	ldw	r2,-4(fp)
}
   2e400:	e037883a 	mov	sp,fp
   2e404:	df000017 	ldw	fp,0(sp)
   2e408:	dec00104 	addi	sp,sp,4
   2e40c:	f800283a 	ret

0002e410 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2e410:	defff804 	addi	sp,sp,-32
   2e414:	df000715 	stw	fp,28(sp)
   2e418:	df000704 	addi	fp,sp,28
   2e41c:	e13ffb15 	stw	r4,-20(fp)
   2e420:	e17ffc15 	stw	r5,-16(fp)
   2e424:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   2e428:	00bff9c4 	movi	r2,-25
   2e42c:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   2e430:	e0bffc17 	ldw	r2,-16(fp)
   2e434:	e0bfff15 	stw	r2,-4(fp)
   2e438:	e0ffff17 	ldw	r3,-4(fp)
   2e43c:	189a8060 	cmpeqi	r2,r3,27137
   2e440:	1000041e 	bne	r2,zero,2e454 <altera_avalon_jtag_uart_ioctl+0x44>
   2e444:	e0ffff17 	ldw	r3,-4(fp)
   2e448:	189a80a0 	cmpeqi	r2,r3,27138
   2e44c:	10001b1e 	bne	r2,zero,2e4bc <altera_avalon_jtag_uart_ioctl+0xac>
   2e450:	00002706 	br	2e4f0 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2e454:	e0bffb17 	ldw	r2,-20(fp)
   2e458:	10c00117 	ldw	r3,4(r2)
   2e45c:	00a00034 	movhi	r2,32768
   2e460:	10bfffc4 	addi	r2,r2,-1
   2e464:	18802226 	beq	r3,r2,2e4f0 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   2e468:	e0bffd17 	ldw	r2,-12(fp)
   2e46c:	10800017 	ldw	r2,0(r2)
   2e470:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2e474:	e0bff917 	ldw	r2,-28(fp)
   2e478:	10800090 	cmplti	r2,r2,2
   2e47c:	1000071e 	bne	r2,zero,2e49c <altera_avalon_jtag_uart_ioctl+0x8c>
   2e480:	e0fff917 	ldw	r3,-28(fp)
   2e484:	00a00034 	movhi	r2,32768
   2e488:	10bfffc4 	addi	r2,r2,-1
   2e48c:	18800326 	beq	r3,r2,2e49c <altera_avalon_jtag_uart_ioctl+0x8c>
   2e490:	e0bff917 	ldw	r2,-28(fp)
   2e494:	e0bffe15 	stw	r2,-8(fp)
   2e498:	00000306 	br	2e4a8 <altera_avalon_jtag_uart_ioctl+0x98>
   2e49c:	00e00034 	movhi	r3,32768
   2e4a0:	18ffff84 	addi	r3,r3,-2
   2e4a4:	e0fffe15 	stw	r3,-8(fp)
   2e4a8:	e0bffb17 	ldw	r2,-20(fp)
   2e4ac:	e0fffe17 	ldw	r3,-8(fp)
   2e4b0:	10c00115 	stw	r3,4(r2)
      rc = 0;
   2e4b4:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   2e4b8:	00000d06 	br	2e4f0 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2e4bc:	e0bffb17 	ldw	r2,-20(fp)
   2e4c0:	10c00117 	ldw	r3,4(r2)
   2e4c4:	00a00034 	movhi	r2,32768
   2e4c8:	10bfffc4 	addi	r2,r2,-1
   2e4cc:	18800826 	beq	r3,r2,2e4f0 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2e4d0:	e13ffd17 	ldw	r4,-12(fp)
   2e4d4:	e0bffb17 	ldw	r2,-20(fp)
   2e4d8:	10c00917 	ldw	r3,36(r2)
   2e4dc:	e0bffb17 	ldw	r2,-20(fp)
   2e4e0:	10800117 	ldw	r2,4(r2)
   2e4e4:	1885803a 	cmpltu	r2,r3,r2
   2e4e8:	20800015 	stw	r2,0(r4)
      rc = 0;
   2e4ec:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   2e4f0:	e0bffa17 	ldw	r2,-24(fp)
}
   2e4f4:	e037883a 	mov	sp,fp
   2e4f8:	df000017 	ldw	fp,0(sp)
   2e4fc:	dec00104 	addi	sp,sp,4
   2e500:	f800283a 	ret

0002e504 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2e504:	defff204 	addi	sp,sp,-56
   2e508:	dfc00d15 	stw	ra,52(sp)
   2e50c:	df000c15 	stw	fp,48(sp)
   2e510:	df000c04 	addi	fp,sp,48
   2e514:	e13ffb15 	stw	r4,-20(fp)
   2e518:	e17ffc15 	stw	r5,-16(fp)
   2e51c:	e1bffd15 	stw	r6,-12(fp)
   2e520:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   2e524:	e0bffc17 	ldw	r2,-16(fp)
   2e528:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e52c:	00004806 	br	2e650 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2e530:	e0bffb17 	ldw	r2,-20(fp)
   2e534:	10800a17 	ldw	r2,40(r2)
   2e538:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2e53c:	e0bffb17 	ldw	r2,-20(fp)
   2e540:	10800b17 	ldw	r2,44(r2)
   2e544:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   2e548:	e0fff717 	ldw	r3,-36(fp)
   2e54c:	e0bff617 	ldw	r2,-40(fp)
   2e550:	18800536 	bltu	r3,r2,2e568 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2e554:	e0bff717 	ldw	r2,-36(fp)
   2e558:	e0fff617 	ldw	r3,-40(fp)
   2e55c:	10c5c83a 	sub	r2,r2,r3
   2e560:	e0bff815 	stw	r2,-32(fp)
   2e564:	00000406 	br	2e578 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2e568:	00820004 	movi	r2,2048
   2e56c:	e0fff617 	ldw	r3,-40(fp)
   2e570:	10c5c83a 	sub	r2,r2,r3
   2e574:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   2e578:	e0bff817 	ldw	r2,-32(fp)
   2e57c:	1005003a 	cmpeq	r2,r2,zero
   2e580:	10001f1e 	bne	r2,zero,2e600 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   2e584:	e0fffd17 	ldw	r3,-12(fp)
   2e588:	e0bff817 	ldw	r2,-32(fp)
   2e58c:	1880022e 	bgeu	r3,r2,2e598 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   2e590:	e0bffd17 	ldw	r2,-12(fp)
   2e594:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2e598:	e0bffb17 	ldw	r2,-20(fp)
   2e59c:	10c00e04 	addi	r3,r2,56
   2e5a0:	e0bff617 	ldw	r2,-40(fp)
   2e5a4:	1887883a 	add	r3,r3,r2
   2e5a8:	e0bffa17 	ldw	r2,-24(fp)
   2e5ac:	1009883a 	mov	r4,r2
   2e5b0:	180b883a 	mov	r5,r3
   2e5b4:	e1bff817 	ldw	r6,-32(fp)
   2e5b8:	002a5740 	call	2a574 <memcpy>
      ptr   += n;
   2e5bc:	e0fff817 	ldw	r3,-32(fp)
   2e5c0:	e0bffa17 	ldw	r2,-24(fp)
   2e5c4:	10c5883a 	add	r2,r2,r3
   2e5c8:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   2e5cc:	e0fffd17 	ldw	r3,-12(fp)
   2e5d0:	e0bff817 	ldw	r2,-32(fp)
   2e5d4:	1885c83a 	sub	r2,r3,r2
   2e5d8:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e5dc:	e0fff617 	ldw	r3,-40(fp)
   2e5e0:	e0bff817 	ldw	r2,-32(fp)
   2e5e4:	1885883a 	add	r2,r3,r2
   2e5e8:	10c1ffcc 	andi	r3,r2,2047
   2e5ec:	e0bffb17 	ldw	r2,-20(fp)
   2e5f0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2e5f4:	e0bffd17 	ldw	r2,-12(fp)
   2e5f8:	10800048 	cmpgei	r2,r2,1
   2e5fc:	103fcc1e 	bne	r2,zero,2e530 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   2e600:	e0fffa17 	ldw	r3,-24(fp)
   2e604:	e0bffc17 	ldw	r2,-16(fp)
   2e608:	1880141e 	bne	r3,r2,2e65c <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2e60c:	e0bffe17 	ldw	r2,-8(fp)
   2e610:	1090000c 	andi	r2,r2,16384
   2e614:	1004c03a 	cmpne	r2,r2,zero
   2e618:	1000101e 	bne	r2,zero,2e65c <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2e61c:	e0bffb17 	ldw	r2,-20(fp)
   2e620:	10c00a17 	ldw	r3,40(r2)
   2e624:	e0bff717 	ldw	r2,-36(fp)
   2e628:	1880051e 	bne	r3,r2,2e640 <altera_avalon_jtag_uart_read+0x13c>
   2e62c:	e0bffb17 	ldw	r2,-20(fp)
   2e630:	10c00917 	ldw	r3,36(r2)
   2e634:	e0bffb17 	ldw	r2,-20(fp)
   2e638:	10800117 	ldw	r2,4(r2)
   2e63c:	18bff736 	bltu	r3,r2,2e61c <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2e640:	e0bffb17 	ldw	r2,-20(fp)
   2e644:	10c00a17 	ldw	r3,40(r2)
   2e648:	e0bff717 	ldw	r2,-36(fp)
   2e64c:	18800326 	beq	r3,r2,2e65c <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e650:	e0bffd17 	ldw	r2,-12(fp)
   2e654:	10800048 	cmpgei	r2,r2,1
   2e658:	103fb51e 	bne	r2,zero,2e530 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2e65c:	e0fffa17 	ldw	r3,-24(fp)
   2e660:	e0bffc17 	ldw	r2,-16(fp)
   2e664:	18801926 	beq	r3,r2,2e6cc <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e668:	0005303a 	rdctl	r2,status
   2e66c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e670:	e0fff517 	ldw	r3,-44(fp)
   2e674:	00bfff84 	movi	r2,-2
   2e678:	1884703a 	and	r2,r3,r2
   2e67c:	1001703a 	wrctl	status,r2
  
  return context;
   2e680:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2e684:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e688:	e0bffb17 	ldw	r2,-20(fp)
   2e68c:	10800817 	ldw	r2,32(r2)
   2e690:	10c00054 	ori	r3,r2,1
   2e694:	e0bffb17 	ldw	r2,-20(fp)
   2e698:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e69c:	e0bffb17 	ldw	r2,-20(fp)
   2e6a0:	10800017 	ldw	r2,0(r2)
   2e6a4:	11000104 	addi	r4,r2,4
   2e6a8:	e0bffb17 	ldw	r2,-20(fp)
   2e6ac:	10800817 	ldw	r2,32(r2)
   2e6b0:	1007883a 	mov	r3,r2
   2e6b4:	2005883a 	mov	r2,r4
   2e6b8:	10c00035 	stwio	r3,0(r2)
   2e6bc:	e0bff917 	ldw	r2,-28(fp)
   2e6c0:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e6c4:	e0bff417 	ldw	r2,-48(fp)
   2e6c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2e6cc:	e0fffa17 	ldw	r3,-24(fp)
   2e6d0:	e0bffc17 	ldw	r2,-16(fp)
   2e6d4:	18800526 	beq	r3,r2,2e6ec <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   2e6d8:	e0fffa17 	ldw	r3,-24(fp)
   2e6dc:	e0bffc17 	ldw	r2,-16(fp)
   2e6e0:	1887c83a 	sub	r3,r3,r2
   2e6e4:	e0ffff15 	stw	r3,-4(fp)
   2e6e8:	00000906 	br	2e710 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   2e6ec:	e0bffe17 	ldw	r2,-8(fp)
   2e6f0:	1090000c 	andi	r2,r2,16384
   2e6f4:	1005003a 	cmpeq	r2,r2,zero
   2e6f8:	1000031e 	bne	r2,zero,2e708 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2e6fc:	00bffd44 	movi	r2,-11
   2e700:	e0bfff15 	stw	r2,-4(fp)
   2e704:	00000206 	br	2e710 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   2e708:	00bffec4 	movi	r2,-5
   2e70c:	e0bfff15 	stw	r2,-4(fp)
   2e710:	e0bfff17 	ldw	r2,-4(fp)
}
   2e714:	e037883a 	mov	sp,fp
   2e718:	dfc00117 	ldw	ra,4(sp)
   2e71c:	df000017 	ldw	fp,0(sp)
   2e720:	dec00204 	addi	sp,sp,8
   2e724:	f800283a 	ret

0002e728 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2e728:	defff204 	addi	sp,sp,-56
   2e72c:	dfc00d15 	stw	ra,52(sp)
   2e730:	df000c15 	stw	fp,48(sp)
   2e734:	df000c04 	addi	fp,sp,48
   2e738:	e13ffb15 	stw	r4,-20(fp)
   2e73c:	e17ffc15 	stw	r5,-16(fp)
   2e740:	e1bffd15 	stw	r6,-12(fp)
   2e744:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2e748:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2e74c:	e0bffc17 	ldw	r2,-16(fp)
   2e750:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e754:	00003a06 	br	2e840 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2e758:	e0bffb17 	ldw	r2,-20(fp)
   2e75c:	10800c17 	ldw	r2,48(r2)
   2e760:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   2e764:	e0bffb17 	ldw	r2,-20(fp)
   2e768:	10800d17 	ldw	r2,52(r2)
   2e76c:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   2e770:	e0fffa17 	ldw	r3,-24(fp)
   2e774:	e0bff917 	ldw	r2,-28(fp)
   2e778:	1880062e 	bgeu	r3,r2,2e794 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2e77c:	e0fff917 	ldw	r3,-28(fp)
   2e780:	e0bffa17 	ldw	r2,-24(fp)
   2e784:	1885c83a 	sub	r2,r3,r2
   2e788:	10bfffc4 	addi	r2,r2,-1
   2e78c:	e0bff815 	stw	r2,-32(fp)
   2e790:	00000c06 	br	2e7c4 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   2e794:	e0bff917 	ldw	r2,-28(fp)
   2e798:	1005003a 	cmpeq	r2,r2,zero
   2e79c:	1000051e 	bne	r2,zero,2e7b4 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2e7a0:	00820004 	movi	r2,2048
   2e7a4:	e0fffa17 	ldw	r3,-24(fp)
   2e7a8:	10c5c83a 	sub	r2,r2,r3
   2e7ac:	e0bff815 	stw	r2,-32(fp)
   2e7b0:	00000406 	br	2e7c4 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2e7b4:	0081ffc4 	movi	r2,2047
   2e7b8:	e0fffa17 	ldw	r3,-24(fp)
   2e7bc:	10c5c83a 	sub	r2,r2,r3
   2e7c0:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   2e7c4:	e0bff817 	ldw	r2,-32(fp)
   2e7c8:	1005003a 	cmpeq	r2,r2,zero
   2e7cc:	10001f1e 	bne	r2,zero,2e84c <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   2e7d0:	e0fffd17 	ldw	r3,-12(fp)
   2e7d4:	e0bff817 	ldw	r2,-32(fp)
   2e7d8:	1880022e 	bgeu	r3,r2,2e7e4 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   2e7dc:	e0bffd17 	ldw	r2,-12(fp)
   2e7e0:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2e7e4:	e0bffb17 	ldw	r2,-20(fp)
   2e7e8:	10c20e04 	addi	r3,r2,2104
   2e7ec:	e0bffa17 	ldw	r2,-24(fp)
   2e7f0:	1885883a 	add	r2,r3,r2
   2e7f4:	e0fffc17 	ldw	r3,-16(fp)
   2e7f8:	1009883a 	mov	r4,r2
   2e7fc:	180b883a 	mov	r5,r3
   2e800:	e1bff817 	ldw	r6,-32(fp)
   2e804:	002a5740 	call	2a574 <memcpy>
      ptr   += n;
   2e808:	e0fff817 	ldw	r3,-32(fp)
   2e80c:	e0bffc17 	ldw	r2,-16(fp)
   2e810:	10c5883a 	add	r2,r2,r3
   2e814:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   2e818:	e0fffd17 	ldw	r3,-12(fp)
   2e81c:	e0bff817 	ldw	r2,-32(fp)
   2e820:	1885c83a 	sub	r2,r3,r2
   2e824:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e828:	e0fffa17 	ldw	r3,-24(fp)
   2e82c:	e0bff817 	ldw	r2,-32(fp)
   2e830:	1885883a 	add	r2,r3,r2
   2e834:	10c1ffcc 	andi	r3,r2,2047
   2e838:	e0bffb17 	ldw	r2,-20(fp)
   2e83c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e840:	e0bffd17 	ldw	r2,-12(fp)
   2e844:	10800048 	cmpgei	r2,r2,1
   2e848:	103fc31e 	bne	r2,zero,2e758 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e84c:	0005303a 	rdctl	r2,status
   2e850:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e854:	e0fff517 	ldw	r3,-44(fp)
   2e858:	00bfff84 	movi	r2,-2
   2e85c:	1884703a 	and	r2,r3,r2
   2e860:	1001703a 	wrctl	status,r2
  
  return context;
   2e864:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2e868:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e86c:	e0bffb17 	ldw	r2,-20(fp)
   2e870:	10800817 	ldw	r2,32(r2)
   2e874:	10c00094 	ori	r3,r2,2
   2e878:	e0bffb17 	ldw	r2,-20(fp)
   2e87c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e880:	e0bffb17 	ldw	r2,-20(fp)
   2e884:	10800017 	ldw	r2,0(r2)
   2e888:	11000104 	addi	r4,r2,4
   2e88c:	e0bffb17 	ldw	r2,-20(fp)
   2e890:	10800817 	ldw	r2,32(r2)
   2e894:	1007883a 	mov	r3,r2
   2e898:	2005883a 	mov	r2,r4
   2e89c:	10c00035 	stwio	r3,0(r2)
   2e8a0:	e0bff717 	ldw	r2,-36(fp)
   2e8a4:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e8a8:	e0bff417 	ldw	r2,-48(fp)
   2e8ac:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2e8b0:	e0bffd17 	ldw	r2,-12(fp)
   2e8b4:	10800050 	cmplti	r2,r2,1
   2e8b8:	1000111e 	bne	r2,zero,2e900 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   2e8bc:	e0bffe17 	ldw	r2,-8(fp)
   2e8c0:	1090000c 	andi	r2,r2,16384
   2e8c4:	1004c03a 	cmpne	r2,r2,zero
   2e8c8:	1000101e 	bne	r2,zero,2e90c <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2e8cc:	e0bffb17 	ldw	r2,-20(fp)
   2e8d0:	10c00d17 	ldw	r3,52(r2)
   2e8d4:	e0bff917 	ldw	r2,-28(fp)
   2e8d8:	1880051e 	bne	r3,r2,2e8f0 <altera_avalon_jtag_uart_write+0x1c8>
   2e8dc:	e0bffb17 	ldw	r2,-20(fp)
   2e8e0:	10c00917 	ldw	r3,36(r2)
   2e8e4:	e0bffb17 	ldw	r2,-20(fp)
   2e8e8:	10800117 	ldw	r2,4(r2)
   2e8ec:	18bff736 	bltu	r3,r2,2e8cc <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   2e8f0:	e0bffb17 	ldw	r2,-20(fp)
   2e8f4:	10c00d17 	ldw	r3,52(r2)
   2e8f8:	e0bff917 	ldw	r2,-28(fp)
   2e8fc:	18800326 	beq	r3,r2,2e90c <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
   2e900:	e0bffd17 	ldw	r2,-12(fp)
   2e904:	10800048 	cmpgei	r2,r2,1
   2e908:	103fcd1e 	bne	r2,zero,2e840 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2e90c:	e0fffc17 	ldw	r3,-16(fp)
   2e910:	e0bff617 	ldw	r2,-40(fp)
   2e914:	18800526 	beq	r3,r2,2e92c <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   2e918:	e0fffc17 	ldw	r3,-16(fp)
   2e91c:	e0bff617 	ldw	r2,-40(fp)
   2e920:	1887c83a 	sub	r3,r3,r2
   2e924:	e0ffff15 	stw	r3,-4(fp)
   2e928:	00000906 	br	2e950 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   2e92c:	e0bffe17 	ldw	r2,-8(fp)
   2e930:	1090000c 	andi	r2,r2,16384
   2e934:	1005003a 	cmpeq	r2,r2,zero
   2e938:	1000031e 	bne	r2,zero,2e948 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   2e93c:	00bffd44 	movi	r2,-11
   2e940:	e0bfff15 	stw	r2,-4(fp)
   2e944:	00000206 	br	2e950 <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2e948:	00bffec4 	movi	r2,-5
   2e94c:	e0bfff15 	stw	r2,-4(fp)
   2e950:	e0bfff17 	ldw	r2,-4(fp)
}
   2e954:	e037883a 	mov	sp,fp
   2e958:	dfc00117 	ldw	ra,4(sp)
   2e95c:	df000017 	ldw	fp,0(sp)
   2e960:	dec00204 	addi	sp,sp,8
   2e964:	f800283a 	ret

0002e968 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2e968:	defff404 	addi	sp,sp,-48
   2e96c:	df000b15 	stw	fp,44(sp)
   2e970:	df000b04 	addi	fp,sp,44
   2e974:	e13ffb15 	stw	r4,-20(fp)
   2e978:	e17ffc15 	stw	r5,-16(fp)
   2e97c:	e1bffd15 	stw	r6,-12(fp)
   2e980:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2e984:	e03ff915 	stw	zero,-28(fp)
   2e988:	008000f4 	movhi	r2,3
   2e98c:	108d7204 	addi	r2,r2,13768
   2e990:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   2e994:	1005003a 	cmpeq	r2,r2,zero
   2e998:	1000411e 	bne	r2,zero,2eaa0 <alt_alarm_start+0x138>
  {
    if (alarm)
   2e99c:	e0bffb17 	ldw	r2,-20(fp)
   2e9a0:	1005003a 	cmpeq	r2,r2,zero
   2e9a4:	10003b1e 	bne	r2,zero,2ea94 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   2e9a8:	e0fffb17 	ldw	r3,-20(fp)
   2e9ac:	e0bffd17 	ldw	r2,-12(fp)
   2e9b0:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   2e9b4:	e0fffb17 	ldw	r3,-20(fp)
   2e9b8:	e0bffe17 	ldw	r2,-8(fp)
   2e9bc:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e9c0:	0005303a 	rdctl	r2,status
   2e9c4:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e9c8:	e0fff817 	ldw	r3,-32(fp)
   2e9cc:	00bfff84 	movi	r2,-2
   2e9d0:	1884703a 	and	r2,r3,r2
   2e9d4:	1001703a 	wrctl	status,r2
  
  return context;
   2e9d8:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   2e9dc:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2e9e0:	008000f4 	movhi	r2,3
   2e9e4:	108d7304 	addi	r2,r2,13772
   2e9e8:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   2e9ec:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2e9f0:	e0fffc17 	ldw	r3,-16(fp)
   2e9f4:	e0bff917 	ldw	r2,-28(fp)
   2e9f8:	1885883a 	add	r2,r3,r2
   2e9fc:	10c00044 	addi	r3,r2,1
   2ea00:	e0bffb17 	ldw	r2,-20(fp)
   2ea04:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2ea08:	e0bffb17 	ldw	r2,-20(fp)
   2ea0c:	10c00217 	ldw	r3,8(r2)
   2ea10:	e0bff917 	ldw	r2,-28(fp)
   2ea14:	1880042e 	bgeu	r3,r2,2ea28 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   2ea18:	e0fffb17 	ldw	r3,-20(fp)
   2ea1c:	00800044 	movi	r2,1
   2ea20:	18800405 	stb	r2,16(r3)
   2ea24:	00000206 	br	2ea30 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   2ea28:	e0bffb17 	ldw	r2,-20(fp)
   2ea2c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2ea30:	e0fffb17 	ldw	r3,-20(fp)
   2ea34:	008000f4 	movhi	r2,3
   2ea38:	1086bd04 	addi	r2,r2,6900
   2ea3c:	e0bff615 	stw	r2,-40(fp)
   2ea40:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2ea44:	e0fff717 	ldw	r3,-36(fp)
   2ea48:	e0bff617 	ldw	r2,-40(fp)
   2ea4c:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   2ea50:	e0bff617 	ldw	r2,-40(fp)
   2ea54:	10c00017 	ldw	r3,0(r2)
   2ea58:	e0bff717 	ldw	r2,-36(fp)
   2ea5c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2ea60:	e0bff617 	ldw	r2,-40(fp)
   2ea64:	10c00017 	ldw	r3,0(r2)
   2ea68:	e0bff717 	ldw	r2,-36(fp)
   2ea6c:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   2ea70:	e0fff617 	ldw	r3,-40(fp)
   2ea74:	e0bff717 	ldw	r2,-36(fp)
   2ea78:	18800015 	stw	r2,0(r3)
   2ea7c:	e0bffa17 	ldw	r2,-24(fp)
   2ea80:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ea84:	e0bff517 	ldw	r2,-44(fp)
   2ea88:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2ea8c:	e03fff15 	stw	zero,-4(fp)
   2ea90:	00000506 	br	2eaa8 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   2ea94:	00bffa84 	movi	r2,-22
   2ea98:	e0bfff15 	stw	r2,-4(fp)
   2ea9c:	00000206 	br	2eaa8 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   2eaa0:	00bfde84 	movi	r2,-134
   2eaa4:	e0bfff15 	stw	r2,-4(fp)
   2eaa8:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   2eaac:	e037883a 	mov	sp,fp
   2eab0:	df000017 	ldw	fp,0(sp)
   2eab4:	dec00104 	addi	sp,sp,4
   2eab8:	f800283a 	ret

0002eabc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2eabc:	deffff04 	addi	sp,sp,-4
   2eac0:	df000015 	stw	fp,0(sp)
   2eac4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2eac8:	e037883a 	mov	sp,fp
   2eacc:	df000017 	ldw	fp,0(sp)
   2ead0:	dec00104 	addi	sp,sp,4
   2ead4:	f800283a 	ret

0002ead8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2ead8:	defff904 	addi	sp,sp,-28
   2eadc:	dfc00615 	stw	ra,24(sp)
   2eae0:	df000515 	stw	fp,20(sp)
   2eae4:	df000504 	addi	fp,sp,20
   2eae8:	e13ffd15 	stw	r4,-12(fp)
   2eaec:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2eaf0:	e0bffd17 	ldw	r2,-12(fp)
   2eaf4:	1005003a 	cmpeq	r2,r2,zero
   2eaf8:	1000041e 	bne	r2,zero,2eb0c <alt_dev_llist_insert+0x34>
   2eafc:	e0bffd17 	ldw	r2,-12(fp)
   2eb00:	10800217 	ldw	r2,8(r2)
   2eb04:	1004c03a 	cmpne	r2,r2,zero
   2eb08:	1000071e 	bne	r2,zero,2eb28 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   2eb0c:	002eb8c0 	call	2eb8c <alt_get_errno>
   2eb10:	1007883a 	mov	r3,r2
   2eb14:	00800584 	movi	r2,22
   2eb18:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2eb1c:	00bffa84 	movi	r2,-22
   2eb20:	e0bfff15 	stw	r2,-4(fp)
   2eb24:	00001306 	br	2eb74 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2eb28:	e0fffd17 	ldw	r3,-12(fp)
   2eb2c:	e0bffe17 	ldw	r2,-8(fp)
   2eb30:	e0bffb15 	stw	r2,-20(fp)
   2eb34:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2eb38:	e0fffc17 	ldw	r3,-16(fp)
   2eb3c:	e0bffb17 	ldw	r2,-20(fp)
   2eb40:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   2eb44:	e0bffb17 	ldw	r2,-20(fp)
   2eb48:	10c00017 	ldw	r3,0(r2)
   2eb4c:	e0bffc17 	ldw	r2,-16(fp)
   2eb50:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2eb54:	e0bffb17 	ldw	r2,-20(fp)
   2eb58:	10c00017 	ldw	r3,0(r2)
   2eb5c:	e0bffc17 	ldw	r2,-16(fp)
   2eb60:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   2eb64:	e0fffb17 	ldw	r3,-20(fp)
   2eb68:	e0bffc17 	ldw	r2,-16(fp)
   2eb6c:	18800015 	stw	r2,0(r3)

  return 0;  
   2eb70:	e03fff15 	stw	zero,-4(fp)
   2eb74:	e0bfff17 	ldw	r2,-4(fp)
}
   2eb78:	e037883a 	mov	sp,fp
   2eb7c:	dfc00117 	ldw	ra,4(sp)
   2eb80:	df000017 	ldw	fp,0(sp)
   2eb84:	dec00204 	addi	sp,sp,8
   2eb88:	f800283a 	ret

0002eb8c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2eb8c:	defffd04 	addi	sp,sp,-12
   2eb90:	dfc00215 	stw	ra,8(sp)
   2eb94:	df000115 	stw	fp,4(sp)
   2eb98:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2eb9c:	008000f4 	movhi	r2,3
   2eba0:	1086ba04 	addi	r2,r2,6888
   2eba4:	10800017 	ldw	r2,0(r2)
   2eba8:	1005003a 	cmpeq	r2,r2,zero
   2ebac:	1000061e 	bne	r2,zero,2ebc8 <alt_get_errno+0x3c>
   2ebb0:	008000f4 	movhi	r2,3
   2ebb4:	1086ba04 	addi	r2,r2,6888
   2ebb8:	10800017 	ldw	r2,0(r2)
   2ebbc:	103ee83a 	callr	r2
   2ebc0:	e0bfff15 	stw	r2,-4(fp)
   2ebc4:	00000306 	br	2ebd4 <alt_get_errno+0x48>
   2ebc8:	008000f4 	movhi	r2,3
   2ebcc:	108d6d04 	addi	r2,r2,13748
   2ebd0:	e0bfff15 	stw	r2,-4(fp)
   2ebd4:	e0bfff17 	ldw	r2,-4(fp)
}
   2ebd8:	e037883a 	mov	sp,fp
   2ebdc:	dfc00117 	ldw	ra,4(sp)
   2ebe0:	df000017 	ldw	fp,0(sp)
   2ebe4:	dec00204 	addi	sp,sp,8
   2ebe8:	f800283a 	ret

0002ebec <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2ebec:	defffd04 	addi	sp,sp,-12
   2ebf0:	dfc00215 	stw	ra,8(sp)
   2ebf4:	df000115 	stw	fp,4(sp)
   2ebf8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2ebfc:	00bfff04 	movi	r2,-4
   2ec00:	00c000f4 	movhi	r3,3
   2ec04:	18ff1f04 	addi	r3,r3,-900
   2ec08:	1885883a 	add	r2,r3,r2
   2ec0c:	e0bfff15 	stw	r2,-4(fp)
   2ec10:	00000606 	br	2ec2c <_do_ctors+0x40>
        (*ctor) (); 
   2ec14:	e0bfff17 	ldw	r2,-4(fp)
   2ec18:	10800017 	ldw	r2,0(r2)
   2ec1c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2ec20:	e0bfff17 	ldw	r2,-4(fp)
   2ec24:	10bfff04 	addi	r2,r2,-4
   2ec28:	e0bfff15 	stw	r2,-4(fp)
   2ec2c:	e0ffff17 	ldw	r3,-4(fp)
   2ec30:	008000f4 	movhi	r2,3
   2ec34:	10bf1e04 	addi	r2,r2,-904
   2ec38:	18bff62e 	bgeu	r3,r2,2ec14 <_do_ctors+0x28>
        (*ctor) (); 
}
   2ec3c:	e037883a 	mov	sp,fp
   2ec40:	dfc00117 	ldw	ra,4(sp)
   2ec44:	df000017 	ldw	fp,0(sp)
   2ec48:	dec00204 	addi	sp,sp,8
   2ec4c:	f800283a 	ret

0002ec50 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2ec50:	defffd04 	addi	sp,sp,-12
   2ec54:	dfc00215 	stw	ra,8(sp)
   2ec58:	df000115 	stw	fp,4(sp)
   2ec5c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2ec60:	00bfff04 	movi	r2,-4
   2ec64:	00c000f4 	movhi	r3,3
   2ec68:	18ff1f04 	addi	r3,r3,-900
   2ec6c:	1885883a 	add	r2,r3,r2
   2ec70:	e0bfff15 	stw	r2,-4(fp)
   2ec74:	00000606 	br	2ec90 <_do_dtors+0x40>
        (*dtor) (); 
   2ec78:	e0bfff17 	ldw	r2,-4(fp)
   2ec7c:	10800017 	ldw	r2,0(r2)
   2ec80:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2ec84:	e0bfff17 	ldw	r2,-4(fp)
   2ec88:	10bfff04 	addi	r2,r2,-4
   2ec8c:	e0bfff15 	stw	r2,-4(fp)
   2ec90:	e0ffff17 	ldw	r3,-4(fp)
   2ec94:	008000f4 	movhi	r2,3
   2ec98:	10bf1f04 	addi	r2,r2,-900
   2ec9c:	18bff62e 	bgeu	r3,r2,2ec78 <_do_dtors+0x28>
        (*dtor) (); 
}
   2eca0:	e037883a 	mov	sp,fp
   2eca4:	dfc00117 	ldw	ra,4(sp)
   2eca8:	df000017 	ldw	fp,0(sp)
   2ecac:	dec00204 	addi	sp,sp,8
   2ecb0:	f800283a 	ret

0002ecb4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2ecb4:	defffe04 	addi	sp,sp,-8
   2ecb8:	dfc00115 	stw	ra,4(sp)
   2ecbc:	df000015 	stw	fp,0(sp)
   2ecc0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2ecc4:	0009883a 	mov	r4,zero
   2ecc8:	01440004 	movi	r5,4096
   2eccc:	002f7e00 	call	2f7e0 <alt_icache_flush>
#endif
}
   2ecd0:	e037883a 	mov	sp,fp
   2ecd4:	dfc00117 	ldw	ra,4(sp)
   2ecd8:	df000017 	ldw	fp,0(sp)
   2ecdc:	dec00204 	addi	sp,sp,8
   2ece0:	f800283a 	ret

0002ece4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2ece4:	defff904 	addi	sp,sp,-28
   2ece8:	dfc00615 	stw	ra,24(sp)
   2ecec:	df000515 	stw	fp,20(sp)
   2ecf0:	df000504 	addi	fp,sp,20
   2ecf4:	e13ffc15 	stw	r4,-16(fp)
   2ecf8:	e17ffd15 	stw	r5,-12(fp)
   2ecfc:	e1bffe15 	stw	r6,-8(fp)
   2ed00:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2ed04:	e0800217 	ldw	r2,8(fp)
   2ed08:	d8800015 	stw	r2,0(sp)
   2ed0c:	e13ffc17 	ldw	r4,-16(fp)
   2ed10:	e17ffd17 	ldw	r5,-12(fp)
   2ed14:	e1bffe17 	ldw	r6,-8(fp)
   2ed18:	e1ffff17 	ldw	r7,-4(fp)
   2ed1c:	002eeb80 	call	2eeb8 <alt_iic_isr_register>
}  
   2ed20:	e037883a 	mov	sp,fp
   2ed24:	dfc00117 	ldw	ra,4(sp)
   2ed28:	df000017 	ldw	fp,0(sp)
   2ed2c:	dec00204 	addi	sp,sp,8
   2ed30:	f800283a 	ret

0002ed34 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2ed34:	defff904 	addi	sp,sp,-28
   2ed38:	df000615 	stw	fp,24(sp)
   2ed3c:	df000604 	addi	fp,sp,24
   2ed40:	e13ffe15 	stw	r4,-8(fp)
   2ed44:	e17fff15 	stw	r5,-4(fp)
   2ed48:	e0bfff17 	ldw	r2,-4(fp)
   2ed4c:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2ed50:	0005303a 	rdctl	r2,status
   2ed54:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ed58:	e0fffb17 	ldw	r3,-20(fp)
   2ed5c:	00bfff84 	movi	r2,-2
   2ed60:	1884703a 	and	r2,r3,r2
   2ed64:	1001703a 	wrctl	status,r2
  
  return context;
   2ed68:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2ed6c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   2ed70:	e0fffc17 	ldw	r3,-16(fp)
   2ed74:	00800044 	movi	r2,1
   2ed78:	10c4983a 	sll	r2,r2,r3
   2ed7c:	1007883a 	mov	r3,r2
   2ed80:	008000f4 	movhi	r2,3
   2ed84:	108d7104 	addi	r2,r2,13764
   2ed88:	10800017 	ldw	r2,0(r2)
   2ed8c:	1886b03a 	or	r3,r3,r2
   2ed90:	008000f4 	movhi	r2,3
   2ed94:	108d7104 	addi	r2,r2,13764
   2ed98:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2ed9c:	008000f4 	movhi	r2,3
   2eda0:	108d7104 	addi	r2,r2,13764
   2eda4:	10800017 	ldw	r2,0(r2)
   2eda8:	100170fa 	wrctl	ienable,r2
   2edac:	e0bffd17 	ldw	r2,-12(fp)
   2edb0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2edb4:	e0bffa17 	ldw	r2,-24(fp)
   2edb8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2edbc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   2edc0:	e037883a 	mov	sp,fp
   2edc4:	df000017 	ldw	fp,0(sp)
   2edc8:	dec00104 	addi	sp,sp,4
   2edcc:	f800283a 	ret

0002edd0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2edd0:	defff904 	addi	sp,sp,-28
   2edd4:	df000615 	stw	fp,24(sp)
   2edd8:	df000604 	addi	fp,sp,24
   2eddc:	e13ffe15 	stw	r4,-8(fp)
   2ede0:	e17fff15 	stw	r5,-4(fp)
   2ede4:	e0bfff17 	ldw	r2,-4(fp)
   2ede8:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2edec:	0005303a 	rdctl	r2,status
   2edf0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2edf4:	e0fffb17 	ldw	r3,-20(fp)
   2edf8:	00bfff84 	movi	r2,-2
   2edfc:	1884703a 	and	r2,r3,r2
   2ee00:	1001703a 	wrctl	status,r2
  
  return context;
   2ee04:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2ee08:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   2ee0c:	e0fffc17 	ldw	r3,-16(fp)
   2ee10:	00800044 	movi	r2,1
   2ee14:	10c4983a 	sll	r2,r2,r3
   2ee18:	0084303a 	nor	r2,zero,r2
   2ee1c:	1007883a 	mov	r3,r2
   2ee20:	008000f4 	movhi	r2,3
   2ee24:	108d7104 	addi	r2,r2,13764
   2ee28:	10800017 	ldw	r2,0(r2)
   2ee2c:	1886703a 	and	r3,r3,r2
   2ee30:	008000f4 	movhi	r2,3
   2ee34:	108d7104 	addi	r2,r2,13764
   2ee38:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2ee3c:	008000f4 	movhi	r2,3
   2ee40:	108d7104 	addi	r2,r2,13764
   2ee44:	10800017 	ldw	r2,0(r2)
   2ee48:	100170fa 	wrctl	ienable,r2
   2ee4c:	e0bffd17 	ldw	r2,-12(fp)
   2ee50:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ee54:	e0bffa17 	ldw	r2,-24(fp)
   2ee58:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2ee5c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   2ee60:	e037883a 	mov	sp,fp
   2ee64:	df000017 	ldw	fp,0(sp)
   2ee68:	dec00104 	addi	sp,sp,4
   2ee6c:	f800283a 	ret

0002ee70 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2ee70:	defffc04 	addi	sp,sp,-16
   2ee74:	df000315 	stw	fp,12(sp)
   2ee78:	df000304 	addi	fp,sp,12
   2ee7c:	e13ffe15 	stw	r4,-8(fp)
   2ee80:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2ee84:	000530fa 	rdctl	r2,ienable
   2ee88:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2ee8c:	e0ffff17 	ldw	r3,-4(fp)
   2ee90:	00800044 	movi	r2,1
   2ee94:	10c4983a 	sll	r2,r2,r3
   2ee98:	1007883a 	mov	r3,r2
   2ee9c:	e0bffd17 	ldw	r2,-12(fp)
   2eea0:	1884703a 	and	r2,r3,r2
   2eea4:	1004c03a 	cmpne	r2,r2,zero
}
   2eea8:	e037883a 	mov	sp,fp
   2eeac:	df000017 	ldw	fp,0(sp)
   2eeb0:	dec00104 	addi	sp,sp,4
   2eeb4:	f800283a 	ret

0002eeb8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2eeb8:	defff404 	addi	sp,sp,-48
   2eebc:	dfc00b15 	stw	ra,44(sp)
   2eec0:	df000a15 	stw	fp,40(sp)
   2eec4:	df000a04 	addi	fp,sp,40
   2eec8:	e13ffb15 	stw	r4,-20(fp)
   2eecc:	e17ffc15 	stw	r5,-16(fp)
   2eed0:	e1bffd15 	stw	r6,-12(fp)
   2eed4:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   2eed8:	00bffa84 	movi	r2,-22
   2eedc:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2eee0:	e0bffc17 	ldw	r2,-16(fp)
   2eee4:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2eee8:	e0bff917 	ldw	r2,-28(fp)
   2eeec:	10800808 	cmpgei	r2,r2,32
   2eef0:	1000291e 	bne	r2,zero,2ef98 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eef4:	0005303a 	rdctl	r2,status
   2eef8:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eefc:	e0fff717 	ldw	r3,-36(fp)
   2ef00:	00bfff84 	movi	r2,-2
   2ef04:	1884703a 	and	r2,r3,r2
   2ef08:	1001703a 	wrctl	status,r2
  
  return context;
   2ef0c:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2ef10:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   2ef14:	e0bff917 	ldw	r2,-28(fp)
   2ef18:	00c000f4 	movhi	r3,3
   2ef1c:	18d0ec04 	addi	r3,r3,17328
   2ef20:	100490fa 	slli	r2,r2,3
   2ef24:	10c7883a 	add	r3,r2,r3
   2ef28:	e0bffd17 	ldw	r2,-12(fp)
   2ef2c:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   2ef30:	e0bff917 	ldw	r2,-28(fp)
   2ef34:	00c000f4 	movhi	r3,3
   2ef38:	18d0ec04 	addi	r3,r3,17328
   2ef3c:	100490fa 	slli	r2,r2,3
   2ef40:	10c5883a 	add	r2,r2,r3
   2ef44:	10c00104 	addi	r3,r2,4
   2ef48:	e0bffe17 	ldw	r2,-8(fp)
   2ef4c:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2ef50:	e0bffd17 	ldw	r2,-12(fp)
   2ef54:	1005003a 	cmpeq	r2,r2,zero
   2ef58:	1000051e 	bne	r2,zero,2ef70 <alt_iic_isr_register+0xb8>
   2ef5c:	e17ff917 	ldw	r5,-28(fp)
   2ef60:	e13ffb17 	ldw	r4,-20(fp)
   2ef64:	002ed340 	call	2ed34 <alt_ic_irq_enable>
   2ef68:	e0bfff15 	stw	r2,-4(fp)
   2ef6c:	00000406 	br	2ef80 <alt_iic_isr_register+0xc8>
   2ef70:	e17ff917 	ldw	r5,-28(fp)
   2ef74:	e13ffb17 	ldw	r4,-20(fp)
   2ef78:	002edd00 	call	2edd0 <alt_ic_irq_disable>
   2ef7c:	e0bfff15 	stw	r2,-4(fp)
   2ef80:	e0bfff17 	ldw	r2,-4(fp)
   2ef84:	e0bffa15 	stw	r2,-24(fp)
   2ef88:	e0bff817 	ldw	r2,-32(fp)
   2ef8c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ef90:	e0bff617 	ldw	r2,-40(fp)
   2ef94:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2ef98:	e0bffa17 	ldw	r2,-24(fp)
}
   2ef9c:	e037883a 	mov	sp,fp
   2efa0:	dfc00117 	ldw	ra,4(sp)
   2efa4:	df000017 	ldw	fp,0(sp)
   2efa8:	dec00204 	addi	sp,sp,8
   2efac:	f800283a 	ret

0002efb0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2efb0:	defff904 	addi	sp,sp,-28
   2efb4:	dfc00615 	stw	ra,24(sp)
   2efb8:	df000515 	stw	fp,20(sp)
   2efbc:	df000504 	addi	fp,sp,20
   2efc0:	e13ffc15 	stw	r4,-16(fp)
   2efc4:	e17ffd15 	stw	r5,-12(fp)
   2efc8:	e1bffe15 	stw	r6,-8(fp)
   2efcc:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2efd0:	e13ffd17 	ldw	r4,-12(fp)
   2efd4:	e17ffe17 	ldw	r5,-8(fp)
   2efd8:	e1bfff17 	ldw	r6,-4(fp)
   2efdc:	002f1c80 	call	2f1c8 <open>
   2efe0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2efe4:	e0bffb17 	ldw	r2,-20(fp)
   2efe8:	1004803a 	cmplt	r2,r2,zero
   2efec:	10001c1e 	bne	r2,zero,2f060 <alt_open_fd+0xb0>
  {
    fd->dev      = alt_fd_list[old].dev;
   2eff0:	e0bffb17 	ldw	r2,-20(fp)
   2eff4:	00c000f4 	movhi	r3,3
   2eff8:	18c22704 	addi	r3,r3,2204
   2effc:	10800324 	muli	r2,r2,12
   2f000:	10c5883a 	add	r2,r2,r3
   2f004:	10c00017 	ldw	r3,0(r2)
   2f008:	e0bffc17 	ldw	r2,-16(fp)
   2f00c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2f010:	e0bffb17 	ldw	r2,-20(fp)
   2f014:	00c000f4 	movhi	r3,3
   2f018:	18c22704 	addi	r3,r3,2204
   2f01c:	10800324 	muli	r2,r2,12
   2f020:	10c5883a 	add	r2,r2,r3
   2f024:	10800104 	addi	r2,r2,4
   2f028:	10c00017 	ldw	r3,0(r2)
   2f02c:	e0bffc17 	ldw	r2,-16(fp)
   2f030:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2f034:	e0bffb17 	ldw	r2,-20(fp)
   2f038:	00c000f4 	movhi	r3,3
   2f03c:	18c22704 	addi	r3,r3,2204
   2f040:	10800324 	muli	r2,r2,12
   2f044:	10c5883a 	add	r2,r2,r3
   2f048:	10800204 	addi	r2,r2,8
   2f04c:	10c00017 	ldw	r3,0(r2)
   2f050:	e0bffc17 	ldw	r2,-16(fp)
   2f054:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2f058:	e13ffb17 	ldw	r4,-20(fp)
   2f05c:	002db700 	call	2db70 <alt_release_fd>
  }
} 
   2f060:	e037883a 	mov	sp,fp
   2f064:	dfc00117 	ldw	ra,4(sp)
   2f068:	df000017 	ldw	fp,0(sp)
   2f06c:	dec00204 	addi	sp,sp,8
   2f070:	f800283a 	ret

0002f074 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2f074:	defffb04 	addi	sp,sp,-20
   2f078:	dfc00415 	stw	ra,16(sp)
   2f07c:	df000315 	stw	fp,12(sp)
   2f080:	df000304 	addi	fp,sp,12
   2f084:	e13ffd15 	stw	r4,-12(fp)
   2f088:	e17ffe15 	stw	r5,-8(fp)
   2f08c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2f090:	010000f4 	movhi	r4,3
   2f094:	21022a04 	addi	r4,r4,2216
   2f098:	e17ffd17 	ldw	r5,-12(fp)
   2f09c:	01800044 	movi	r6,1
   2f0a0:	01c07fc4 	movi	r7,511
   2f0a4:	002efb00 	call	2efb0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2f0a8:	010000f4 	movhi	r4,3
   2f0ac:	21022704 	addi	r4,r4,2204
   2f0b0:	e17ffe17 	ldw	r5,-8(fp)
   2f0b4:	000d883a 	mov	r6,zero
   2f0b8:	01c07fc4 	movi	r7,511
   2f0bc:	002efb00 	call	2efb0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2f0c0:	010000f4 	movhi	r4,3
   2f0c4:	21022d04 	addi	r4,r4,2228
   2f0c8:	e17fff17 	ldw	r5,-4(fp)
   2f0cc:	01800044 	movi	r6,1
   2f0d0:	01c07fc4 	movi	r7,511
   2f0d4:	002efb00 	call	2efb0 <alt_open_fd>
}  
   2f0d8:	e037883a 	mov	sp,fp
   2f0dc:	dfc00117 	ldw	ra,4(sp)
   2f0e0:	df000017 	ldw	fp,0(sp)
   2f0e4:	dec00204 	addi	sp,sp,8
   2f0e8:	f800283a 	ret

0002f0ec <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2f0ec:	defffc04 	addi	sp,sp,-16
   2f0f0:	df000315 	stw	fp,12(sp)
   2f0f4:	df000304 	addi	fp,sp,12
   2f0f8:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2f0fc:	e0bffe17 	ldw	r2,-8(fp)
   2f100:	10800217 	ldw	r2,8(r2)
   2f104:	10d00034 	orhi	r3,r2,16384
   2f108:	e0bffe17 	ldw	r2,-8(fp)
   2f10c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f110:	e03ffd15 	stw	zero,-12(fp)
   2f114:	00002006 	br	2f198 <alt_file_locked+0xac>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f118:	e0bffd17 	ldw	r2,-12(fp)
   2f11c:	00c000f4 	movhi	r3,3
   2f120:	18c22704 	addi	r3,r3,2204
   2f124:	10800324 	muli	r2,r2,12
   2f128:	10c5883a 	add	r2,r2,r3
   2f12c:	10c00017 	ldw	r3,0(r2)
   2f130:	e0bffe17 	ldw	r2,-8(fp)
   2f134:	10800017 	ldw	r2,0(r2)
   2f138:	1880141e 	bne	r3,r2,2f18c <alt_file_locked+0xa0>
   2f13c:	e0bffd17 	ldw	r2,-12(fp)
   2f140:	00c000f4 	movhi	r3,3
   2f144:	18c22704 	addi	r3,r3,2204
   2f148:	10800324 	muli	r2,r2,12
   2f14c:	10c5883a 	add	r2,r2,r3
   2f150:	10800204 	addi	r2,r2,8
   2f154:	10800017 	ldw	r2,0(r2)
   2f158:	1004403a 	cmpge	r2,r2,zero
   2f15c:	10000b1e 	bne	r2,zero,2f18c <alt_file_locked+0xa0>
   2f160:	e0bffd17 	ldw	r2,-12(fp)
   2f164:	10800324 	muli	r2,r2,12
   2f168:	1007883a 	mov	r3,r2
   2f16c:	008000f4 	movhi	r2,3
   2f170:	10822704 	addi	r2,r2,2204
   2f174:	1887883a 	add	r3,r3,r2
   2f178:	e0bffe17 	ldw	r2,-8(fp)
   2f17c:	18800326 	beq	r3,r2,2f18c <alt_file_locked+0xa0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2f180:	00bffcc4 	movi	r2,-13
   2f184:	e0bfff15 	stw	r2,-4(fp)
   2f188:	00000a06 	br	2f1b4 <alt_file_locked+0xc8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f18c:	e0bffd17 	ldw	r2,-12(fp)
   2f190:	10800044 	addi	r2,r2,1
   2f194:	e0bffd15 	stw	r2,-12(fp)
   2f198:	008000f4 	movhi	r2,3
   2f19c:	1086b904 	addi	r2,r2,6884
   2f1a0:	10800017 	ldw	r2,0(r2)
   2f1a4:	1007883a 	mov	r3,r2
   2f1a8:	e0bffd17 	ldw	r2,-12(fp)
   2f1ac:	18bfda2e 	bgeu	r3,r2,2f118 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2f1b0:	e03fff15 	stw	zero,-4(fp)
   2f1b4:	e0bfff17 	ldw	r2,-4(fp)
}
   2f1b8:	e037883a 	mov	sp,fp
   2f1bc:	df000017 	ldw	fp,0(sp)
   2f1c0:	dec00104 	addi	sp,sp,4
   2f1c4:	f800283a 	ret

0002f1c8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2f1c8:	defff404 	addi	sp,sp,-48
   2f1cc:	dfc00b15 	stw	ra,44(sp)
   2f1d0:	df000a15 	stw	fp,40(sp)
   2f1d4:	df000a04 	addi	fp,sp,40
   2f1d8:	e13ffb15 	stw	r4,-20(fp)
   2f1dc:	e17ffc15 	stw	r5,-16(fp)
   2f1e0:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2f1e4:	00bfffc4 	movi	r2,-1
   2f1e8:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   2f1ec:	00bffb44 	movi	r2,-19
   2f1f0:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   2f1f4:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2f1f8:	e13ffb17 	ldw	r4,-20(fp)
   2f1fc:	014000f4 	movhi	r5,3
   2f200:	2946b704 	addi	r5,r5,6876
   2f204:	002f5740 	call	2f574 <alt_find_dev>
   2f208:	e0bffa15 	stw	r2,-24(fp)
   2f20c:	e0bffa17 	ldw	r2,-24(fp)
   2f210:	1004c03a 	cmpne	r2,r2,zero
   2f214:	1000051e 	bne	r2,zero,2f22c <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2f218:	e13ffb17 	ldw	r4,-20(fp)
   2f21c:	002f6080 	call	2f608 <alt_find_file>
   2f220:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   2f224:	00800044 	movi	r2,1
   2f228:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2f22c:	e0bffa17 	ldw	r2,-24(fp)
   2f230:	1005003a 	cmpeq	r2,r2,zero
   2f234:	1000301e 	bne	r2,zero,2f2f8 <open+0x130>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2f238:	e13ffa17 	ldw	r4,-24(fp)
   2f23c:	002f7280 	call	2f728 <alt_get_fd>
   2f240:	e0bff815 	stw	r2,-32(fp)
   2f244:	e0bff817 	ldw	r2,-32(fp)
   2f248:	1004403a 	cmpge	r2,r2,zero
   2f24c:	1000031e 	bne	r2,zero,2f25c <open+0x94>
    {
      status = index;
   2f250:	e0bff817 	ldw	r2,-32(fp)
   2f254:	e0bff715 	stw	r2,-36(fp)
   2f258:	00002906 	br	2f300 <open+0x138>
    }
    else
    {
      fd = &alt_fd_list[index];
   2f25c:	e0bff817 	ldw	r2,-32(fp)
   2f260:	10800324 	muli	r2,r2,12
   2f264:	1007883a 	mov	r3,r2
   2f268:	008000f4 	movhi	r2,3
   2f26c:	10822704 	addi	r2,r2,2204
   2f270:	1885883a 	add	r2,r3,r2
   2f274:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2f278:	e0fffc17 	ldw	r3,-16(fp)
   2f27c:	00900034 	movhi	r2,16384
   2f280:	10bfffc4 	addi	r2,r2,-1
   2f284:	1886703a 	and	r3,r3,r2
   2f288:	e0bff917 	ldw	r2,-28(fp)
   2f28c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2f290:	e0bff617 	ldw	r2,-40(fp)
   2f294:	1004c03a 	cmpne	r2,r2,zero
   2f298:	1000061e 	bne	r2,zero,2f2b4 <open+0xec>
   2f29c:	e13ff917 	ldw	r4,-28(fp)
   2f2a0:	002f0ec0 	call	2f0ec <alt_file_locked>
   2f2a4:	e0bff715 	stw	r2,-36(fp)
   2f2a8:	e0bff717 	ldw	r2,-36(fp)
   2f2ac:	1004803a 	cmplt	r2,r2,zero
   2f2b0:	1000131e 	bne	r2,zero,2f300 <open+0x138>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2f2b4:	e0bffa17 	ldw	r2,-24(fp)
   2f2b8:	10800317 	ldw	r2,12(r2)
   2f2bc:	1005003a 	cmpeq	r2,r2,zero
   2f2c0:	1000091e 	bne	r2,zero,2f2e8 <open+0x120>
   2f2c4:	e0bffa17 	ldw	r2,-24(fp)
   2f2c8:	10800317 	ldw	r2,12(r2)
   2f2cc:	e13ff917 	ldw	r4,-28(fp)
   2f2d0:	e17ffb17 	ldw	r5,-20(fp)
   2f2d4:	e1bffc17 	ldw	r6,-16(fp)
   2f2d8:	e1fffd17 	ldw	r7,-12(fp)
   2f2dc:	103ee83a 	callr	r2
   2f2e0:	e0bfff15 	stw	r2,-4(fp)
   2f2e4:	00000106 	br	2f2ec <open+0x124>
   2f2e8:	e03fff15 	stw	zero,-4(fp)
   2f2ec:	e0bfff17 	ldw	r2,-4(fp)
   2f2f0:	e0bff715 	stw	r2,-36(fp)
   2f2f4:	00000206 	br	2f300 <open+0x138>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2f2f8:	00bffb44 	movi	r2,-19
   2f2fc:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2f300:	e0bff717 	ldw	r2,-36(fp)
   2f304:	1004403a 	cmpge	r2,r2,zero
   2f308:	1000091e 	bne	r2,zero,2f330 <open+0x168>
  {
    alt_release_fd (index);  
   2f30c:	e13ff817 	ldw	r4,-32(fp)
   2f310:	002db700 	call	2db70 <alt_release_fd>
    ALT_ERRNO = -status;
   2f314:	002f3500 	call	2f350 <alt_get_errno>
   2f318:	e0fff717 	ldw	r3,-36(fp)
   2f31c:	00c7c83a 	sub	r3,zero,r3
   2f320:	10c00015 	stw	r3,0(r2)
    return -1;
   2f324:	00bfffc4 	movi	r2,-1
   2f328:	e0bffe15 	stw	r2,-8(fp)
   2f32c:	00000206 	br	2f338 <open+0x170>
  }
  
  /* return the reference upon success */

  return index;
   2f330:	e0bff817 	ldw	r2,-32(fp)
   2f334:	e0bffe15 	stw	r2,-8(fp)
   2f338:	e0bffe17 	ldw	r2,-8(fp)
}
   2f33c:	e037883a 	mov	sp,fp
   2f340:	dfc00117 	ldw	ra,4(sp)
   2f344:	df000017 	ldw	fp,0(sp)
   2f348:	dec00204 	addi	sp,sp,8
   2f34c:	f800283a 	ret

0002f350 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f350:	defffd04 	addi	sp,sp,-12
   2f354:	dfc00215 	stw	ra,8(sp)
   2f358:	df000115 	stw	fp,4(sp)
   2f35c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   2f360:	008000f4 	movhi	r2,3
   2f364:	1086ba04 	addi	r2,r2,6888
   2f368:	10800017 	ldw	r2,0(r2)
   2f36c:	1005003a 	cmpeq	r2,r2,zero
   2f370:	1000061e 	bne	r2,zero,2f38c <alt_get_errno+0x3c>
   2f374:	008000f4 	movhi	r2,3
   2f378:	1086ba04 	addi	r2,r2,6888
   2f37c:	10800017 	ldw	r2,0(r2)
   2f380:	103ee83a 	callr	r2
   2f384:	e0bfff15 	stw	r2,-4(fp)
   2f388:	00000306 	br	2f398 <alt_get_errno+0x48>
   2f38c:	008000f4 	movhi	r2,3
   2f390:	108d6d04 	addi	r2,r2,13748
   2f394:	e0bfff15 	stw	r2,-4(fp)
   2f398:	e0bfff17 	ldw	r2,-4(fp)
}
   2f39c:	e037883a 	mov	sp,fp
   2f3a0:	dfc00117 	ldw	ra,4(sp)
   2f3a4:	df000017 	ldw	fp,0(sp)
   2f3a8:	dec00204 	addi	sp,sp,8
   2f3ac:	f800283a 	ret

0002f3b0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2f3b0:	defffa04 	addi	sp,sp,-24
   2f3b4:	df000515 	stw	fp,20(sp)
   2f3b8:	df000504 	addi	fp,sp,20
   2f3bc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f3c0:	0005303a 	rdctl	r2,status
   2f3c4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f3c8:	e0fffd17 	ldw	r3,-12(fp)
   2f3cc:	00bfff84 	movi	r2,-2
   2f3d0:	1884703a 	and	r2,r3,r2
   2f3d4:	1001703a 	wrctl	status,r2
  
  return context;
   2f3d8:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2f3dc:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   2f3e0:	e0bfff17 	ldw	r2,-4(fp)
   2f3e4:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2f3e8:	e0bffc17 	ldw	r2,-16(fp)
   2f3ec:	10c00017 	ldw	r3,0(r2)
   2f3f0:	e0bffc17 	ldw	r2,-16(fp)
   2f3f4:	10800117 	ldw	r2,4(r2)
   2f3f8:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   2f3fc:	e0bffc17 	ldw	r2,-16(fp)
   2f400:	10c00117 	ldw	r3,4(r2)
   2f404:	e0bffc17 	ldw	r2,-16(fp)
   2f408:	10800017 	ldw	r2,0(r2)
   2f40c:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2f410:	e0fffc17 	ldw	r3,-16(fp)
   2f414:	e0bffc17 	ldw	r2,-16(fp)
   2f418:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   2f41c:	e0fffc17 	ldw	r3,-16(fp)
   2f420:	e0bffc17 	ldw	r2,-16(fp)
   2f424:	18800015 	stw	r2,0(r3)
   2f428:	e0bffe17 	ldw	r2,-8(fp)
   2f42c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f430:	e0bffb17 	ldw	r2,-20(fp)
   2f434:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2f438:	e037883a 	mov	sp,fp
   2f43c:	df000017 	ldw	fp,0(sp)
   2f440:	dec00104 	addi	sp,sp,4
   2f444:	f800283a 	ret

0002f448 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2f448:	defffb04 	addi	sp,sp,-20
   2f44c:	dfc00415 	stw	ra,16(sp)
   2f450:	df000315 	stw	fp,12(sp)
   2f454:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2f458:	d0a01e17 	ldw	r2,-32648(gp)
   2f45c:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2f460:	d0a6d417 	ldw	r2,-25776(gp)
   2f464:	10800044 	addi	r2,r2,1
   2f468:	d0a6d415 	stw	r2,-25776(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f46c:	00003106 	br	2f534 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   2f470:	e0bffe17 	ldw	r2,-8(fp)
   2f474:	10800017 	ldw	r2,0(r2)
   2f478:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2f47c:	e0bffe17 	ldw	r2,-8(fp)
   2f480:	10800403 	ldbu	r2,16(r2)
   2f484:	10803fcc 	andi	r2,r2,255
   2f488:	1005003a 	cmpeq	r2,r2,zero
   2f48c:	1000051e 	bne	r2,zero,2f4a4 <alt_tick+0x5c>
   2f490:	d0a6d417 	ldw	r2,-25776(gp)
   2f494:	1004c03a 	cmpne	r2,r2,zero
   2f498:	1000021e 	bne	r2,zero,2f4a4 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   2f49c:	e0bffe17 	ldw	r2,-8(fp)
   2f4a0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2f4a4:	e0bffe17 	ldw	r2,-8(fp)
   2f4a8:	10c00217 	ldw	r3,8(r2)
   2f4ac:	d0a6d417 	ldw	r2,-25776(gp)
   2f4b0:	10c01e36 	bltu	r2,r3,2f52c <alt_tick+0xe4>
   2f4b4:	e0bffe17 	ldw	r2,-8(fp)
   2f4b8:	10800403 	ldbu	r2,16(r2)
   2f4bc:	10803fcc 	andi	r2,r2,255
   2f4c0:	1004c03a 	cmpne	r2,r2,zero
   2f4c4:	1000191e 	bne	r2,zero,2f52c <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   2f4c8:	e0bffe17 	ldw	r2,-8(fp)
   2f4cc:	10c00317 	ldw	r3,12(r2)
   2f4d0:	e0bffe17 	ldw	r2,-8(fp)
   2f4d4:	11000517 	ldw	r4,20(r2)
   2f4d8:	183ee83a 	callr	r3
   2f4dc:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2f4e0:	e0bffd17 	ldw	r2,-12(fp)
   2f4e4:	1004c03a 	cmpne	r2,r2,zero
   2f4e8:	1000031e 	bne	r2,zero,2f4f8 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   2f4ec:	e13ffe17 	ldw	r4,-8(fp)
   2f4f0:	002f3b00 	call	2f3b0 <alt_alarm_stop>
   2f4f4:	00000d06 	br	2f52c <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   2f4f8:	e0bffe17 	ldw	r2,-8(fp)
   2f4fc:	10c00217 	ldw	r3,8(r2)
   2f500:	e0bffd17 	ldw	r2,-12(fp)
   2f504:	1887883a 	add	r3,r3,r2
   2f508:	e0bffe17 	ldw	r2,-8(fp)
   2f50c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2f510:	e0bffe17 	ldw	r2,-8(fp)
   2f514:	10c00217 	ldw	r3,8(r2)
   2f518:	d0a6d417 	ldw	r2,-25776(gp)
   2f51c:	1880032e 	bgeu	r3,r2,2f52c <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   2f520:	e0fffe17 	ldw	r3,-8(fp)
   2f524:	00800044 	movi	r2,1
   2f528:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   2f52c:	e0bfff17 	ldw	r2,-4(fp)
   2f530:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f534:	d0e01e04 	addi	r3,gp,-32648
   2f538:	e0bffe17 	ldw	r2,-8(fp)
   2f53c:	10ffcc1e 	bne	r2,r3,2f470 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   2f540:	e037883a 	mov	sp,fp
   2f544:	dfc00117 	ldw	ra,4(sp)
   2f548:	df000017 	ldw	fp,0(sp)
   2f54c:	dec00204 	addi	sp,sp,8
   2f550:	f800283a 	ret

0002f554 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   2f554:	deffff04 	addi	sp,sp,-4
   2f558:	df000015 	stw	fp,0(sp)
   2f55c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2f560:	000170fa 	wrctl	ienable,zero
}
   2f564:	e037883a 	mov	sp,fp
   2f568:	df000017 	ldw	fp,0(sp)
   2f56c:	dec00104 	addi	sp,sp,4
   2f570:	f800283a 	ret

0002f574 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f574:	defff904 	addi	sp,sp,-28
   2f578:	dfc00615 	stw	ra,24(sp)
   2f57c:	df000515 	stw	fp,20(sp)
   2f580:	df000504 	addi	fp,sp,20
   2f584:	e13ffd15 	stw	r4,-12(fp)
   2f588:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f58c:	e0bffe17 	ldw	r2,-8(fp)
   2f590:	10800017 	ldw	r2,0(r2)
   2f594:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f598:	e13ffd17 	ldw	r4,-12(fp)
   2f59c:	00253080 	call	25308 <strlen>
   2f5a0:	10800044 	addi	r2,r2,1
   2f5a4:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f5a8:	00000d06 	br	2f5e0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f5ac:	e0bffc17 	ldw	r2,-16(fp)
   2f5b0:	11000217 	ldw	r4,8(r2)
   2f5b4:	e1bffb17 	ldw	r6,-20(fp)
   2f5b8:	e17ffd17 	ldw	r5,-12(fp)
   2f5bc:	002f8bc0 	call	2f8bc <memcmp>
   2f5c0:	1004c03a 	cmpne	r2,r2,zero
   2f5c4:	1000031e 	bne	r2,zero,2f5d4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f5c8:	e0bffc17 	ldw	r2,-16(fp)
   2f5cc:	e0bfff15 	stw	r2,-4(fp)
   2f5d0:	00000706 	br	2f5f0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2f5d4:	e0bffc17 	ldw	r2,-16(fp)
   2f5d8:	10800017 	ldw	r2,0(r2)
   2f5dc:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f5e0:	e0fffe17 	ldw	r3,-8(fp)
   2f5e4:	e0bffc17 	ldw	r2,-16(fp)
   2f5e8:	10fff01e 	bne	r2,r3,2f5ac <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2f5ec:	e03fff15 	stw	zero,-4(fp)
   2f5f0:	e0bfff17 	ldw	r2,-4(fp)
}
   2f5f4:	e037883a 	mov	sp,fp
   2f5f8:	dfc00117 	ldw	ra,4(sp)
   2f5fc:	df000017 	ldw	fp,0(sp)
   2f600:	dec00204 	addi	sp,sp,8
   2f604:	f800283a 	ret

0002f608 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2f608:	defffa04 	addi	sp,sp,-24
   2f60c:	dfc00515 	stw	ra,20(sp)
   2f610:	df000415 	stw	fp,16(sp)
   2f614:	df000404 	addi	fp,sp,16
   2f618:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2f61c:	008000f4 	movhi	r2,3
   2f620:	1086b504 	addi	r2,r2,6868
   2f624:	10800017 	ldw	r2,0(r2)
   2f628:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f62c:	00003306 	br	2f6fc <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   2f630:	e0bffd17 	ldw	r2,-12(fp)
   2f634:	11000217 	ldw	r4,8(r2)
   2f638:	00253080 	call	25308 <strlen>
   2f63c:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   2f640:	e0bffd17 	ldw	r2,-12(fp)
   2f644:	10c00217 	ldw	r3,8(r2)
   2f648:	e0bffc17 	ldw	r2,-16(fp)
   2f64c:	1885883a 	add	r2,r3,r2
   2f650:	10bfffc4 	addi	r2,r2,-1
   2f654:	10800003 	ldbu	r2,0(r2)
   2f658:	10803fcc 	andi	r2,r2,255
   2f65c:	1080201c 	xori	r2,r2,128
   2f660:	10bfe004 	addi	r2,r2,-128
   2f664:	10800bd8 	cmpnei	r2,r2,47
   2f668:	1000031e 	bne	r2,zero,2f678 <alt_find_file+0x70>
    {
      len -= 1;
   2f66c:	e0bffc17 	ldw	r2,-16(fp)
   2f670:	10bfffc4 	addi	r2,r2,-1
   2f674:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f678:	e0bffc17 	ldw	r2,-16(fp)
   2f67c:	1007883a 	mov	r3,r2
   2f680:	e0bffe17 	ldw	r2,-8(fp)
   2f684:	1885883a 	add	r2,r3,r2
   2f688:	10800003 	ldbu	r2,0(r2)
   2f68c:	10803fcc 	andi	r2,r2,255
   2f690:	1080201c 	xori	r2,r2,128
   2f694:	10bfe004 	addi	r2,r2,-128
   2f698:	10800be0 	cmpeqi	r2,r2,47
   2f69c:	10000a1e 	bne	r2,zero,2f6c8 <alt_find_file+0xc0>
   2f6a0:	e0bffc17 	ldw	r2,-16(fp)
   2f6a4:	1007883a 	mov	r3,r2
   2f6a8:	e0bffe17 	ldw	r2,-8(fp)
   2f6ac:	1885883a 	add	r2,r3,r2
   2f6b0:	10800003 	ldbu	r2,0(r2)
   2f6b4:	10803fcc 	andi	r2,r2,255
   2f6b8:	1080201c 	xori	r2,r2,128
   2f6bc:	10bfe004 	addi	r2,r2,-128
   2f6c0:	1004c03a 	cmpne	r2,r2,zero
   2f6c4:	10000a1e 	bne	r2,zero,2f6f0 <alt_find_file+0xe8>
   2f6c8:	e0bffd17 	ldw	r2,-12(fp)
   2f6cc:	11000217 	ldw	r4,8(r2)
   2f6d0:	e1bffc17 	ldw	r6,-16(fp)
   2f6d4:	e17ffe17 	ldw	r5,-8(fp)
   2f6d8:	002f8bc0 	call	2f8bc <memcmp>
   2f6dc:	1004c03a 	cmpne	r2,r2,zero
   2f6e0:	1000031e 	bne	r2,zero,2f6f0 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2f6e4:	e0bffd17 	ldw	r2,-12(fp)
   2f6e8:	e0bfff15 	stw	r2,-4(fp)
   2f6ec:	00000806 	br	2f710 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   2f6f0:	e0bffd17 	ldw	r2,-12(fp)
   2f6f4:	10800017 	ldw	r2,0(r2)
   2f6f8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f6fc:	00c000f4 	movhi	r3,3
   2f700:	18c6b504 	addi	r3,r3,6868
   2f704:	e0bffd17 	ldw	r2,-12(fp)
   2f708:	10ffc91e 	bne	r2,r3,2f630 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2f70c:	e03fff15 	stw	zero,-4(fp)
   2f710:	e0bfff17 	ldw	r2,-4(fp)
}
   2f714:	e037883a 	mov	sp,fp
   2f718:	dfc00117 	ldw	ra,4(sp)
   2f71c:	df000017 	ldw	fp,0(sp)
   2f720:	dec00204 	addi	sp,sp,8
   2f724:	f800283a 	ret

0002f728 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2f728:	defffc04 	addi	sp,sp,-16
   2f72c:	df000315 	stw	fp,12(sp)
   2f730:	df000304 	addi	fp,sp,12
   2f734:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2f738:	00bffa04 	movi	r2,-24
   2f73c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f740:	e03ffe15 	stw	zero,-8(fp)
   2f744:	00001e06 	br	2f7c0 <alt_get_fd+0x98>
  {
    if (!alt_fd_list[i].dev)
   2f748:	e0bffe17 	ldw	r2,-8(fp)
   2f74c:	00c000f4 	movhi	r3,3
   2f750:	18c22704 	addi	r3,r3,2204
   2f754:	10800324 	muli	r2,r2,12
   2f758:	10c5883a 	add	r2,r2,r3
   2f75c:	10800017 	ldw	r2,0(r2)
   2f760:	1004c03a 	cmpne	r2,r2,zero
   2f764:	1000131e 	bne	r2,zero,2f7b4 <alt_get_fd+0x8c>
    {
      alt_fd_list[i].dev = dev;
   2f768:	e0bffe17 	ldw	r2,-8(fp)
   2f76c:	00c000f4 	movhi	r3,3
   2f770:	18c22704 	addi	r3,r3,2204
   2f774:	10800324 	muli	r2,r2,12
   2f778:	10c7883a 	add	r3,r2,r3
   2f77c:	e0bfff17 	ldw	r2,-4(fp)
   2f780:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   2f784:	008000f4 	movhi	r2,3
   2f788:	1086b904 	addi	r2,r2,6884
   2f78c:	10c00017 	ldw	r3,0(r2)
   2f790:	e0bffe17 	ldw	r2,-8(fp)
   2f794:	1880040e 	bge	r3,r2,2f7a8 <alt_get_fd+0x80>
      {
        alt_max_fd = i;
   2f798:	00c000f4 	movhi	r3,3
   2f79c:	18c6b904 	addi	r3,r3,6884
   2f7a0:	e0bffe17 	ldw	r2,-8(fp)
   2f7a4:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   2f7a8:	e0bffe17 	ldw	r2,-8(fp)
   2f7ac:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   2f7b0:	00000606 	br	2f7cc <alt_get_fd+0xa4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f7b4:	e0bffe17 	ldw	r2,-8(fp)
   2f7b8:	10800044 	addi	r2,r2,1
   2f7bc:	e0bffe15 	stw	r2,-8(fp)
   2f7c0:	e0bffe17 	ldw	r2,-8(fp)
   2f7c4:	10800810 	cmplti	r2,r2,32
   2f7c8:	103fdf1e 	bne	r2,zero,2f748 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2f7cc:	e0bffd17 	ldw	r2,-12(fp)
}
   2f7d0:	e037883a 	mov	sp,fp
   2f7d4:	df000017 	ldw	fp,0(sp)
   2f7d8:	dec00104 	addi	sp,sp,4
   2f7dc:	f800283a 	ret

0002f7e0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2f7e0:	defffb04 	addi	sp,sp,-20
   2f7e4:	df000415 	stw	fp,16(sp)
   2f7e8:	df000404 	addi	fp,sp,16
   2f7ec:	e13ffe15 	stw	r4,-8(fp)
   2f7f0:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2f7f4:	e0bfff17 	ldw	r2,-4(fp)
   2f7f8:	10840070 	cmpltui	r2,r2,4097
   2f7fc:	1000021e 	bne	r2,zero,2f808 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2f800:	00840004 	movi	r2,4096
   2f804:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2f808:	e0fffe17 	ldw	r3,-8(fp)
   2f80c:	e0bfff17 	ldw	r2,-4(fp)
   2f810:	1885883a 	add	r2,r3,r2
   2f814:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2f818:	e0bffe17 	ldw	r2,-8(fp)
   2f81c:	e0bffd15 	stw	r2,-12(fp)
   2f820:	00000506 	br	2f838 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2f824:	e0bffd17 	ldw	r2,-12(fp)
   2f828:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2f82c:	e0bffd17 	ldw	r2,-12(fp)
   2f830:	10800804 	addi	r2,r2,32
   2f834:	e0bffd15 	stw	r2,-12(fp)
   2f838:	e0fffd17 	ldw	r3,-12(fp)
   2f83c:	e0bffc17 	ldw	r2,-16(fp)
   2f840:	18bff836 	bltu	r3,r2,2f824 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2f844:	e0bffe17 	ldw	r2,-8(fp)
   2f848:	108007cc 	andi	r2,r2,31
   2f84c:	1005003a 	cmpeq	r2,r2,zero
   2f850:	1000021e 	bne	r2,zero,2f85c <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2f854:	e0bffd17 	ldw	r2,-12(fp)
   2f858:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2f85c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2f860:	e037883a 	mov	sp,fp
   2f864:	df000017 	ldw	fp,0(sp)
   2f868:	dec00104 	addi	sp,sp,4
   2f86c:	f800283a 	ret

0002f870 <atexit>:
   2f870:	200b883a 	mov	r5,r4
   2f874:	000d883a 	mov	r6,zero
   2f878:	0009883a 	mov	r4,zero
   2f87c:	000f883a 	mov	r7,zero
   2f880:	002f9301 	jmpi	2f930 <__register_exitproc>

0002f884 <exit>:
   2f884:	defffe04 	addi	sp,sp,-8
   2f888:	000b883a 	mov	r5,zero
   2f88c:	dc000015 	stw	r16,0(sp)
   2f890:	dfc00115 	stw	ra,4(sp)
   2f894:	2021883a 	mov	r16,r4
   2f898:	002fa680 	call	2fa68 <__call_exitprocs>
   2f89c:	008000f4 	movhi	r2,3
   2f8a0:	1086b004 	addi	r2,r2,6848
   2f8a4:	11000017 	ldw	r4,0(r2)
   2f8a8:	20800f17 	ldw	r2,60(r4)
   2f8ac:	10000126 	beq	r2,zero,2f8b4 <exit+0x30>
   2f8b0:	103ee83a 	callr	r2
   2f8b4:	8009883a 	mov	r4,r16
   2f8b8:	002fc580 	call	2fc58 <_exit>

0002f8bc <memcmp>:
   2f8bc:	00c000c4 	movi	r3,3
   2f8c0:	1980032e 	bgeu	r3,r6,2f8d0 <memcmp+0x14>
   2f8c4:	2144b03a 	or	r2,r4,r5
   2f8c8:	10c4703a 	and	r2,r2,r3
   2f8cc:	10000f26 	beq	r2,zero,2f90c <memcmp+0x50>
   2f8d0:	31ffffc4 	addi	r7,r6,-1
   2f8d4:	3000061e 	bne	r6,zero,2f8f0 <memcmp+0x34>
   2f8d8:	00000a06 	br	2f904 <memcmp+0x48>
   2f8dc:	39ffffc4 	addi	r7,r7,-1
   2f8e0:	00bfffc4 	movi	r2,-1
   2f8e4:	21000044 	addi	r4,r4,1
   2f8e8:	29400044 	addi	r5,r5,1
   2f8ec:	38800526 	beq	r7,r2,2f904 <memcmp+0x48>
   2f8f0:	20c00003 	ldbu	r3,0(r4)
   2f8f4:	28800003 	ldbu	r2,0(r5)
   2f8f8:	18bff826 	beq	r3,r2,2f8dc <memcmp+0x20>
   2f8fc:	1885c83a 	sub	r2,r3,r2
   2f900:	f800283a 	ret
   2f904:	0005883a 	mov	r2,zero
   2f908:	f800283a 	ret
   2f90c:	180f883a 	mov	r7,r3
   2f910:	20c00017 	ldw	r3,0(r4)
   2f914:	28800017 	ldw	r2,0(r5)
   2f918:	18bfed1e 	bne	r3,r2,2f8d0 <memcmp+0x14>
   2f91c:	31bfff04 	addi	r6,r6,-4
   2f920:	21000104 	addi	r4,r4,4
   2f924:	29400104 	addi	r5,r5,4
   2f928:	39bff936 	bltu	r7,r6,2f910 <memcmp+0x54>
   2f92c:	003fe806 	br	2f8d0 <memcmp+0x14>

0002f930 <__register_exitproc>:
   2f930:	defffa04 	addi	sp,sp,-24
   2f934:	008000f4 	movhi	r2,3
   2f938:	1086b004 	addi	r2,r2,6848
   2f93c:	dc000015 	stw	r16,0(sp)
   2f940:	14000017 	ldw	r16,0(r2)
   2f944:	dd000415 	stw	r20,16(sp)
   2f948:	2829883a 	mov	r20,r5
   2f94c:	81405217 	ldw	r5,328(r16)
   2f950:	dcc00315 	stw	r19,12(sp)
   2f954:	dc800215 	stw	r18,8(sp)
   2f958:	dc400115 	stw	r17,4(sp)
   2f95c:	dfc00515 	stw	ra,20(sp)
   2f960:	2023883a 	mov	r17,r4
   2f964:	3027883a 	mov	r19,r6
   2f968:	3825883a 	mov	r18,r7
   2f96c:	28002526 	beq	r5,zero,2fa04 <__register_exitproc+0xd4>
   2f970:	29000117 	ldw	r4,4(r5)
   2f974:	008007c4 	movi	r2,31
   2f978:	11002716 	blt	r2,r4,2fa18 <__register_exitproc+0xe8>
   2f97c:	8800101e 	bne	r17,zero,2f9c0 <__register_exitproc+0x90>
   2f980:	2105883a 	add	r2,r4,r4
   2f984:	1085883a 	add	r2,r2,r2
   2f988:	20c00044 	addi	r3,r4,1
   2f98c:	1145883a 	add	r2,r2,r5
   2f990:	0009883a 	mov	r4,zero
   2f994:	15000215 	stw	r20,8(r2)
   2f998:	28c00115 	stw	r3,4(r5)
   2f99c:	2005883a 	mov	r2,r4
   2f9a0:	dfc00517 	ldw	ra,20(sp)
   2f9a4:	dd000417 	ldw	r20,16(sp)
   2f9a8:	dcc00317 	ldw	r19,12(sp)
   2f9ac:	dc800217 	ldw	r18,8(sp)
   2f9b0:	dc400117 	ldw	r17,4(sp)
   2f9b4:	dc000017 	ldw	r16,0(sp)
   2f9b8:	dec00604 	addi	sp,sp,24
   2f9bc:	f800283a 	ret
   2f9c0:	29802204 	addi	r6,r5,136
   2f9c4:	00800044 	movi	r2,1
   2f9c8:	110e983a 	sll	r7,r2,r4
   2f9cc:	30c04017 	ldw	r3,256(r6)
   2f9d0:	2105883a 	add	r2,r4,r4
   2f9d4:	1085883a 	add	r2,r2,r2
   2f9d8:	1185883a 	add	r2,r2,r6
   2f9dc:	19c6b03a 	or	r3,r3,r7
   2f9e0:	14802015 	stw	r18,128(r2)
   2f9e4:	14c00015 	stw	r19,0(r2)
   2f9e8:	00800084 	movi	r2,2
   2f9ec:	30c04015 	stw	r3,256(r6)
   2f9f0:	88bfe31e 	bne	r17,r2,2f980 <__register_exitproc+0x50>
   2f9f4:	30804117 	ldw	r2,260(r6)
   2f9f8:	11c4b03a 	or	r2,r2,r7
   2f9fc:	30804115 	stw	r2,260(r6)
   2fa00:	003fdf06 	br	2f980 <__register_exitproc+0x50>
   2fa04:	008000f4 	movhi	r2,3
   2fa08:	10912c04 	addi	r2,r2,17584
   2fa0c:	100b883a 	mov	r5,r2
   2fa10:	80805215 	stw	r2,328(r16)
   2fa14:	003fd606 	br	2f970 <__register_exitproc+0x40>
   2fa18:	00800034 	movhi	r2,0
   2fa1c:	10800004 	addi	r2,r2,0
   2fa20:	1000021e 	bne	r2,zero,2fa2c <__register_exitproc+0xfc>
   2fa24:	013fffc4 	movi	r4,-1
   2fa28:	003fdc06 	br	2f99c <__register_exitproc+0x6c>
   2fa2c:	01006404 	movi	r4,400
   2fa30:	103ee83a 	callr	r2
   2fa34:	1007883a 	mov	r3,r2
   2fa38:	103ffa26 	beq	r2,zero,2fa24 <__register_exitproc+0xf4>
   2fa3c:	80805217 	ldw	r2,328(r16)
   2fa40:	180b883a 	mov	r5,r3
   2fa44:	18000115 	stw	zero,4(r3)
   2fa48:	18800015 	stw	r2,0(r3)
   2fa4c:	80c05215 	stw	r3,328(r16)
   2fa50:	18006215 	stw	zero,392(r3)
   2fa54:	18006315 	stw	zero,396(r3)
   2fa58:	0009883a 	mov	r4,zero
   2fa5c:	883fc826 	beq	r17,zero,2f980 <__register_exitproc+0x50>
   2fa60:	003fd706 	br	2f9c0 <__register_exitproc+0x90>

0002fa64 <register_fini>:
   2fa64:	f800283a 	ret

0002fa68 <__call_exitprocs>:
   2fa68:	008000f4 	movhi	r2,3
   2fa6c:	1086b004 	addi	r2,r2,6848
   2fa70:	10800017 	ldw	r2,0(r2)
   2fa74:	defff304 	addi	sp,sp,-52
   2fa78:	df000b15 	stw	fp,44(sp)
   2fa7c:	d8800115 	stw	r2,4(sp)
   2fa80:	00800034 	movhi	r2,0
   2fa84:	10800004 	addi	r2,r2,0
   2fa88:	1005003a 	cmpeq	r2,r2,zero
   2fa8c:	d8800215 	stw	r2,8(sp)
   2fa90:	d8800117 	ldw	r2,4(sp)
   2fa94:	dd400815 	stw	r21,32(sp)
   2fa98:	dd000715 	stw	r20,28(sp)
   2fa9c:	10805204 	addi	r2,r2,328
   2faa0:	dfc00c15 	stw	ra,48(sp)
   2faa4:	ddc00a15 	stw	r23,40(sp)
   2faa8:	dd800915 	stw	r22,36(sp)
   2faac:	dcc00615 	stw	r19,24(sp)
   2fab0:	dc800515 	stw	r18,20(sp)
   2fab4:	dc400415 	stw	r17,16(sp)
   2fab8:	dc000315 	stw	r16,12(sp)
   2fabc:	282b883a 	mov	r21,r5
   2fac0:	2039883a 	mov	fp,r4
   2fac4:	d8800015 	stw	r2,0(sp)
   2fac8:	2829003a 	cmpeq	r20,r5,zero
   2facc:	d8800117 	ldw	r2,4(sp)
   2fad0:	14405217 	ldw	r17,328(r2)
   2fad4:	88001026 	beq	r17,zero,2fb18 <__call_exitprocs+0xb0>
   2fad8:	ddc00017 	ldw	r23,0(sp)
   2fadc:	88800117 	ldw	r2,4(r17)
   2fae0:	8c802204 	addi	r18,r17,136
   2fae4:	143fffc4 	addi	r16,r2,-1
   2fae8:	80000916 	blt	r16,zero,2fb10 <__call_exitprocs+0xa8>
   2faec:	05bfffc4 	movi	r22,-1
   2faf0:	a000151e 	bne	r20,zero,2fb48 <__call_exitprocs+0xe0>
   2faf4:	8409883a 	add	r4,r16,r16
   2faf8:	2105883a 	add	r2,r4,r4
   2fafc:	1485883a 	add	r2,r2,r18
   2fb00:	10c02017 	ldw	r3,128(r2)
   2fb04:	a8c01126 	beq	r21,r3,2fb4c <__call_exitprocs+0xe4>
   2fb08:	843fffc4 	addi	r16,r16,-1
   2fb0c:	85bff81e 	bne	r16,r22,2faf0 <__call_exitprocs+0x88>
   2fb10:	d8800217 	ldw	r2,8(sp)
   2fb14:	10003126 	beq	r2,zero,2fbdc <__call_exitprocs+0x174>
   2fb18:	dfc00c17 	ldw	ra,48(sp)
   2fb1c:	df000b17 	ldw	fp,44(sp)
   2fb20:	ddc00a17 	ldw	r23,40(sp)
   2fb24:	dd800917 	ldw	r22,36(sp)
   2fb28:	dd400817 	ldw	r21,32(sp)
   2fb2c:	dd000717 	ldw	r20,28(sp)
   2fb30:	dcc00617 	ldw	r19,24(sp)
   2fb34:	dc800517 	ldw	r18,20(sp)
   2fb38:	dc400417 	ldw	r17,16(sp)
   2fb3c:	dc000317 	ldw	r16,12(sp)
   2fb40:	dec00d04 	addi	sp,sp,52
   2fb44:	f800283a 	ret
   2fb48:	8409883a 	add	r4,r16,r16
   2fb4c:	88c00117 	ldw	r3,4(r17)
   2fb50:	2105883a 	add	r2,r4,r4
   2fb54:	1445883a 	add	r2,r2,r17
   2fb58:	18ffffc4 	addi	r3,r3,-1
   2fb5c:	11800217 	ldw	r6,8(r2)
   2fb60:	1c001526 	beq	r3,r16,2fbb8 <__call_exitprocs+0x150>
   2fb64:	10000215 	stw	zero,8(r2)
   2fb68:	303fe726 	beq	r6,zero,2fb08 <__call_exitprocs+0xa0>
   2fb6c:	00c00044 	movi	r3,1
   2fb70:	1c06983a 	sll	r3,r3,r16
   2fb74:	90804017 	ldw	r2,256(r18)
   2fb78:	8cc00117 	ldw	r19,4(r17)
   2fb7c:	1884703a 	and	r2,r3,r2
   2fb80:	10001426 	beq	r2,zero,2fbd4 <__call_exitprocs+0x16c>
   2fb84:	90804117 	ldw	r2,260(r18)
   2fb88:	1884703a 	and	r2,r3,r2
   2fb8c:	10000c1e 	bne	r2,zero,2fbc0 <__call_exitprocs+0x158>
   2fb90:	2105883a 	add	r2,r4,r4
   2fb94:	1485883a 	add	r2,r2,r18
   2fb98:	11400017 	ldw	r5,0(r2)
   2fb9c:	e009883a 	mov	r4,fp
   2fba0:	303ee83a 	callr	r6
   2fba4:	88800117 	ldw	r2,4(r17)
   2fba8:	98bfc81e 	bne	r19,r2,2facc <__call_exitprocs+0x64>
   2fbac:	b8800017 	ldw	r2,0(r23)
   2fbb0:	147fd526 	beq	r2,r17,2fb08 <__call_exitprocs+0xa0>
   2fbb4:	003fc506 	br	2facc <__call_exitprocs+0x64>
   2fbb8:	8c000115 	stw	r16,4(r17)
   2fbbc:	003fea06 	br	2fb68 <__call_exitprocs+0x100>
   2fbc0:	2105883a 	add	r2,r4,r4
   2fbc4:	1485883a 	add	r2,r2,r18
   2fbc8:	11000017 	ldw	r4,0(r2)
   2fbcc:	303ee83a 	callr	r6
   2fbd0:	003ff406 	br	2fba4 <__call_exitprocs+0x13c>
   2fbd4:	303ee83a 	callr	r6
   2fbd8:	003ff206 	br	2fba4 <__call_exitprocs+0x13c>
   2fbdc:	88800117 	ldw	r2,4(r17)
   2fbe0:	1000081e 	bne	r2,zero,2fc04 <__call_exitprocs+0x19c>
   2fbe4:	89000017 	ldw	r4,0(r17)
   2fbe8:	20000726 	beq	r4,zero,2fc08 <__call_exitprocs+0x1a0>
   2fbec:	b9000015 	stw	r4,0(r23)
   2fbf0:	8809883a 	mov	r4,r17
   2fbf4:	00000000 	call	0 <__alt_mem_RAM-0x20000>
   2fbf8:	bc400017 	ldw	r17,0(r23)
   2fbfc:	883fb71e 	bne	r17,zero,2fadc <__call_exitprocs+0x74>
   2fc00:	003fc506 	br	2fb18 <__call_exitprocs+0xb0>
   2fc04:	89000017 	ldw	r4,0(r17)
   2fc08:	882f883a 	mov	r23,r17
   2fc0c:	2023883a 	mov	r17,r4
   2fc10:	883fb21e 	bne	r17,zero,2fadc <__call_exitprocs+0x74>
   2fc14:	003fc006 	br	2fb18 <__call_exitprocs+0xb0>

0002fc18 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   2fc18:	defffd04 	addi	sp,sp,-12
   2fc1c:	df000215 	stw	fp,8(sp)
   2fc20:	df000204 	addi	fp,sp,8
   2fc24:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   2fc28:	e0bfff17 	ldw	r2,-4(fp)
   2fc2c:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2fc30:	e0bffe17 	ldw	r2,-8(fp)
   2fc34:	1005003a 	cmpeq	r2,r2,zero
   2fc38:	1000021e 	bne	r2,zero,2fc44 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   2fc3c:	002af070 	cmpltui	zero,zero,43969
   2fc40:	00000106 	br	2fc48 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   2fc44:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   2fc48:	e037883a 	mov	sp,fp
   2fc4c:	df000017 	ldw	fp,0(sp)
   2fc50:	dec00104 	addi	sp,sp,4
   2fc54:	f800283a 	ret

0002fc58 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2fc58:	defffd04 	addi	sp,sp,-12
   2fc5c:	dfc00215 	stw	ra,8(sp)
   2fc60:	df000115 	stw	fp,4(sp)
   2fc64:	df000104 	addi	fp,sp,4
   2fc68:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   2fc6c:	e13fff17 	ldw	r4,-4(fp)
   2fc70:	002fc180 	call	2fc18 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2fc74:	003fff06 	br	2fc74 <_exit+0x1c>
   2fc78:	0002fa64 	muli	zero,zero,3049
